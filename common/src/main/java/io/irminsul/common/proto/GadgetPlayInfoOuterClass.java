// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: GadgetPlayInfo.proto
// Protobuf Java Version: 4.27.2

package io.irminsul.common.proto;

public final class GadgetPlayInfoOuterClass {
  private GadgetPlayInfoOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      GadgetPlayInfoOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GadgetPlayInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GadgetPlayInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 play_type = 1;</code>
     * @return The playType.
     */
    int getPlayType();

    /**
     * <code>uint32 duration = 2;</code>
     * @return The duration.
     */
    int getDuration();

    /**
     * <code>repeated uint32 progress_stage_list = 3;</code>
     * @return A list containing the progressStageList.
     */
    java.util.List<Integer> getProgressStageListList();
    /**
     * <code>repeated uint32 progress_stage_list = 3;</code>
     * @return The count of progressStageList.
     */
    int getProgressStageListCount();
    /**
     * <code>repeated uint32 progress_stage_list = 3;</code>
     * @param index The index of the element to return.
     * @return The progressStageList at the given index.
     */
    int getProgressStageList(int index);

    /**
     * <code>uint32 start_cd = 4;</code>
     * @return The startCd.
     */
    int getStartCd();

    /**
     * <code>uint32 start_time = 5;</code>
     * @return The startTime.
     */
    int getStartTime();

    /**
     * <code>uint32 progress = 6;</code>
     * @return The progress.
     */
    int getProgress();

    /**
     * <code>optional .GadgetCrucibleInfo crucible_info = 21;</code>
     * @return Whether the crucibleInfo field is set.
     */
    boolean hasCrucibleInfo();
    /**
     * <code>optional .GadgetCrucibleInfo crucible_info = 21;</code>
     * @return The crucibleInfo.
     */
    GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo getCrucibleInfo();
    /**
     * <code>optional .GadgetCrucibleInfo crucible_info = 21;</code>
     */
    GadgetCrucibleInfoOuterClass.GadgetCrucibleInfoOrBuilder getCrucibleInfoOrBuilder();
  }
  /**
   * <pre>
   * Obf: LJJODNPIMAI
   * </pre>
   *
   * Protobuf type {@code GadgetPlayInfo}
   */
  public static final class GadgetPlayInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:GadgetPlayInfo)
      GadgetPlayInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 2,
        /* suffix= */ "",
        GadgetPlayInfo.class.getName());
    }
    // Use GadgetPlayInfo.newBuilder() to construct.
    private GadgetPlayInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GadgetPlayInfo() {
      progressStageList_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return GadgetPlayInfoOuterClass.internal_static_GadgetPlayInfo_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return GadgetPlayInfoOuterClass.internal_static_GadgetPlayInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              GadgetPlayInfo.class, Builder.class);
    }

    private int bitField0_;
    public static final int PLAY_TYPE_FIELD_NUMBER = 1;
    private int playType_ = 0;
    /**
     * <code>uint32 play_type = 1;</code>
     * @return The playType.
     */
    @Override
    public int getPlayType() {
      return playType_;
    }

    public static final int DURATION_FIELD_NUMBER = 2;
    private int duration_ = 0;
    /**
     * <code>uint32 duration = 2;</code>
     * @return The duration.
     */
    @Override
    public int getDuration() {
      return duration_;
    }

    public static final int PROGRESS_STAGE_LIST_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList progressStageList_ =
        emptyIntList();
    /**
     * <code>repeated uint32 progress_stage_list = 3;</code>
     * @return A list containing the progressStageList.
     */
    @Override
    public java.util.List<Integer>
        getProgressStageListList() {
      return progressStageList_;
    }
    /**
     * <code>repeated uint32 progress_stage_list = 3;</code>
     * @return The count of progressStageList.
     */
    public int getProgressStageListCount() {
      return progressStageList_.size();
    }
    /**
     * <code>repeated uint32 progress_stage_list = 3;</code>
     * @param index The index of the element to return.
     * @return The progressStageList at the given index.
     */
    public int getProgressStageList(int index) {
      return progressStageList_.getInt(index);
    }
    private int progressStageListMemoizedSerializedSize = -1;

    public static final int START_CD_FIELD_NUMBER = 4;
    private int startCd_ = 0;
    /**
     * <code>uint32 start_cd = 4;</code>
     * @return The startCd.
     */
    @Override
    public int getStartCd() {
      return startCd_;
    }

    public static final int START_TIME_FIELD_NUMBER = 5;
    private int startTime_ = 0;
    /**
     * <code>uint32 start_time = 5;</code>
     * @return The startTime.
     */
    @Override
    public int getStartTime() {
      return startTime_;
    }

    public static final int PROGRESS_FIELD_NUMBER = 6;
    private int progress_ = 0;
    /**
     * <code>uint32 progress = 6;</code>
     * @return The progress.
     */
    @Override
    public int getProgress() {
      return progress_;
    }

    public static final int CRUCIBLE_INFO_FIELD_NUMBER = 21;
    private GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo crucibleInfo_;
    /**
     * <code>optional .GadgetCrucibleInfo crucible_info = 21;</code>
     * @return Whether the crucibleInfo field is set.
     */
    @Override
    public boolean hasCrucibleInfo() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .GadgetCrucibleInfo crucible_info = 21;</code>
     * @return The crucibleInfo.
     */
    @Override
    public GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo getCrucibleInfo() {
      return crucibleInfo_ == null ? GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo.getDefaultInstance() : crucibleInfo_;
    }
    /**
     * <code>optional .GadgetCrucibleInfo crucible_info = 21;</code>
     */
    @Override
    public GadgetCrucibleInfoOuterClass.GadgetCrucibleInfoOrBuilder getCrucibleInfoOrBuilder() {
      return crucibleInfo_ == null ? GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo.getDefaultInstance() : crucibleInfo_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (playType_ != 0) {
        output.writeUInt32(1, playType_);
      }
      if (duration_ != 0) {
        output.writeUInt32(2, duration_);
      }
      if (getProgressStageListList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(progressStageListMemoizedSerializedSize);
      }
      for (int i = 0; i < progressStageList_.size(); i++) {
        output.writeUInt32NoTag(progressStageList_.getInt(i));
      }
      if (startCd_ != 0) {
        output.writeUInt32(4, startCd_);
      }
      if (startTime_ != 0) {
        output.writeUInt32(5, startTime_);
      }
      if (progress_ != 0) {
        output.writeUInt32(6, progress_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(21, getCrucibleInfo());
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (playType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, playType_);
      }
      if (duration_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, duration_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < progressStageList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(progressStageList_.getInt(i));
        }
        size += dataSize;
        if (!getProgressStageListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        progressStageListMemoizedSerializedSize = dataSize;
      }
      if (startCd_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, startCd_);
      }
      if (startTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, startTime_);
      }
      if (progress_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, progress_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getCrucibleInfo());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof GadgetPlayInfo)) {
        return super.equals(obj);
      }
      GadgetPlayInfo other = (GadgetPlayInfo) obj;

      if (getPlayType()
          != other.getPlayType()) return false;
      if (getDuration()
          != other.getDuration()) return false;
      if (!getProgressStageListList()
          .equals(other.getProgressStageListList())) return false;
      if (getStartCd()
          != other.getStartCd()) return false;
      if (getStartTime()
          != other.getStartTime()) return false;
      if (getProgress()
          != other.getProgress()) return false;
      if (hasCrucibleInfo() != other.hasCrucibleInfo()) return false;
      if (hasCrucibleInfo()) {
        if (!getCrucibleInfo()
            .equals(other.getCrucibleInfo())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PLAY_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getPlayType();
      hash = (37 * hash) + DURATION_FIELD_NUMBER;
      hash = (53 * hash) + getDuration();
      if (getProgressStageListCount() > 0) {
        hash = (37 * hash) + PROGRESS_STAGE_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getProgressStageListList().hashCode();
      }
      hash = (37 * hash) + START_CD_FIELD_NUMBER;
      hash = (53 * hash) + getStartCd();
      hash = (37 * hash) + START_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getStartTime();
      hash = (37 * hash) + PROGRESS_FIELD_NUMBER;
      hash = (53 * hash) + getProgress();
      if (hasCrucibleInfo()) {
        hash = (37 * hash) + CRUCIBLE_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getCrucibleInfo().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static GadgetPlayInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GadgetPlayInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GadgetPlayInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GadgetPlayInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GadgetPlayInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static GadgetPlayInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static GadgetPlayInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static GadgetPlayInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static GadgetPlayInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static GadgetPlayInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static GadgetPlayInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static GadgetPlayInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(GadgetPlayInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Obf: LJJODNPIMAI
     * </pre>
     *
     * Protobuf type {@code GadgetPlayInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GadgetPlayInfo)
        GadgetPlayInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return GadgetPlayInfoOuterClass.internal_static_GadgetPlayInfo_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return GadgetPlayInfoOuterClass.internal_static_GadgetPlayInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                GadgetPlayInfo.class, Builder.class);
      }

      // Construct using io.irminsul.common.proto.GadgetPlayInfoOuterClass.GadgetPlayInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getCrucibleInfoFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        playType_ = 0;
        duration_ = 0;
        progressStageList_ = emptyIntList();
        startCd_ = 0;
        startTime_ = 0;
        progress_ = 0;
        crucibleInfo_ = null;
        if (crucibleInfoBuilder_ != null) {
          crucibleInfoBuilder_.dispose();
          crucibleInfoBuilder_ = null;
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return GadgetPlayInfoOuterClass.internal_static_GadgetPlayInfo_descriptor;
      }

      @Override
      public GadgetPlayInfo getDefaultInstanceForType() {
        return GadgetPlayInfo.getDefaultInstance();
      }

      @Override
      public GadgetPlayInfo build() {
        GadgetPlayInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public GadgetPlayInfo buildPartial() {
        GadgetPlayInfo result = new GadgetPlayInfo(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(GadgetPlayInfo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.playType_ = playType_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.duration_ = duration_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          progressStageList_.makeImmutable();
          result.progressStageList_ = progressStageList_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.startCd_ = startCd_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.startTime_ = startTime_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.progress_ = progress_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.crucibleInfo_ = crucibleInfoBuilder_ == null
              ? crucibleInfo_
              : crucibleInfoBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof GadgetPlayInfo) {
          return mergeFrom((GadgetPlayInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(GadgetPlayInfo other) {
        if (other == GadgetPlayInfo.getDefaultInstance()) return this;
        if (other.getPlayType() != 0) {
          setPlayType(other.getPlayType());
        }
        if (other.getDuration() != 0) {
          setDuration(other.getDuration());
        }
        if (!other.progressStageList_.isEmpty()) {
          if (progressStageList_.isEmpty()) {
            progressStageList_ = other.progressStageList_;
            progressStageList_.makeImmutable();
            bitField0_ |= 0x00000004;
          } else {
            ensureProgressStageListIsMutable();
            progressStageList_.addAll(other.progressStageList_);
          }
          onChanged();
        }
        if (other.getStartCd() != 0) {
          setStartCd(other.getStartCd());
        }
        if (other.getStartTime() != 0) {
          setStartTime(other.getStartTime());
        }
        if (other.getProgress() != 0) {
          setProgress(other.getProgress());
        }
        if (other.hasCrucibleInfo()) {
          mergeCrucibleInfo(other.getCrucibleInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                playType_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                duration_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                int v = input.readUInt32();
                ensureProgressStageListIsMutable();
                progressStageList_.addInt(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureProgressStageListIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  progressStageList_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 32: {
                startCd_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                startTime_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                progress_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 170: {
                input.readMessage(
                    getCrucibleInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000040;
                break;
              } // case 170
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int playType_ ;
      /**
       * <code>uint32 play_type = 1;</code>
       * @return The playType.
       */
      @Override
      public int getPlayType() {
        return playType_;
      }
      /**
       * <code>uint32 play_type = 1;</code>
       * @param value The playType to set.
       * @return This builder for chaining.
       */
      public Builder setPlayType(int value) {

        playType_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 play_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlayType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        playType_ = 0;
        onChanged();
        return this;
      }

      private int duration_ ;
      /**
       * <code>uint32 duration = 2;</code>
       * @return The duration.
       */
      @Override
      public int getDuration() {
        return duration_;
      }
      /**
       * <code>uint32 duration = 2;</code>
       * @param value The duration to set.
       * @return This builder for chaining.
       */
      public Builder setDuration(int value) {

        duration_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 duration = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDuration() {
        bitField0_ = (bitField0_ & ~0x00000002);
        duration_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList progressStageList_ = emptyIntList();
      private void ensureProgressStageListIsMutable() {
        if (!progressStageList_.isModifiable()) {
          progressStageList_ = makeMutableCopy(progressStageList_);
        }
        bitField0_ |= 0x00000004;
      }
      /**
       * <code>repeated uint32 progress_stage_list = 3;</code>
       * @return A list containing the progressStageList.
       */
      public java.util.List<Integer>
          getProgressStageListList() {
        progressStageList_.makeImmutable();
        return progressStageList_;
      }
      /**
       * <code>repeated uint32 progress_stage_list = 3;</code>
       * @return The count of progressStageList.
       */
      public int getProgressStageListCount() {
        return progressStageList_.size();
      }
      /**
       * <code>repeated uint32 progress_stage_list = 3;</code>
       * @param index The index of the element to return.
       * @return The progressStageList at the given index.
       */
      public int getProgressStageList(int index) {
        return progressStageList_.getInt(index);
      }
      /**
       * <code>repeated uint32 progress_stage_list = 3;</code>
       * @param index The index to set the value at.
       * @param value The progressStageList to set.
       * @return This builder for chaining.
       */
      public Builder setProgressStageList(
          int index, int value) {

        ensureProgressStageListIsMutable();
        progressStageList_.setInt(index, value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 progress_stage_list = 3;</code>
       * @param value The progressStageList to add.
       * @return This builder for chaining.
       */
      public Builder addProgressStageList(int value) {

        ensureProgressStageListIsMutable();
        progressStageList_.addInt(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 progress_stage_list = 3;</code>
       * @param values The progressStageList to add.
       * @return This builder for chaining.
       */
      public Builder addAllProgressStageList(
          Iterable<? extends Integer> values) {
        ensureProgressStageListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, progressStageList_);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 progress_stage_list = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearProgressStageList() {
        progressStageList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int startCd_ ;
      /**
       * <code>uint32 start_cd = 4;</code>
       * @return The startCd.
       */
      @Override
      public int getStartCd() {
        return startCd_;
      }
      /**
       * <code>uint32 start_cd = 4;</code>
       * @param value The startCd to set.
       * @return This builder for chaining.
       */
      public Builder setStartCd(int value) {

        startCd_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 start_cd = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartCd() {
        bitField0_ = (bitField0_ & ~0x00000008);
        startCd_ = 0;
        onChanged();
        return this;
      }

      private int startTime_ ;
      /**
       * <code>uint32 start_time = 5;</code>
       * @return The startTime.
       */
      @Override
      public int getStartTime() {
        return startTime_;
      }
      /**
       * <code>uint32 start_time = 5;</code>
       * @param value The startTime to set.
       * @return This builder for chaining.
       */
      public Builder setStartTime(int value) {

        startTime_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 start_time = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        startTime_ = 0;
        onChanged();
        return this;
      }

      private int progress_ ;
      /**
       * <code>uint32 progress = 6;</code>
       * @return The progress.
       */
      @Override
      public int getProgress() {
        return progress_;
      }
      /**
       * <code>uint32 progress = 6;</code>
       * @param value The progress to set.
       * @return This builder for chaining.
       */
      public Builder setProgress(int value) {

        progress_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 progress = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearProgress() {
        bitField0_ = (bitField0_ & ~0x00000020);
        progress_ = 0;
        onChanged();
        return this;
      }

      private GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo crucibleInfo_;
      private com.google.protobuf.SingleFieldBuilder<
          GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo, GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo.Builder, GadgetCrucibleInfoOuterClass.GadgetCrucibleInfoOrBuilder> crucibleInfoBuilder_;
      /**
       * <code>optional .GadgetCrucibleInfo crucible_info = 21;</code>
       * @return Whether the crucibleInfo field is set.
       */
      public boolean hasCrucibleInfo() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional .GadgetCrucibleInfo crucible_info = 21;</code>
       * @return The crucibleInfo.
       */
      public GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo getCrucibleInfo() {
        if (crucibleInfoBuilder_ == null) {
          return crucibleInfo_ == null ? GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo.getDefaultInstance() : crucibleInfo_;
        } else {
          return crucibleInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .GadgetCrucibleInfo crucible_info = 21;</code>
       */
      public Builder setCrucibleInfo(GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo value) {
        if (crucibleInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          crucibleInfo_ = value;
        } else {
          crucibleInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional .GadgetCrucibleInfo crucible_info = 21;</code>
       */
      public Builder setCrucibleInfo(
          GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo.Builder builderForValue) {
        if (crucibleInfoBuilder_ == null) {
          crucibleInfo_ = builderForValue.build();
        } else {
          crucibleInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional .GadgetCrucibleInfo crucible_info = 21;</code>
       */
      public Builder mergeCrucibleInfo(GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo value) {
        if (crucibleInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0) &&
            crucibleInfo_ != null &&
            crucibleInfo_ != GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo.getDefaultInstance()) {
            getCrucibleInfoBuilder().mergeFrom(value);
          } else {
            crucibleInfo_ = value;
          }
        } else {
          crucibleInfoBuilder_.mergeFrom(value);
        }
        if (crucibleInfo_ != null) {
          bitField0_ |= 0x00000040;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .GadgetCrucibleInfo crucible_info = 21;</code>
       */
      public Builder clearCrucibleInfo() {
        bitField0_ = (bitField0_ & ~0x00000040);
        crucibleInfo_ = null;
        if (crucibleInfoBuilder_ != null) {
          crucibleInfoBuilder_.dispose();
          crucibleInfoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .GadgetCrucibleInfo crucible_info = 21;</code>
       */
      public GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo.Builder getCrucibleInfoBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getCrucibleInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .GadgetCrucibleInfo crucible_info = 21;</code>
       */
      public GadgetCrucibleInfoOuterClass.GadgetCrucibleInfoOrBuilder getCrucibleInfoOrBuilder() {
        if (crucibleInfoBuilder_ != null) {
          return crucibleInfoBuilder_.getMessageOrBuilder();
        } else {
          return crucibleInfo_ == null ?
              GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo.getDefaultInstance() : crucibleInfo_;
        }
      }
      /**
       * <code>optional .GadgetCrucibleInfo crucible_info = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo, GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo.Builder, GadgetCrucibleInfoOuterClass.GadgetCrucibleInfoOrBuilder>
          getCrucibleInfoFieldBuilder() {
        if (crucibleInfoBuilder_ == null) {
          crucibleInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo, GadgetCrucibleInfoOuterClass.GadgetCrucibleInfo.Builder, GadgetCrucibleInfoOuterClass.GadgetCrucibleInfoOrBuilder>(
                  getCrucibleInfo(),
                  getParentForChildren(),
                  isClean());
          crucibleInfo_ = null;
        }
        return crucibleInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:GadgetPlayInfo)
    }

    // @@protoc_insertion_point(class_scope:GadgetPlayInfo)
    private static final GadgetPlayInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new GadgetPlayInfo();
    }

    public static GadgetPlayInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GadgetPlayInfo>
        PARSER = new com.google.protobuf.AbstractParser<GadgetPlayInfo>() {
      @Override
      public GadgetPlayInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GadgetPlayInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<GadgetPlayInfo> getParserForType() {
      return PARSER;
    }

    @Override
    public GadgetPlayInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GadgetPlayInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GadgetPlayInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\024GadgetPlayInfo.proto\032\030GadgetCrucibleIn" +
      "fo.proto\"\315\001\n\016GadgetPlayInfo\022\021\n\tplay_type" +
      "\030\001 \001(\r\022\020\n\010duration\030\002 \001(\r\022\033\n\023progress_sta" +
      "ge_list\030\003 \003(\r\022\020\n\010start_cd\030\004 \001(\r\022\022\n\nstart" +
      "_time\030\005 \001(\r\022\020\n\010progress\030\006 \001(\r\022/\n\rcrucibl" +
      "e_info\030\025 \001(\0132\023.GadgetCrucibleInfoH\000\210\001\001B\020" +
      "\n\016_crucible_infoB\032\n\030io.irminsul.common.p" +
      "rotob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          GadgetCrucibleInfoOuterClass.getDescriptor(),
        });
    internal_static_GadgetPlayInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_GadgetPlayInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_GadgetPlayInfo_descriptor,
        new String[] { "PlayType", "Duration", "ProgressStageList", "StartCd", "StartTime", "Progress", "CrucibleInfo", });
    descriptor.resolveAllFeaturesImmutable();
    GadgetCrucibleInfoOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
