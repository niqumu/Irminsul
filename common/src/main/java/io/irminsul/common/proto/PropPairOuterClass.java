// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: PropPair.proto
// Protobuf Java Version: 4.27.2

package io.irminsul.common.proto;

public final class PropPairOuterClass {
  private PropPairOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      PropPairOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PropPairOrBuilder extends
      // @@protoc_insertion_point(interface_extends:PropPair)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 type = 1;</code>
     * @return The type.
     */
    int getType();

    /**
     * <code>.PropValue prop_value = 2;</code>
     * @return Whether the propValue field is set.
     */
    boolean hasPropValue();
    /**
     * <code>.PropValue prop_value = 2;</code>
     * @return The propValue.
     */
    PropValueOuterClass.PropValue getPropValue();
    /**
     * <code>.PropValue prop_value = 2;</code>
     */
    PropValueOuterClass.PropValueOrBuilder getPropValueOrBuilder();
  }
  /**
   * <pre>
   * Obf: OIKHOKIPKDK
   * </pre>
   *
   * Protobuf type {@code PropPair}
   */
  public static final class PropPair extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:PropPair)
      PropPairOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 2,
        /* suffix= */ "",
        PropPair.class.getName());
    }
    // Use PropPair.newBuilder() to construct.
    private PropPair(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PropPair() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return PropPairOuterClass.internal_static_PropPair_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return PropPairOuterClass.internal_static_PropPair_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              PropPair.class, Builder.class);
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_ = 0;
    /**
     * <code>uint32 type = 1;</code>
     * @return The type.
     */
    @Override
    public int getType() {
      return type_;
    }

    public static final int PROP_VALUE_FIELD_NUMBER = 2;
    private PropValueOuterClass.PropValue propValue_;
    /**
     * <code>.PropValue prop_value = 2;</code>
     * @return Whether the propValue field is set.
     */
    @Override
    public boolean hasPropValue() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.PropValue prop_value = 2;</code>
     * @return The propValue.
     */
    @Override
    public PropValueOuterClass.PropValue getPropValue() {
      return propValue_ == null ? PropValueOuterClass.PropValue.getDefaultInstance() : propValue_;
    }
    /**
     * <code>.PropValue prop_value = 2;</code>
     */
    @Override
    public PropValueOuterClass.PropValueOrBuilder getPropValueOrBuilder() {
      return propValue_ == null ? PropValueOuterClass.PropValue.getDefaultInstance() : propValue_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != 0) {
        output.writeUInt32(1, type_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getPropValue());
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPropValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof PropPair)) {
        return super.equals(obj);
      }
      PropPair other = (PropPair) obj;

      if (getType()
          != other.getType()) return false;
      if (hasPropValue() != other.hasPropValue()) return false;
      if (hasPropValue()) {
        if (!getPropValue()
            .equals(other.getPropValue())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      if (hasPropValue()) {
        hash = (37 * hash) + PROP_VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getPropValue().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static PropPair parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PropPair parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PropPair parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PropPair parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PropPair parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static PropPair parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static PropPair parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static PropPair parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static PropPair parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static PropPair parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static PropPair parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static PropPair parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(PropPair prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Obf: OIKHOKIPKDK
     * </pre>
     *
     * Protobuf type {@code PropPair}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:PropPair)
        PropPairOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return PropPairOuterClass.internal_static_PropPair_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return PropPairOuterClass.internal_static_PropPair_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                PropPair.class, Builder.class);
      }

      // Construct using io.irminsul.common.proto.PropPairOuterClass.PropPair.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getPropValueFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = 0;
        propValue_ = null;
        if (propValueBuilder_ != null) {
          propValueBuilder_.dispose();
          propValueBuilder_ = null;
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return PropPairOuterClass.internal_static_PropPair_descriptor;
      }

      @Override
      public PropPair getDefaultInstanceForType() {
        return PropPair.getDefaultInstance();
      }

      @Override
      public PropPair build() {
        PropPair result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public PropPair buildPartial() {
        PropPair result = new PropPair(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(PropPair result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.propValue_ = propValueBuilder_ == null
              ? propValue_
              : propValueBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof PropPair) {
          return mergeFrom((PropPair)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(PropPair other) {
        if (other == PropPair.getDefaultInstance()) return this;
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.hasPropValue()) {
          mergePropValue(other.getPropValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                type_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getPropValueFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int type_ ;
      /**
       * <code>uint32 type = 1;</code>
       * @return The type.
       */
      @Override
      public int getType() {
        return type_;
      }
      /**
       * <code>uint32 type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {

        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private PropValueOuterClass.PropValue propValue_;
      private com.google.protobuf.SingleFieldBuilder<
          PropValueOuterClass.PropValue, PropValueOuterClass.PropValue.Builder, PropValueOuterClass.PropValueOrBuilder> propValueBuilder_;
      /**
       * <code>.PropValue prop_value = 2;</code>
       * @return Whether the propValue field is set.
       */
      public boolean hasPropValue() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.PropValue prop_value = 2;</code>
       * @return The propValue.
       */
      public PropValueOuterClass.PropValue getPropValue() {
        if (propValueBuilder_ == null) {
          return propValue_ == null ? PropValueOuterClass.PropValue.getDefaultInstance() : propValue_;
        } else {
          return propValueBuilder_.getMessage();
        }
      }
      /**
       * <code>.PropValue prop_value = 2;</code>
       */
      public Builder setPropValue(PropValueOuterClass.PropValue value) {
        if (propValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          propValue_ = value;
        } else {
          propValueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.PropValue prop_value = 2;</code>
       */
      public Builder setPropValue(
          PropValueOuterClass.PropValue.Builder builderForValue) {
        if (propValueBuilder_ == null) {
          propValue_ = builderForValue.build();
        } else {
          propValueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.PropValue prop_value = 2;</code>
       */
      public Builder mergePropValue(PropValueOuterClass.PropValue value) {
        if (propValueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            propValue_ != null &&
            propValue_ != PropValueOuterClass.PropValue.getDefaultInstance()) {
            getPropValueBuilder().mergeFrom(value);
          } else {
            propValue_ = value;
          }
        } else {
          propValueBuilder_.mergeFrom(value);
        }
        if (propValue_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.PropValue prop_value = 2;</code>
       */
      public Builder clearPropValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        propValue_ = null;
        if (propValueBuilder_ != null) {
          propValueBuilder_.dispose();
          propValueBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.PropValue prop_value = 2;</code>
       */
      public PropValueOuterClass.PropValue.Builder getPropValueBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getPropValueFieldBuilder().getBuilder();
      }
      /**
       * <code>.PropValue prop_value = 2;</code>
       */
      public PropValueOuterClass.PropValueOrBuilder getPropValueOrBuilder() {
        if (propValueBuilder_ != null) {
          return propValueBuilder_.getMessageOrBuilder();
        } else {
          return propValue_ == null ?
              PropValueOuterClass.PropValue.getDefaultInstance() : propValue_;
        }
      }
      /**
       * <code>.PropValue prop_value = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          PropValueOuterClass.PropValue, PropValueOuterClass.PropValue.Builder, PropValueOuterClass.PropValueOrBuilder>
          getPropValueFieldBuilder() {
        if (propValueBuilder_ == null) {
          propValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              PropValueOuterClass.PropValue, PropValueOuterClass.PropValue.Builder, PropValueOuterClass.PropValueOrBuilder>(
                  getPropValue(),
                  getParentForChildren(),
                  isClean());
          propValue_ = null;
        }
        return propValueBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:PropPair)
    }

    // @@protoc_insertion_point(class_scope:PropPair)
    private static final PropPair DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PropPair();
    }

    public static PropPair getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PropPair>
        PARSER = new com.google.protobuf.AbstractParser<PropPair>() {
      @Override
      public PropPair parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PropPair> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<PropPair> getParserForType() {
      return PARSER;
    }

    @Override
    public PropPair getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_PropPair_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PropPair_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\016PropPair.proto\032\017PropValue.proto\"8\n\010Pro" +
      "pPair\022\014\n\004type\030\001 \001(\r\022\036\n\nprop_value\030\002 \001(\0132" +
      "\n.PropValueB\032\n\030io.irminsul.common.protob" +
      "\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          PropValueOuterClass.getDescriptor(),
        });
    internal_static_PropPair_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_PropPair_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_PropPair_descriptor,
        new String[] { "Type", "PropValue", });
    descriptor.resolveAllFeaturesImmutable();
    PropValueOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
