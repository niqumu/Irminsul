// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: SceneAvatarInfo.proto
// Protobuf Java Version: 4.27.2

package io.irminsul.common.proto;

public final class SceneAvatarInfoOuterClass {
  private SceneAvatarInfoOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      SceneAvatarInfoOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SceneAvatarInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SceneAvatarInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 uid = 1;</code>
     * @return The uid.
     */
    int getUid();

    /**
     * <code>uint32 avatar_id = 2;</code>
     * @return The avatarId.
     */
    int getAvatarId();

    /**
     * <code>uint64 guid = 3;</code>
     * @return The guid.
     */
    long getGuid();

    /**
     * <code>uint32 peer_id = 4;</code>
     * @return The peerId.
     */
    int getPeerId();

    /**
     * <code>repeated uint32 equip_id_list = 5;</code>
     * @return A list containing the equipIdList.
     */
    java.util.List<Integer> getEquipIdListList();
    /**
     * <code>repeated uint32 equip_id_list = 5;</code>
     * @return The count of equipIdList.
     */
    int getEquipIdListCount();
    /**
     * <code>repeated uint32 equip_id_list = 5;</code>
     * @param index The index of the element to return.
     * @return The equipIdList at the given index.
     */
    int getEquipIdList(int index);

    /**
     * <code>uint32 skill_depot_id = 6;</code>
     * @return The skillDepotId.
     */
    int getSkillDepotId();

    /**
     * <code>repeated uint32 talent_id_list = 7;</code>
     * @return A list containing the talentIdList.
     */
    java.util.List<Integer> getTalentIdListList();
    /**
     * <code>repeated uint32 talent_id_list = 7;</code>
     * @return The count of talentIdList.
     */
    int getTalentIdListCount();
    /**
     * <code>repeated uint32 talent_id_list = 7;</code>
     * @param index The index of the element to return.
     * @return The talentIdList at the given index.
     */
    int getTalentIdList(int index);

    /**
     * <code>.SceneWeaponInfo weapon = 8;</code>
     * @return Whether the weapon field is set.
     */
    boolean hasWeapon();
    /**
     * <code>.SceneWeaponInfo weapon = 8;</code>
     * @return The weapon.
     */
    SceneWeaponInfoOuterClass.SceneWeaponInfo getWeapon();
    /**
     * <code>.SceneWeaponInfo weapon = 8;</code>
     */
    SceneWeaponInfoOuterClass.SceneWeaponInfoOrBuilder getWeaponOrBuilder();

    /**
     * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
     */
    java.util.List<SceneReliquaryInfoOuterClass.SceneReliquaryInfo>
        getReliquaryListList();
    /**
     * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
     */
    SceneReliquaryInfoOuterClass.SceneReliquaryInfo getReliquaryList(int index);
    /**
     * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
     */
    int getReliquaryListCount();
    /**
     * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
     */
    java.util.List<? extends SceneReliquaryInfoOuterClass.SceneReliquaryInfoOrBuilder>
        getReliquaryListOrBuilderList();
    /**
     * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
     */
    SceneReliquaryInfoOuterClass.SceneReliquaryInfoOrBuilder getReliquaryListOrBuilder(
        int index);

    /**
     * <code>uint32 core_proud_skill_level = 11;</code>
     * @return The coreProudSkillLevel.
     */
    int getCoreProudSkillLevel();

    /**
     * <code>repeated uint32 inherent_proud_skill_list = 12;</code>
     * @return A list containing the inherentProudSkillList.
     */
    java.util.List<Integer> getInherentProudSkillListList();
    /**
     * <code>repeated uint32 inherent_proud_skill_list = 12;</code>
     * @return The count of inherentProudSkillList.
     */
    int getInherentProudSkillListCount();
    /**
     * <code>repeated uint32 inherent_proud_skill_list = 12;</code>
     * @param index The index of the element to return.
     * @return The inherentProudSkillList at the given index.
     */
    int getInherentProudSkillList(int index);

    /**
     * <code>map&lt;uint32, uint32&gt; skill_level_map = 13;</code>
     */
    int getSkillLevelMapCount();
    /**
     * <code>map&lt;uint32, uint32&gt; skill_level_map = 13;</code>
     */
    boolean containsSkillLevelMap(
        int key);
    /**
     * Use {@link #getSkillLevelMapMap()} instead.
     */
    @Deprecated
    java.util.Map<Integer, Integer>
    getSkillLevelMap();
    /**
     * <code>map&lt;uint32, uint32&gt; skill_level_map = 13;</code>
     */
    java.util.Map<Integer, Integer>
    getSkillLevelMapMap();
    /**
     * <code>map&lt;uint32, uint32&gt; skill_level_map = 13;</code>
     */
    int getSkillLevelMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; skill_level_map = 13;</code>
     */
    int getSkillLevelMapOrThrow(
        int key);

    /**
     * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 14;</code>
     */
    int getProudSkillExtraLevelMapCount();
    /**
     * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 14;</code>
     */
    boolean containsProudSkillExtraLevelMap(
        int key);
    /**
     * Use {@link #getProudSkillExtraLevelMapMap()} instead.
     */
    @Deprecated
    java.util.Map<Integer, Integer>
    getProudSkillExtraLevelMap();
    /**
     * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 14;</code>
     */
    java.util.Map<Integer, Integer>
    getProudSkillExtraLevelMapMap();
    /**
     * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 14;</code>
     */
    int getProudSkillExtraLevelMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 14;</code>
     */
    int getProudSkillExtraLevelMapOrThrow(
        int key);

    /**
     * <code>repeated .ServerBuff server_buff_list = 15;</code>
     */
    java.util.List<ServerBuffOuterClass.ServerBuff>
        getServerBuffListList();
    /**
     * <code>repeated .ServerBuff server_buff_list = 15;</code>
     */
    ServerBuffOuterClass.ServerBuff getServerBuffList(int index);
    /**
     * <code>repeated .ServerBuff server_buff_list = 15;</code>
     */
    int getServerBuffListCount();
    /**
     * <code>repeated .ServerBuff server_buff_list = 15;</code>
     */
    java.util.List<? extends ServerBuffOuterClass.ServerBuffOrBuilder>
        getServerBuffListOrBuilderList();
    /**
     * <code>repeated .ServerBuff server_buff_list = 15;</code>
     */
    ServerBuffOuterClass.ServerBuffOrBuilder getServerBuffListOrBuilder(
        int index);

    /**
     * <code>repeated uint32 team_resonance_list = 16;</code>
     * @return A list containing the teamResonanceList.
     */
    java.util.List<Integer> getTeamResonanceListList();
    /**
     * <code>repeated uint32 team_resonance_list = 16;</code>
     * @return The count of teamResonanceList.
     */
    int getTeamResonanceListCount();
    /**
     * <code>repeated uint32 team_resonance_list = 16;</code>
     * @param index The index of the element to return.
     * @return The teamResonanceList at the given index.
     */
    int getTeamResonanceList(int index);

    /**
     * <code>uint32 wearing_flycloak_id = 17;</code>
     * @return The wearingFlycloakId.
     */
    int getWearingFlycloakId();

    /**
     * <code>uint32 born_time = 18;</code>
     * @return The bornTime.
     */
    int getBornTime();

    /**
     * <code>uint32 costume_id = 19;</code>
     * @return The costumeId.
     */
    int getCostumeId();

    /**
     * <code>.CurVehicleInfo cur_vehicle_info = 20;</code>
     * @return Whether the curVehicleInfo field is set.
     */
    boolean hasCurVehicleInfo();
    /**
     * <code>.CurVehicleInfo cur_vehicle_info = 20;</code>
     * @return The curVehicleInfo.
     */
    CurVehicleInfoOuterClass.CurVehicleInfo getCurVehicleInfo();
    /**
     * <code>.CurVehicleInfo cur_vehicle_info = 20;</code>
     */
    CurVehicleInfoOuterClass.CurVehicleInfoOrBuilder getCurVehicleInfoOrBuilder();

    /**
     * <code>.AvatarExcelInfo excel_info = 21;</code>
     * @return Whether the excelInfo field is set.
     */
    boolean hasExcelInfo();
    /**
     * <code>.AvatarExcelInfo excel_info = 21;</code>
     * @return The excelInfo.
     */
    AvatarExcelInfoOuterClass.AvatarExcelInfo getExcelInfo();
    /**
     * <code>.AvatarExcelInfo excel_info = 21;</code>
     */
    AvatarExcelInfoOuterClass.AvatarExcelInfoOrBuilder getExcelInfoOrBuilder();

    /**
     * <code>uint32 anim_hash = 22;</code>
     * @return The animHash.
     */
    int getAnimHash();
  }
  /**
   * <pre>
   * Obf: JGKPGDAONID
   * </pre>
   *
   * Protobuf type {@code SceneAvatarInfo}
   */
  public static final class SceneAvatarInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SceneAvatarInfo)
      SceneAvatarInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 2,
        /* suffix= */ "",
        SceneAvatarInfo.class.getName());
    }
    // Use SceneAvatarInfo.newBuilder() to construct.
    private SceneAvatarInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SceneAvatarInfo() {
      equipIdList_ = emptyIntList();
      talentIdList_ = emptyIntList();
      reliquaryList_ = java.util.Collections.emptyList();
      inherentProudSkillList_ = emptyIntList();
      serverBuffList_ = java.util.Collections.emptyList();
      teamResonanceList_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SceneAvatarInfoOuterClass.internal_static_SceneAvatarInfo_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @Override
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 13:
          return internalGetSkillLevelMap();
        case 14:
          return internalGetProudSkillExtraLevelMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SceneAvatarInfoOuterClass.internal_static_SceneAvatarInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SceneAvatarInfo.class, Builder.class);
    }

    private int bitField0_;
    public static final int UID_FIELD_NUMBER = 1;
    private int uid_ = 0;
    /**
     * <code>uint32 uid = 1;</code>
     * @return The uid.
     */
    @Override
    public int getUid() {
      return uid_;
    }

    public static final int AVATAR_ID_FIELD_NUMBER = 2;
    private int avatarId_ = 0;
    /**
     * <code>uint32 avatar_id = 2;</code>
     * @return The avatarId.
     */
    @Override
    public int getAvatarId() {
      return avatarId_;
    }

    public static final int GUID_FIELD_NUMBER = 3;
    private long guid_ = 0L;
    /**
     * <code>uint64 guid = 3;</code>
     * @return The guid.
     */
    @Override
    public long getGuid() {
      return guid_;
    }

    public static final int PEER_ID_FIELD_NUMBER = 4;
    private int peerId_ = 0;
    /**
     * <code>uint32 peer_id = 4;</code>
     * @return The peerId.
     */
    @Override
    public int getPeerId() {
      return peerId_;
    }

    public static final int EQUIP_ID_LIST_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList equipIdList_ =
        emptyIntList();
    /**
     * <code>repeated uint32 equip_id_list = 5;</code>
     * @return A list containing the equipIdList.
     */
    @Override
    public java.util.List<Integer>
        getEquipIdListList() {
      return equipIdList_;
    }
    /**
     * <code>repeated uint32 equip_id_list = 5;</code>
     * @return The count of equipIdList.
     */
    public int getEquipIdListCount() {
      return equipIdList_.size();
    }
    /**
     * <code>repeated uint32 equip_id_list = 5;</code>
     * @param index The index of the element to return.
     * @return The equipIdList at the given index.
     */
    public int getEquipIdList(int index) {
      return equipIdList_.getInt(index);
    }
    private int equipIdListMemoizedSerializedSize = -1;

    public static final int SKILL_DEPOT_ID_FIELD_NUMBER = 6;
    private int skillDepotId_ = 0;
    /**
     * <code>uint32 skill_depot_id = 6;</code>
     * @return The skillDepotId.
     */
    @Override
    public int getSkillDepotId() {
      return skillDepotId_;
    }

    public static final int TALENT_ID_LIST_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList talentIdList_ =
        emptyIntList();
    /**
     * <code>repeated uint32 talent_id_list = 7;</code>
     * @return A list containing the talentIdList.
     */
    @Override
    public java.util.List<Integer>
        getTalentIdListList() {
      return talentIdList_;
    }
    /**
     * <code>repeated uint32 talent_id_list = 7;</code>
     * @return The count of talentIdList.
     */
    public int getTalentIdListCount() {
      return talentIdList_.size();
    }
    /**
     * <code>repeated uint32 talent_id_list = 7;</code>
     * @param index The index of the element to return.
     * @return The talentIdList at the given index.
     */
    public int getTalentIdList(int index) {
      return talentIdList_.getInt(index);
    }
    private int talentIdListMemoizedSerializedSize = -1;

    public static final int WEAPON_FIELD_NUMBER = 8;
    private SceneWeaponInfoOuterClass.SceneWeaponInfo weapon_;
    /**
     * <code>.SceneWeaponInfo weapon = 8;</code>
     * @return Whether the weapon field is set.
     */
    @Override
    public boolean hasWeapon() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.SceneWeaponInfo weapon = 8;</code>
     * @return The weapon.
     */
    @Override
    public SceneWeaponInfoOuterClass.SceneWeaponInfo getWeapon() {
      return weapon_ == null ? SceneWeaponInfoOuterClass.SceneWeaponInfo.getDefaultInstance() : weapon_;
    }
    /**
     * <code>.SceneWeaponInfo weapon = 8;</code>
     */
    @Override
    public SceneWeaponInfoOuterClass.SceneWeaponInfoOrBuilder getWeaponOrBuilder() {
      return weapon_ == null ? SceneWeaponInfoOuterClass.SceneWeaponInfo.getDefaultInstance() : weapon_;
    }

    public static final int RELIQUARY_LIST_FIELD_NUMBER = 9;
    @SuppressWarnings("serial")
    private java.util.List<SceneReliquaryInfoOuterClass.SceneReliquaryInfo> reliquaryList_;
    /**
     * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
     */
    @Override
    public java.util.List<SceneReliquaryInfoOuterClass.SceneReliquaryInfo> getReliquaryListList() {
      return reliquaryList_;
    }
    /**
     * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
     */
    @Override
    public java.util.List<? extends SceneReliquaryInfoOuterClass.SceneReliquaryInfoOrBuilder>
        getReliquaryListOrBuilderList() {
      return reliquaryList_;
    }
    /**
     * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
     */
    @Override
    public int getReliquaryListCount() {
      return reliquaryList_.size();
    }
    /**
     * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
     */
    @Override
    public SceneReliquaryInfoOuterClass.SceneReliquaryInfo getReliquaryList(int index) {
      return reliquaryList_.get(index);
    }
    /**
     * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
     */
    @Override
    public SceneReliquaryInfoOuterClass.SceneReliquaryInfoOrBuilder getReliquaryListOrBuilder(
        int index) {
      return reliquaryList_.get(index);
    }

    public static final int CORE_PROUD_SKILL_LEVEL_FIELD_NUMBER = 11;
    private int coreProudSkillLevel_ = 0;
    /**
     * <code>uint32 core_proud_skill_level = 11;</code>
     * @return The coreProudSkillLevel.
     */
    @Override
    public int getCoreProudSkillLevel() {
      return coreProudSkillLevel_;
    }

    public static final int INHERENT_PROUD_SKILL_LIST_FIELD_NUMBER = 12;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList inherentProudSkillList_ =
        emptyIntList();
    /**
     * <code>repeated uint32 inherent_proud_skill_list = 12;</code>
     * @return A list containing the inherentProudSkillList.
     */
    @Override
    public java.util.List<Integer>
        getInherentProudSkillListList() {
      return inherentProudSkillList_;
    }
    /**
     * <code>repeated uint32 inherent_proud_skill_list = 12;</code>
     * @return The count of inherentProudSkillList.
     */
    public int getInherentProudSkillListCount() {
      return inherentProudSkillList_.size();
    }
    /**
     * <code>repeated uint32 inherent_proud_skill_list = 12;</code>
     * @param index The index of the element to return.
     * @return The inherentProudSkillList at the given index.
     */
    public int getInherentProudSkillList(int index) {
      return inherentProudSkillList_.getInt(index);
    }
    private int inherentProudSkillListMemoizedSerializedSize = -1;

    public static final int SKILL_LEVEL_MAP_FIELD_NUMBER = 13;
    private static final class SkillLevelMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          Integer, Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<Integer, Integer>newDefaultInstance(
                  SceneAvatarInfoOuterClass.internal_static_SceneAvatarInfo_SkillLevelMapEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        Integer, Integer> skillLevelMap_;
    private com.google.protobuf.MapField<Integer, Integer>
    internalGetSkillLevelMap() {
      if (skillLevelMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SkillLevelMapDefaultEntryHolder.defaultEntry);
      }
      return skillLevelMap_;
    }
    public int getSkillLevelMapCount() {
      return internalGetSkillLevelMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; skill_level_map = 13;</code>
     */
    @Override
    public boolean containsSkillLevelMap(
        int key) {

      return internalGetSkillLevelMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSkillLevelMapMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<Integer, Integer> getSkillLevelMap() {
      return getSkillLevelMapMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; skill_level_map = 13;</code>
     */
    @Override
    public java.util.Map<Integer, Integer> getSkillLevelMapMap() {
      return internalGetSkillLevelMap().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; skill_level_map = 13;</code>
     */
    @Override
    public int getSkillLevelMapOrDefault(
        int key,
        int defaultValue) {

      java.util.Map<Integer, Integer> map =
          internalGetSkillLevelMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; skill_level_map = 13;</code>
     */
    @Override
    public int getSkillLevelMapOrThrow(
        int key) {

      java.util.Map<Integer, Integer> map =
          internalGetSkillLevelMap().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int PROUD_SKILL_EXTRA_LEVEL_MAP_FIELD_NUMBER = 14;
    private static final class ProudSkillExtraLevelMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          Integer, Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<Integer, Integer>newDefaultInstance(
                  SceneAvatarInfoOuterClass.internal_static_SceneAvatarInfo_ProudSkillExtraLevelMapEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        Integer, Integer> proudSkillExtraLevelMap_;
    private com.google.protobuf.MapField<Integer, Integer>
    internalGetProudSkillExtraLevelMap() {
      if (proudSkillExtraLevelMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ProudSkillExtraLevelMapDefaultEntryHolder.defaultEntry);
      }
      return proudSkillExtraLevelMap_;
    }
    public int getProudSkillExtraLevelMapCount() {
      return internalGetProudSkillExtraLevelMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 14;</code>
     */
    @Override
    public boolean containsProudSkillExtraLevelMap(
        int key) {

      return internalGetProudSkillExtraLevelMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getProudSkillExtraLevelMapMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<Integer, Integer> getProudSkillExtraLevelMap() {
      return getProudSkillExtraLevelMapMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 14;</code>
     */
    @Override
    public java.util.Map<Integer, Integer> getProudSkillExtraLevelMapMap() {
      return internalGetProudSkillExtraLevelMap().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 14;</code>
     */
    @Override
    public int getProudSkillExtraLevelMapOrDefault(
        int key,
        int defaultValue) {

      java.util.Map<Integer, Integer> map =
          internalGetProudSkillExtraLevelMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 14;</code>
     */
    @Override
    public int getProudSkillExtraLevelMapOrThrow(
        int key) {

      java.util.Map<Integer, Integer> map =
          internalGetProudSkillExtraLevelMap().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SERVER_BUFF_LIST_FIELD_NUMBER = 15;
    @SuppressWarnings("serial")
    private java.util.List<ServerBuffOuterClass.ServerBuff> serverBuffList_;
    /**
     * <code>repeated .ServerBuff server_buff_list = 15;</code>
     */
    @Override
    public java.util.List<ServerBuffOuterClass.ServerBuff> getServerBuffListList() {
      return serverBuffList_;
    }
    /**
     * <code>repeated .ServerBuff server_buff_list = 15;</code>
     */
    @Override
    public java.util.List<? extends ServerBuffOuterClass.ServerBuffOrBuilder>
        getServerBuffListOrBuilderList() {
      return serverBuffList_;
    }
    /**
     * <code>repeated .ServerBuff server_buff_list = 15;</code>
     */
    @Override
    public int getServerBuffListCount() {
      return serverBuffList_.size();
    }
    /**
     * <code>repeated .ServerBuff server_buff_list = 15;</code>
     */
    @Override
    public ServerBuffOuterClass.ServerBuff getServerBuffList(int index) {
      return serverBuffList_.get(index);
    }
    /**
     * <code>repeated .ServerBuff server_buff_list = 15;</code>
     */
    @Override
    public ServerBuffOuterClass.ServerBuffOrBuilder getServerBuffListOrBuilder(
        int index) {
      return serverBuffList_.get(index);
    }

    public static final int TEAM_RESONANCE_LIST_FIELD_NUMBER = 16;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList teamResonanceList_ =
        emptyIntList();
    /**
     * <code>repeated uint32 team_resonance_list = 16;</code>
     * @return A list containing the teamResonanceList.
     */
    @Override
    public java.util.List<Integer>
        getTeamResonanceListList() {
      return teamResonanceList_;
    }
    /**
     * <code>repeated uint32 team_resonance_list = 16;</code>
     * @return The count of teamResonanceList.
     */
    public int getTeamResonanceListCount() {
      return teamResonanceList_.size();
    }
    /**
     * <code>repeated uint32 team_resonance_list = 16;</code>
     * @param index The index of the element to return.
     * @return The teamResonanceList at the given index.
     */
    public int getTeamResonanceList(int index) {
      return teamResonanceList_.getInt(index);
    }
    private int teamResonanceListMemoizedSerializedSize = -1;

    public static final int WEARING_FLYCLOAK_ID_FIELD_NUMBER = 17;
    private int wearingFlycloakId_ = 0;
    /**
     * <code>uint32 wearing_flycloak_id = 17;</code>
     * @return The wearingFlycloakId.
     */
    @Override
    public int getWearingFlycloakId() {
      return wearingFlycloakId_;
    }

    public static final int BORN_TIME_FIELD_NUMBER = 18;
    private int bornTime_ = 0;
    /**
     * <code>uint32 born_time = 18;</code>
     * @return The bornTime.
     */
    @Override
    public int getBornTime() {
      return bornTime_;
    }

    public static final int COSTUME_ID_FIELD_NUMBER = 19;
    private int costumeId_ = 0;
    /**
     * <code>uint32 costume_id = 19;</code>
     * @return The costumeId.
     */
    @Override
    public int getCostumeId() {
      return costumeId_;
    }

    public static final int CUR_VEHICLE_INFO_FIELD_NUMBER = 20;
    private CurVehicleInfoOuterClass.CurVehicleInfo curVehicleInfo_;
    /**
     * <code>.CurVehicleInfo cur_vehicle_info = 20;</code>
     * @return Whether the curVehicleInfo field is set.
     */
    @Override
    public boolean hasCurVehicleInfo() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>.CurVehicleInfo cur_vehicle_info = 20;</code>
     * @return The curVehicleInfo.
     */
    @Override
    public CurVehicleInfoOuterClass.CurVehicleInfo getCurVehicleInfo() {
      return curVehicleInfo_ == null ? CurVehicleInfoOuterClass.CurVehicleInfo.getDefaultInstance() : curVehicleInfo_;
    }
    /**
     * <code>.CurVehicleInfo cur_vehicle_info = 20;</code>
     */
    @Override
    public CurVehicleInfoOuterClass.CurVehicleInfoOrBuilder getCurVehicleInfoOrBuilder() {
      return curVehicleInfo_ == null ? CurVehicleInfoOuterClass.CurVehicleInfo.getDefaultInstance() : curVehicleInfo_;
    }

    public static final int EXCEL_INFO_FIELD_NUMBER = 21;
    private AvatarExcelInfoOuterClass.AvatarExcelInfo excelInfo_;
    /**
     * <code>.AvatarExcelInfo excel_info = 21;</code>
     * @return Whether the excelInfo field is set.
     */
    @Override
    public boolean hasExcelInfo() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>.AvatarExcelInfo excel_info = 21;</code>
     * @return The excelInfo.
     */
    @Override
    public AvatarExcelInfoOuterClass.AvatarExcelInfo getExcelInfo() {
      return excelInfo_ == null ? AvatarExcelInfoOuterClass.AvatarExcelInfo.getDefaultInstance() : excelInfo_;
    }
    /**
     * <code>.AvatarExcelInfo excel_info = 21;</code>
     */
    @Override
    public AvatarExcelInfoOuterClass.AvatarExcelInfoOrBuilder getExcelInfoOrBuilder() {
      return excelInfo_ == null ? AvatarExcelInfoOuterClass.AvatarExcelInfo.getDefaultInstance() : excelInfo_;
    }

    public static final int ANIM_HASH_FIELD_NUMBER = 22;
    private int animHash_ = 0;
    /**
     * <code>uint32 anim_hash = 22;</code>
     * @return The animHash.
     */
    @Override
    public int getAnimHash() {
      return animHash_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (uid_ != 0) {
        output.writeUInt32(1, uid_);
      }
      if (avatarId_ != 0) {
        output.writeUInt32(2, avatarId_);
      }
      if (guid_ != 0L) {
        output.writeUInt64(3, guid_);
      }
      if (peerId_ != 0) {
        output.writeUInt32(4, peerId_);
      }
      if (getEquipIdListList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(equipIdListMemoizedSerializedSize);
      }
      for (int i = 0; i < equipIdList_.size(); i++) {
        output.writeUInt32NoTag(equipIdList_.getInt(i));
      }
      if (skillDepotId_ != 0) {
        output.writeUInt32(6, skillDepotId_);
      }
      if (getTalentIdListList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(talentIdListMemoizedSerializedSize);
      }
      for (int i = 0; i < talentIdList_.size(); i++) {
        output.writeUInt32NoTag(talentIdList_.getInt(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(8, getWeapon());
      }
      for (int i = 0; i < reliquaryList_.size(); i++) {
        output.writeMessage(9, reliquaryList_.get(i));
      }
      if (coreProudSkillLevel_ != 0) {
        output.writeUInt32(11, coreProudSkillLevel_);
      }
      if (getInherentProudSkillListList().size() > 0) {
        output.writeUInt32NoTag(98);
        output.writeUInt32NoTag(inherentProudSkillListMemoizedSerializedSize);
      }
      for (int i = 0; i < inherentProudSkillList_.size(); i++) {
        output.writeUInt32NoTag(inherentProudSkillList_.getInt(i));
      }
      com.google.protobuf.GeneratedMessage
        .serializeIntegerMapTo(
          output,
          internalGetSkillLevelMap(),
          SkillLevelMapDefaultEntryHolder.defaultEntry,
          13);
      com.google.protobuf.GeneratedMessage
        .serializeIntegerMapTo(
          output,
          internalGetProudSkillExtraLevelMap(),
          ProudSkillExtraLevelMapDefaultEntryHolder.defaultEntry,
          14);
      for (int i = 0; i < serverBuffList_.size(); i++) {
        output.writeMessage(15, serverBuffList_.get(i));
      }
      if (getTeamResonanceListList().size() > 0) {
        output.writeUInt32NoTag(130);
        output.writeUInt32NoTag(teamResonanceListMemoizedSerializedSize);
      }
      for (int i = 0; i < teamResonanceList_.size(); i++) {
        output.writeUInt32NoTag(teamResonanceList_.getInt(i));
      }
      if (wearingFlycloakId_ != 0) {
        output.writeUInt32(17, wearingFlycloakId_);
      }
      if (bornTime_ != 0) {
        output.writeUInt32(18, bornTime_);
      }
      if (costumeId_ != 0) {
        output.writeUInt32(19, costumeId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(20, getCurVehicleInfo());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(21, getExcelInfo());
      }
      if (animHash_ != 0) {
        output.writeUInt32(22, animHash_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (uid_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, uid_);
      }
      if (avatarId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, avatarId_);
      }
      if (guid_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, guid_);
      }
      if (peerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, peerId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < equipIdList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(equipIdList_.getInt(i));
        }
        size += dataSize;
        if (!getEquipIdListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        equipIdListMemoizedSerializedSize = dataSize;
      }
      if (skillDepotId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, skillDepotId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < talentIdList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(talentIdList_.getInt(i));
        }
        size += dataSize;
        if (!getTalentIdListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        talentIdListMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getWeapon());
      }
      for (int i = 0; i < reliquaryList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, reliquaryList_.get(i));
      }
      if (coreProudSkillLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, coreProudSkillLevel_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < inherentProudSkillList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(inherentProudSkillList_.getInt(i));
        }
        size += dataSize;
        if (!getInherentProudSkillListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        inherentProudSkillListMemoizedSerializedSize = dataSize;
      }
      for (java.util.Map.Entry<Integer, Integer> entry
           : internalGetSkillLevelMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<Integer, Integer>
        skillLevelMap__ = SkillLevelMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, skillLevelMap__);
      }
      for (java.util.Map.Entry<Integer, Integer> entry
           : internalGetProudSkillExtraLevelMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<Integer, Integer>
        proudSkillExtraLevelMap__ = ProudSkillExtraLevelMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(14, proudSkillExtraLevelMap__);
      }
      for (int i = 0; i < serverBuffList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, serverBuffList_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < teamResonanceList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(teamResonanceList_.getInt(i));
        }
        size += dataSize;
        if (!getTeamResonanceListList().isEmpty()) {
          size += 2;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        teamResonanceListMemoizedSerializedSize = dataSize;
      }
      if (wearingFlycloakId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, wearingFlycloakId_);
      }
      if (bornTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, bornTime_);
      }
      if (costumeId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, costumeId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getCurVehicleInfo());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, getExcelInfo());
      }
      if (animHash_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(22, animHash_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SceneAvatarInfo)) {
        return super.equals(obj);
      }
      SceneAvatarInfo other = (SceneAvatarInfo) obj;

      if (getUid()
          != other.getUid()) return false;
      if (getAvatarId()
          != other.getAvatarId()) return false;
      if (getGuid()
          != other.getGuid()) return false;
      if (getPeerId()
          != other.getPeerId()) return false;
      if (!getEquipIdListList()
          .equals(other.getEquipIdListList())) return false;
      if (getSkillDepotId()
          != other.getSkillDepotId()) return false;
      if (!getTalentIdListList()
          .equals(other.getTalentIdListList())) return false;
      if (hasWeapon() != other.hasWeapon()) return false;
      if (hasWeapon()) {
        if (!getWeapon()
            .equals(other.getWeapon())) return false;
      }
      if (!getReliquaryListList()
          .equals(other.getReliquaryListList())) return false;
      if (getCoreProudSkillLevel()
          != other.getCoreProudSkillLevel()) return false;
      if (!getInherentProudSkillListList()
          .equals(other.getInherentProudSkillListList())) return false;
      if (!internalGetSkillLevelMap().equals(
          other.internalGetSkillLevelMap())) return false;
      if (!internalGetProudSkillExtraLevelMap().equals(
          other.internalGetProudSkillExtraLevelMap())) return false;
      if (!getServerBuffListList()
          .equals(other.getServerBuffListList())) return false;
      if (!getTeamResonanceListList()
          .equals(other.getTeamResonanceListList())) return false;
      if (getWearingFlycloakId()
          != other.getWearingFlycloakId()) return false;
      if (getBornTime()
          != other.getBornTime()) return false;
      if (getCostumeId()
          != other.getCostumeId()) return false;
      if (hasCurVehicleInfo() != other.hasCurVehicleInfo()) return false;
      if (hasCurVehicleInfo()) {
        if (!getCurVehicleInfo()
            .equals(other.getCurVehicleInfo())) return false;
      }
      if (hasExcelInfo() != other.hasExcelInfo()) return false;
      if (hasExcelInfo()) {
        if (!getExcelInfo()
            .equals(other.getExcelInfo())) return false;
      }
      if (getAnimHash()
          != other.getAnimHash()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + UID_FIELD_NUMBER;
      hash = (53 * hash) + getUid();
      hash = (37 * hash) + AVATAR_ID_FIELD_NUMBER;
      hash = (53 * hash) + getAvatarId();
      hash = (37 * hash) + GUID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getGuid());
      hash = (37 * hash) + PEER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getPeerId();
      if (getEquipIdListCount() > 0) {
        hash = (37 * hash) + EQUIP_ID_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getEquipIdListList().hashCode();
      }
      hash = (37 * hash) + SKILL_DEPOT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSkillDepotId();
      if (getTalentIdListCount() > 0) {
        hash = (37 * hash) + TALENT_ID_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getTalentIdListList().hashCode();
      }
      if (hasWeapon()) {
        hash = (37 * hash) + WEAPON_FIELD_NUMBER;
        hash = (53 * hash) + getWeapon().hashCode();
      }
      if (getReliquaryListCount() > 0) {
        hash = (37 * hash) + RELIQUARY_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getReliquaryListList().hashCode();
      }
      hash = (37 * hash) + CORE_PROUD_SKILL_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getCoreProudSkillLevel();
      if (getInherentProudSkillListCount() > 0) {
        hash = (37 * hash) + INHERENT_PROUD_SKILL_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getInherentProudSkillListList().hashCode();
      }
      if (!internalGetSkillLevelMap().getMap().isEmpty()) {
        hash = (37 * hash) + SKILL_LEVEL_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSkillLevelMap().hashCode();
      }
      if (!internalGetProudSkillExtraLevelMap().getMap().isEmpty()) {
        hash = (37 * hash) + PROUD_SKILL_EXTRA_LEVEL_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetProudSkillExtraLevelMap().hashCode();
      }
      if (getServerBuffListCount() > 0) {
        hash = (37 * hash) + SERVER_BUFF_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getServerBuffListList().hashCode();
      }
      if (getTeamResonanceListCount() > 0) {
        hash = (37 * hash) + TEAM_RESONANCE_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getTeamResonanceListList().hashCode();
      }
      hash = (37 * hash) + WEARING_FLYCLOAK_ID_FIELD_NUMBER;
      hash = (53 * hash) + getWearingFlycloakId();
      hash = (37 * hash) + BORN_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getBornTime();
      hash = (37 * hash) + COSTUME_ID_FIELD_NUMBER;
      hash = (53 * hash) + getCostumeId();
      if (hasCurVehicleInfo()) {
        hash = (37 * hash) + CUR_VEHICLE_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getCurVehicleInfo().hashCode();
      }
      if (hasExcelInfo()) {
        hash = (37 * hash) + EXCEL_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getExcelInfo().hashCode();
      }
      hash = (37 * hash) + ANIM_HASH_FIELD_NUMBER;
      hash = (53 * hash) + getAnimHash();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SceneAvatarInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SceneAvatarInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SceneAvatarInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SceneAvatarInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SceneAvatarInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SceneAvatarInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SceneAvatarInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static SceneAvatarInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static SceneAvatarInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static SceneAvatarInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SceneAvatarInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static SceneAvatarInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SceneAvatarInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Obf: JGKPGDAONID
     * </pre>
     *
     * Protobuf type {@code SceneAvatarInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SceneAvatarInfo)
        SceneAvatarInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SceneAvatarInfoOuterClass.internal_static_SceneAvatarInfo_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
          int number) {
        switch (number) {
          case 13:
            return internalGetSkillLevelMap();
          case 14:
            return internalGetProudSkillExtraLevelMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
          int number) {
        switch (number) {
          case 13:
            return internalGetMutableSkillLevelMap();
          case 14:
            return internalGetMutableProudSkillExtraLevelMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SceneAvatarInfoOuterClass.internal_static_SceneAvatarInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SceneAvatarInfo.class, Builder.class);
      }

      // Construct using io.irminsul.common.proto.SceneAvatarInfoOuterClass.SceneAvatarInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getWeaponFieldBuilder();
          getReliquaryListFieldBuilder();
          getServerBuffListFieldBuilder();
          getCurVehicleInfoFieldBuilder();
          getExcelInfoFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        uid_ = 0;
        avatarId_ = 0;
        guid_ = 0L;
        peerId_ = 0;
        equipIdList_ = emptyIntList();
        skillDepotId_ = 0;
        talentIdList_ = emptyIntList();
        weapon_ = null;
        if (weaponBuilder_ != null) {
          weaponBuilder_.dispose();
          weaponBuilder_ = null;
        }
        if (reliquaryListBuilder_ == null) {
          reliquaryList_ = java.util.Collections.emptyList();
        } else {
          reliquaryList_ = null;
          reliquaryListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        coreProudSkillLevel_ = 0;
        inherentProudSkillList_ = emptyIntList();
        internalGetMutableSkillLevelMap().clear();
        internalGetMutableProudSkillExtraLevelMap().clear();
        if (serverBuffListBuilder_ == null) {
          serverBuffList_ = java.util.Collections.emptyList();
        } else {
          serverBuffList_ = null;
          serverBuffListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        teamResonanceList_ = emptyIntList();
        wearingFlycloakId_ = 0;
        bornTime_ = 0;
        costumeId_ = 0;
        curVehicleInfo_ = null;
        if (curVehicleInfoBuilder_ != null) {
          curVehicleInfoBuilder_.dispose();
          curVehicleInfoBuilder_ = null;
        }
        excelInfo_ = null;
        if (excelInfoBuilder_ != null) {
          excelInfoBuilder_.dispose();
          excelInfoBuilder_ = null;
        }
        animHash_ = 0;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SceneAvatarInfoOuterClass.internal_static_SceneAvatarInfo_descriptor;
      }

      @Override
      public SceneAvatarInfo getDefaultInstanceForType() {
        return SceneAvatarInfo.getDefaultInstance();
      }

      @Override
      public SceneAvatarInfo build() {
        SceneAvatarInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public SceneAvatarInfo buildPartial() {
        SceneAvatarInfo result = new SceneAvatarInfo(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(SceneAvatarInfo result) {
        if (reliquaryListBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0)) {
            reliquaryList_ = java.util.Collections.unmodifiableList(reliquaryList_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.reliquaryList_ = reliquaryList_;
        } else {
          result.reliquaryList_ = reliquaryListBuilder_.build();
        }
        if (serverBuffListBuilder_ == null) {
          if (((bitField0_ & 0x00002000) != 0)) {
            serverBuffList_ = java.util.Collections.unmodifiableList(serverBuffList_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.serverBuffList_ = serverBuffList_;
        } else {
          result.serverBuffList_ = serverBuffListBuilder_.build();
        }
      }

      private void buildPartial0(SceneAvatarInfo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.uid_ = uid_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.avatarId_ = avatarId_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.guid_ = guid_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.peerId_ = peerId_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          equipIdList_.makeImmutable();
          result.equipIdList_ = equipIdList_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.skillDepotId_ = skillDepotId_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          talentIdList_.makeImmutable();
          result.talentIdList_ = talentIdList_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.weapon_ = weaponBuilder_ == null
              ? weapon_
              : weaponBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.coreProudSkillLevel_ = coreProudSkillLevel_;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          inherentProudSkillList_.makeImmutable();
          result.inherentProudSkillList_ = inherentProudSkillList_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.skillLevelMap_ = internalGetSkillLevelMap();
          result.skillLevelMap_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.proudSkillExtraLevelMap_ = internalGetProudSkillExtraLevelMap();
          result.proudSkillExtraLevelMap_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          teamResonanceList_.makeImmutable();
          result.teamResonanceList_ = teamResonanceList_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.wearingFlycloakId_ = wearingFlycloakId_;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.bornTime_ = bornTime_;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.costumeId_ = costumeId_;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.curVehicleInfo_ = curVehicleInfoBuilder_ == null
              ? curVehicleInfo_
              : curVehicleInfoBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.excelInfo_ = excelInfoBuilder_ == null
              ? excelInfo_
              : excelInfoBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.animHash_ = animHash_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SceneAvatarInfo) {
          return mergeFrom((SceneAvatarInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SceneAvatarInfo other) {
        if (other == SceneAvatarInfo.getDefaultInstance()) return this;
        if (other.getUid() != 0) {
          setUid(other.getUid());
        }
        if (other.getAvatarId() != 0) {
          setAvatarId(other.getAvatarId());
        }
        if (other.getGuid() != 0L) {
          setGuid(other.getGuid());
        }
        if (other.getPeerId() != 0) {
          setPeerId(other.getPeerId());
        }
        if (!other.equipIdList_.isEmpty()) {
          if (equipIdList_.isEmpty()) {
            equipIdList_ = other.equipIdList_;
            equipIdList_.makeImmutable();
            bitField0_ |= 0x00000010;
          } else {
            ensureEquipIdListIsMutable();
            equipIdList_.addAll(other.equipIdList_);
          }
          onChanged();
        }
        if (other.getSkillDepotId() != 0) {
          setSkillDepotId(other.getSkillDepotId());
        }
        if (!other.talentIdList_.isEmpty()) {
          if (talentIdList_.isEmpty()) {
            talentIdList_ = other.talentIdList_;
            talentIdList_.makeImmutable();
            bitField0_ |= 0x00000040;
          } else {
            ensureTalentIdListIsMutable();
            talentIdList_.addAll(other.talentIdList_);
          }
          onChanged();
        }
        if (other.hasWeapon()) {
          mergeWeapon(other.getWeapon());
        }
        if (reliquaryListBuilder_ == null) {
          if (!other.reliquaryList_.isEmpty()) {
            if (reliquaryList_.isEmpty()) {
              reliquaryList_ = other.reliquaryList_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureReliquaryListIsMutable();
              reliquaryList_.addAll(other.reliquaryList_);
            }
            onChanged();
          }
        } else {
          if (!other.reliquaryList_.isEmpty()) {
            if (reliquaryListBuilder_.isEmpty()) {
              reliquaryListBuilder_.dispose();
              reliquaryListBuilder_ = null;
              reliquaryList_ = other.reliquaryList_;
              bitField0_ = (bitField0_ & ~0x00000100);
              reliquaryListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getReliquaryListFieldBuilder() : null;
            } else {
              reliquaryListBuilder_.addAllMessages(other.reliquaryList_);
            }
          }
        }
        if (other.getCoreProudSkillLevel() != 0) {
          setCoreProudSkillLevel(other.getCoreProudSkillLevel());
        }
        if (!other.inherentProudSkillList_.isEmpty()) {
          if (inherentProudSkillList_.isEmpty()) {
            inherentProudSkillList_ = other.inherentProudSkillList_;
            inherentProudSkillList_.makeImmutable();
            bitField0_ |= 0x00000400;
          } else {
            ensureInherentProudSkillListIsMutable();
            inherentProudSkillList_.addAll(other.inherentProudSkillList_);
          }
          onChanged();
        }
        internalGetMutableSkillLevelMap().mergeFrom(
            other.internalGetSkillLevelMap());
        bitField0_ |= 0x00000800;
        internalGetMutableProudSkillExtraLevelMap().mergeFrom(
            other.internalGetProudSkillExtraLevelMap());
        bitField0_ |= 0x00001000;
        if (serverBuffListBuilder_ == null) {
          if (!other.serverBuffList_.isEmpty()) {
            if (serverBuffList_.isEmpty()) {
              serverBuffList_ = other.serverBuffList_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureServerBuffListIsMutable();
              serverBuffList_.addAll(other.serverBuffList_);
            }
            onChanged();
          }
        } else {
          if (!other.serverBuffList_.isEmpty()) {
            if (serverBuffListBuilder_.isEmpty()) {
              serverBuffListBuilder_.dispose();
              serverBuffListBuilder_ = null;
              serverBuffList_ = other.serverBuffList_;
              bitField0_ = (bitField0_ & ~0x00002000);
              serverBuffListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getServerBuffListFieldBuilder() : null;
            } else {
              serverBuffListBuilder_.addAllMessages(other.serverBuffList_);
            }
          }
        }
        if (!other.teamResonanceList_.isEmpty()) {
          if (teamResonanceList_.isEmpty()) {
            teamResonanceList_ = other.teamResonanceList_;
            teamResonanceList_.makeImmutable();
            bitField0_ |= 0x00004000;
          } else {
            ensureTeamResonanceListIsMutable();
            teamResonanceList_.addAll(other.teamResonanceList_);
          }
          onChanged();
        }
        if (other.getWearingFlycloakId() != 0) {
          setWearingFlycloakId(other.getWearingFlycloakId());
        }
        if (other.getBornTime() != 0) {
          setBornTime(other.getBornTime());
        }
        if (other.getCostumeId() != 0) {
          setCostumeId(other.getCostumeId());
        }
        if (other.hasCurVehicleInfo()) {
          mergeCurVehicleInfo(other.getCurVehicleInfo());
        }
        if (other.hasExcelInfo()) {
          mergeExcelInfo(other.getExcelInfo());
        }
        if (other.getAnimHash() != 0) {
          setAnimHash(other.getAnimHash());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                uid_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                avatarId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                guid_ = input.readUInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                peerId_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                int v = input.readUInt32();
                ensureEquipIdListIsMutable();
                equipIdList_.addInt(v);
                break;
              } // case 40
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureEquipIdListIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  equipIdList_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 42
              case 48: {
                skillDepotId_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                int v = input.readUInt32();
                ensureTalentIdListIsMutable();
                talentIdList_.addInt(v);
                break;
              } // case 56
              case 58: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureTalentIdListIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  talentIdList_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 58
              case 66: {
                input.readMessage(
                    getWeaponFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 74: {
                SceneReliquaryInfoOuterClass.SceneReliquaryInfo m =
                    input.readMessage(
                        SceneReliquaryInfoOuterClass.SceneReliquaryInfo.parser(),
                        extensionRegistry);
                if (reliquaryListBuilder_ == null) {
                  ensureReliquaryListIsMutable();
                  reliquaryList_.add(m);
                } else {
                  reliquaryListBuilder_.addMessage(m);
                }
                break;
              } // case 74
              case 88: {
                coreProudSkillLevel_ = input.readUInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 88
              case 96: {
                int v = input.readUInt32();
                ensureInherentProudSkillListIsMutable();
                inherentProudSkillList_.addInt(v);
                break;
              } // case 96
              case 98: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureInherentProudSkillListIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  inherentProudSkillList_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 98
              case 106: {
                com.google.protobuf.MapEntry<Integer, Integer>
                skillLevelMap__ = input.readMessage(
                    SkillLevelMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableSkillLevelMap().getMutableMap().put(
                    skillLevelMap__.getKey(), skillLevelMap__.getValue());
                bitField0_ |= 0x00000800;
                break;
              } // case 106
              case 114: {
                com.google.protobuf.MapEntry<Integer, Integer>
                proudSkillExtraLevelMap__ = input.readMessage(
                    ProudSkillExtraLevelMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableProudSkillExtraLevelMap().getMutableMap().put(
                    proudSkillExtraLevelMap__.getKey(), proudSkillExtraLevelMap__.getValue());
                bitField0_ |= 0x00001000;
                break;
              } // case 114
              case 122: {
                ServerBuffOuterClass.ServerBuff m =
                    input.readMessage(
                        ServerBuffOuterClass.ServerBuff.parser(),
                        extensionRegistry);
                if (serverBuffListBuilder_ == null) {
                  ensureServerBuffListIsMutable();
                  serverBuffList_.add(m);
                } else {
                  serverBuffListBuilder_.addMessage(m);
                }
                break;
              } // case 122
              case 128: {
                int v = input.readUInt32();
                ensureTeamResonanceListIsMutable();
                teamResonanceList_.addInt(v);
                break;
              } // case 128
              case 130: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureTeamResonanceListIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  teamResonanceList_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 130
              case 136: {
                wearingFlycloakId_ = input.readUInt32();
                bitField0_ |= 0x00008000;
                break;
              } // case 136
              case 144: {
                bornTime_ = input.readUInt32();
                bitField0_ |= 0x00010000;
                break;
              } // case 144
              case 152: {
                costumeId_ = input.readUInt32();
                bitField0_ |= 0x00020000;
                break;
              } // case 152
              case 162: {
                input.readMessage(
                    getCurVehicleInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00040000;
                break;
              } // case 162
              case 170: {
                input.readMessage(
                    getExcelInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00080000;
                break;
              } // case 170
              case 176: {
                animHash_ = input.readUInt32();
                bitField0_ |= 0x00100000;
                break;
              } // case 176
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int uid_ ;
      /**
       * <code>uint32 uid = 1;</code>
       * @return The uid.
       */
      @Override
      public int getUid() {
        return uid_;
      }
      /**
       * <code>uint32 uid = 1;</code>
       * @param value The uid to set.
       * @return This builder for chaining.
       */
      public Builder setUid(int value) {

        uid_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 uid = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        uid_ = 0;
        onChanged();
        return this;
      }

      private int avatarId_ ;
      /**
       * <code>uint32 avatar_id = 2;</code>
       * @return The avatarId.
       */
      @Override
      public int getAvatarId() {
        return avatarId_;
      }
      /**
       * <code>uint32 avatar_id = 2;</code>
       * @param value The avatarId to set.
       * @return This builder for chaining.
       */
      public Builder setAvatarId(int value) {

        avatarId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 avatar_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearAvatarId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        avatarId_ = 0;
        onChanged();
        return this;
      }

      private long guid_ ;
      /**
       * <code>uint64 guid = 3;</code>
       * @return The guid.
       */
      @Override
      public long getGuid() {
        return guid_;
      }
      /**
       * <code>uint64 guid = 3;</code>
       * @param value The guid to set.
       * @return This builder for chaining.
       */
      public Builder setGuid(long value) {

        guid_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 guid = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearGuid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        guid_ = 0L;
        onChanged();
        return this;
      }

      private int peerId_ ;
      /**
       * <code>uint32 peer_id = 4;</code>
       * @return The peerId.
       */
      @Override
      public int getPeerId() {
        return peerId_;
      }
      /**
       * <code>uint32 peer_id = 4;</code>
       * @param value The peerId to set.
       * @return This builder for chaining.
       */
      public Builder setPeerId(int value) {

        peerId_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 peer_id = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPeerId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        peerId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList equipIdList_ = emptyIntList();
      private void ensureEquipIdListIsMutable() {
        if (!equipIdList_.isModifiable()) {
          equipIdList_ = makeMutableCopy(equipIdList_);
        }
        bitField0_ |= 0x00000010;
      }
      /**
       * <code>repeated uint32 equip_id_list = 5;</code>
       * @return A list containing the equipIdList.
       */
      public java.util.List<Integer>
          getEquipIdListList() {
        equipIdList_.makeImmutable();
        return equipIdList_;
      }
      /**
       * <code>repeated uint32 equip_id_list = 5;</code>
       * @return The count of equipIdList.
       */
      public int getEquipIdListCount() {
        return equipIdList_.size();
      }
      /**
       * <code>repeated uint32 equip_id_list = 5;</code>
       * @param index The index of the element to return.
       * @return The equipIdList at the given index.
       */
      public int getEquipIdList(int index) {
        return equipIdList_.getInt(index);
      }
      /**
       * <code>repeated uint32 equip_id_list = 5;</code>
       * @param index The index to set the value at.
       * @param value The equipIdList to set.
       * @return This builder for chaining.
       */
      public Builder setEquipIdList(
          int index, int value) {

        ensureEquipIdListIsMutable();
        equipIdList_.setInt(index, value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 equip_id_list = 5;</code>
       * @param value The equipIdList to add.
       * @return This builder for chaining.
       */
      public Builder addEquipIdList(int value) {

        ensureEquipIdListIsMutable();
        equipIdList_.addInt(value);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 equip_id_list = 5;</code>
       * @param values The equipIdList to add.
       * @return This builder for chaining.
       */
      public Builder addAllEquipIdList(
          Iterable<? extends Integer> values) {
        ensureEquipIdListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, equipIdList_);
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 equip_id_list = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearEquipIdList() {
        equipIdList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private int skillDepotId_ ;
      /**
       * <code>uint32 skill_depot_id = 6;</code>
       * @return The skillDepotId.
       */
      @Override
      public int getSkillDepotId() {
        return skillDepotId_;
      }
      /**
       * <code>uint32 skill_depot_id = 6;</code>
       * @param value The skillDepotId to set.
       * @return This builder for chaining.
       */
      public Builder setSkillDepotId(int value) {

        skillDepotId_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 skill_depot_id = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearSkillDepotId() {
        bitField0_ = (bitField0_ & ~0x00000020);
        skillDepotId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList talentIdList_ = emptyIntList();
      private void ensureTalentIdListIsMutable() {
        if (!talentIdList_.isModifiable()) {
          talentIdList_ = makeMutableCopy(talentIdList_);
        }
        bitField0_ |= 0x00000040;
      }
      /**
       * <code>repeated uint32 talent_id_list = 7;</code>
       * @return A list containing the talentIdList.
       */
      public java.util.List<Integer>
          getTalentIdListList() {
        talentIdList_.makeImmutable();
        return talentIdList_;
      }
      /**
       * <code>repeated uint32 talent_id_list = 7;</code>
       * @return The count of talentIdList.
       */
      public int getTalentIdListCount() {
        return talentIdList_.size();
      }
      /**
       * <code>repeated uint32 talent_id_list = 7;</code>
       * @param index The index of the element to return.
       * @return The talentIdList at the given index.
       */
      public int getTalentIdList(int index) {
        return talentIdList_.getInt(index);
      }
      /**
       * <code>repeated uint32 talent_id_list = 7;</code>
       * @param index The index to set the value at.
       * @param value The talentIdList to set.
       * @return This builder for chaining.
       */
      public Builder setTalentIdList(
          int index, int value) {

        ensureTalentIdListIsMutable();
        talentIdList_.setInt(index, value);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 talent_id_list = 7;</code>
       * @param value The talentIdList to add.
       * @return This builder for chaining.
       */
      public Builder addTalentIdList(int value) {

        ensureTalentIdListIsMutable();
        talentIdList_.addInt(value);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 talent_id_list = 7;</code>
       * @param values The talentIdList to add.
       * @return This builder for chaining.
       */
      public Builder addAllTalentIdList(
          Iterable<? extends Integer> values) {
        ensureTalentIdListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, talentIdList_);
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 talent_id_list = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTalentIdList() {
        talentIdList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private SceneWeaponInfoOuterClass.SceneWeaponInfo weapon_;
      private com.google.protobuf.SingleFieldBuilder<
          SceneWeaponInfoOuterClass.SceneWeaponInfo, SceneWeaponInfoOuterClass.SceneWeaponInfo.Builder, SceneWeaponInfoOuterClass.SceneWeaponInfoOrBuilder> weaponBuilder_;
      /**
       * <code>.SceneWeaponInfo weapon = 8;</code>
       * @return Whether the weapon field is set.
       */
      public boolean hasWeapon() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>.SceneWeaponInfo weapon = 8;</code>
       * @return The weapon.
       */
      public SceneWeaponInfoOuterClass.SceneWeaponInfo getWeapon() {
        if (weaponBuilder_ == null) {
          return weapon_ == null ? SceneWeaponInfoOuterClass.SceneWeaponInfo.getDefaultInstance() : weapon_;
        } else {
          return weaponBuilder_.getMessage();
        }
      }
      /**
       * <code>.SceneWeaponInfo weapon = 8;</code>
       */
      public Builder setWeapon(SceneWeaponInfoOuterClass.SceneWeaponInfo value) {
        if (weaponBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          weapon_ = value;
        } else {
          weaponBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>.SceneWeaponInfo weapon = 8;</code>
       */
      public Builder setWeapon(
          SceneWeaponInfoOuterClass.SceneWeaponInfo.Builder builderForValue) {
        if (weaponBuilder_ == null) {
          weapon_ = builderForValue.build();
        } else {
          weaponBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>.SceneWeaponInfo weapon = 8;</code>
       */
      public Builder mergeWeapon(SceneWeaponInfoOuterClass.SceneWeaponInfo value) {
        if (weaponBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0) &&
            weapon_ != null &&
            weapon_ != SceneWeaponInfoOuterClass.SceneWeaponInfo.getDefaultInstance()) {
            getWeaponBuilder().mergeFrom(value);
          } else {
            weapon_ = value;
          }
        } else {
          weaponBuilder_.mergeFrom(value);
        }
        if (weapon_ != null) {
          bitField0_ |= 0x00000080;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.SceneWeaponInfo weapon = 8;</code>
       */
      public Builder clearWeapon() {
        bitField0_ = (bitField0_ & ~0x00000080);
        weapon_ = null;
        if (weaponBuilder_ != null) {
          weaponBuilder_.dispose();
          weaponBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.SceneWeaponInfo weapon = 8;</code>
       */
      public SceneWeaponInfoOuterClass.SceneWeaponInfo.Builder getWeaponBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getWeaponFieldBuilder().getBuilder();
      }
      /**
       * <code>.SceneWeaponInfo weapon = 8;</code>
       */
      public SceneWeaponInfoOuterClass.SceneWeaponInfoOrBuilder getWeaponOrBuilder() {
        if (weaponBuilder_ != null) {
          return weaponBuilder_.getMessageOrBuilder();
        } else {
          return weapon_ == null ?
              SceneWeaponInfoOuterClass.SceneWeaponInfo.getDefaultInstance() : weapon_;
        }
      }
      /**
       * <code>.SceneWeaponInfo weapon = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SceneWeaponInfoOuterClass.SceneWeaponInfo, SceneWeaponInfoOuterClass.SceneWeaponInfo.Builder, SceneWeaponInfoOuterClass.SceneWeaponInfoOrBuilder>
          getWeaponFieldBuilder() {
        if (weaponBuilder_ == null) {
          weaponBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SceneWeaponInfoOuterClass.SceneWeaponInfo, SceneWeaponInfoOuterClass.SceneWeaponInfo.Builder, SceneWeaponInfoOuterClass.SceneWeaponInfoOrBuilder>(
                  getWeapon(),
                  getParentForChildren(),
                  isClean());
          weapon_ = null;
        }
        return weaponBuilder_;
      }

      private java.util.List<SceneReliquaryInfoOuterClass.SceneReliquaryInfo> reliquaryList_ =
        java.util.Collections.emptyList();
      private void ensureReliquaryListIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          reliquaryList_ = new java.util.ArrayList<SceneReliquaryInfoOuterClass.SceneReliquaryInfo>(reliquaryList_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          SceneReliquaryInfoOuterClass.SceneReliquaryInfo, SceneReliquaryInfoOuterClass.SceneReliquaryInfo.Builder, SceneReliquaryInfoOuterClass.SceneReliquaryInfoOrBuilder> reliquaryListBuilder_;

      /**
       * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
       */
      public java.util.List<SceneReliquaryInfoOuterClass.SceneReliquaryInfo> getReliquaryListList() {
        if (reliquaryListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(reliquaryList_);
        } else {
          return reliquaryListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
       */
      public int getReliquaryListCount() {
        if (reliquaryListBuilder_ == null) {
          return reliquaryList_.size();
        } else {
          return reliquaryListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
       */
      public SceneReliquaryInfoOuterClass.SceneReliquaryInfo getReliquaryList(int index) {
        if (reliquaryListBuilder_ == null) {
          return reliquaryList_.get(index);
        } else {
          return reliquaryListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
       */
      public Builder setReliquaryList(
          int index, SceneReliquaryInfoOuterClass.SceneReliquaryInfo value) {
        if (reliquaryListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReliquaryListIsMutable();
          reliquaryList_.set(index, value);
          onChanged();
        } else {
          reliquaryListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
       */
      public Builder setReliquaryList(
          int index, SceneReliquaryInfoOuterClass.SceneReliquaryInfo.Builder builderForValue) {
        if (reliquaryListBuilder_ == null) {
          ensureReliquaryListIsMutable();
          reliquaryList_.set(index, builderForValue.build());
          onChanged();
        } else {
          reliquaryListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
       */
      public Builder addReliquaryList(SceneReliquaryInfoOuterClass.SceneReliquaryInfo value) {
        if (reliquaryListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReliquaryListIsMutable();
          reliquaryList_.add(value);
          onChanged();
        } else {
          reliquaryListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
       */
      public Builder addReliquaryList(
          int index, SceneReliquaryInfoOuterClass.SceneReliquaryInfo value) {
        if (reliquaryListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureReliquaryListIsMutable();
          reliquaryList_.add(index, value);
          onChanged();
        } else {
          reliquaryListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
       */
      public Builder addReliquaryList(
          SceneReliquaryInfoOuterClass.SceneReliquaryInfo.Builder builderForValue) {
        if (reliquaryListBuilder_ == null) {
          ensureReliquaryListIsMutable();
          reliquaryList_.add(builderForValue.build());
          onChanged();
        } else {
          reliquaryListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
       */
      public Builder addReliquaryList(
          int index, SceneReliquaryInfoOuterClass.SceneReliquaryInfo.Builder builderForValue) {
        if (reliquaryListBuilder_ == null) {
          ensureReliquaryListIsMutable();
          reliquaryList_.add(index, builderForValue.build());
          onChanged();
        } else {
          reliquaryListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
       */
      public Builder addAllReliquaryList(
          Iterable<? extends SceneReliquaryInfoOuterClass.SceneReliquaryInfo> values) {
        if (reliquaryListBuilder_ == null) {
          ensureReliquaryListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, reliquaryList_);
          onChanged();
        } else {
          reliquaryListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
       */
      public Builder clearReliquaryList() {
        if (reliquaryListBuilder_ == null) {
          reliquaryList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          reliquaryListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
       */
      public Builder removeReliquaryList(int index) {
        if (reliquaryListBuilder_ == null) {
          ensureReliquaryListIsMutable();
          reliquaryList_.remove(index);
          onChanged();
        } else {
          reliquaryListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
       */
      public SceneReliquaryInfoOuterClass.SceneReliquaryInfo.Builder getReliquaryListBuilder(
          int index) {
        return getReliquaryListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
       */
      public SceneReliquaryInfoOuterClass.SceneReliquaryInfoOrBuilder getReliquaryListOrBuilder(
          int index) {
        if (reliquaryListBuilder_ == null) {
          return reliquaryList_.get(index);  } else {
          return reliquaryListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
       */
      public java.util.List<? extends SceneReliquaryInfoOuterClass.SceneReliquaryInfoOrBuilder>
           getReliquaryListOrBuilderList() {
        if (reliquaryListBuilder_ != null) {
          return reliquaryListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(reliquaryList_);
        }
      }
      /**
       * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
       */
      public SceneReliquaryInfoOuterClass.SceneReliquaryInfo.Builder addReliquaryListBuilder() {
        return getReliquaryListFieldBuilder().addBuilder(
            SceneReliquaryInfoOuterClass.SceneReliquaryInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
       */
      public SceneReliquaryInfoOuterClass.SceneReliquaryInfo.Builder addReliquaryListBuilder(
          int index) {
        return getReliquaryListFieldBuilder().addBuilder(
            index, SceneReliquaryInfoOuterClass.SceneReliquaryInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .SceneReliquaryInfo reliquary_list = 9;</code>
       */
      public java.util.List<SceneReliquaryInfoOuterClass.SceneReliquaryInfo.Builder>
           getReliquaryListBuilderList() {
        return getReliquaryListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          SceneReliquaryInfoOuterClass.SceneReliquaryInfo, SceneReliquaryInfoOuterClass.SceneReliquaryInfo.Builder, SceneReliquaryInfoOuterClass.SceneReliquaryInfoOrBuilder>
          getReliquaryListFieldBuilder() {
        if (reliquaryListBuilder_ == null) {
          reliquaryListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              SceneReliquaryInfoOuterClass.SceneReliquaryInfo, SceneReliquaryInfoOuterClass.SceneReliquaryInfo.Builder, SceneReliquaryInfoOuterClass.SceneReliquaryInfoOrBuilder>(
                  reliquaryList_,
                  ((bitField0_ & 0x00000100) != 0),
                  getParentForChildren(),
                  isClean());
          reliquaryList_ = null;
        }
        return reliquaryListBuilder_;
      }

      private int coreProudSkillLevel_ ;
      /**
       * <code>uint32 core_proud_skill_level = 11;</code>
       * @return The coreProudSkillLevel.
       */
      @Override
      public int getCoreProudSkillLevel() {
        return coreProudSkillLevel_;
      }
      /**
       * <code>uint32 core_proud_skill_level = 11;</code>
       * @param value The coreProudSkillLevel to set.
       * @return This builder for chaining.
       */
      public Builder setCoreProudSkillLevel(int value) {

        coreProudSkillLevel_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 core_proud_skill_level = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearCoreProudSkillLevel() {
        bitField0_ = (bitField0_ & ~0x00000200);
        coreProudSkillLevel_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList inherentProudSkillList_ = emptyIntList();
      private void ensureInherentProudSkillListIsMutable() {
        if (!inherentProudSkillList_.isModifiable()) {
          inherentProudSkillList_ = makeMutableCopy(inherentProudSkillList_);
        }
        bitField0_ |= 0x00000400;
      }
      /**
       * <code>repeated uint32 inherent_proud_skill_list = 12;</code>
       * @return A list containing the inherentProudSkillList.
       */
      public java.util.List<Integer>
          getInherentProudSkillListList() {
        inherentProudSkillList_.makeImmutable();
        return inherentProudSkillList_;
      }
      /**
       * <code>repeated uint32 inherent_proud_skill_list = 12;</code>
       * @return The count of inherentProudSkillList.
       */
      public int getInherentProudSkillListCount() {
        return inherentProudSkillList_.size();
      }
      /**
       * <code>repeated uint32 inherent_proud_skill_list = 12;</code>
       * @param index The index of the element to return.
       * @return The inherentProudSkillList at the given index.
       */
      public int getInherentProudSkillList(int index) {
        return inherentProudSkillList_.getInt(index);
      }
      /**
       * <code>repeated uint32 inherent_proud_skill_list = 12;</code>
       * @param index The index to set the value at.
       * @param value The inherentProudSkillList to set.
       * @return This builder for chaining.
       */
      public Builder setInherentProudSkillList(
          int index, int value) {

        ensureInherentProudSkillListIsMutable();
        inherentProudSkillList_.setInt(index, value);
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 inherent_proud_skill_list = 12;</code>
       * @param value The inherentProudSkillList to add.
       * @return This builder for chaining.
       */
      public Builder addInherentProudSkillList(int value) {

        ensureInherentProudSkillListIsMutable();
        inherentProudSkillList_.addInt(value);
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 inherent_proud_skill_list = 12;</code>
       * @param values The inherentProudSkillList to add.
       * @return This builder for chaining.
       */
      public Builder addAllInherentProudSkillList(
          Iterable<? extends Integer> values) {
        ensureInherentProudSkillListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, inherentProudSkillList_);
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 inherent_proud_skill_list = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearInherentProudSkillList() {
        inherentProudSkillList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          Integer, Integer> skillLevelMap_;
      private com.google.protobuf.MapField<Integer, Integer>
          internalGetSkillLevelMap() {
        if (skillLevelMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              SkillLevelMapDefaultEntryHolder.defaultEntry);
        }
        return skillLevelMap_;
      }
      private com.google.protobuf.MapField<Integer, Integer>
          internalGetMutableSkillLevelMap() {
        if (skillLevelMap_ == null) {
          skillLevelMap_ = com.google.protobuf.MapField.newMapField(
              SkillLevelMapDefaultEntryHolder.defaultEntry);
        }
        if (!skillLevelMap_.isMutable()) {
          skillLevelMap_ = skillLevelMap_.copy();
        }
        bitField0_ |= 0x00000800;
        onChanged();
        return skillLevelMap_;
      }
      public int getSkillLevelMapCount() {
        return internalGetSkillLevelMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; skill_level_map = 13;</code>
       */
      @Override
      public boolean containsSkillLevelMap(
          int key) {

        return internalGetSkillLevelMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSkillLevelMapMap()} instead.
       */
      @Override
      @Deprecated
      public java.util.Map<Integer, Integer> getSkillLevelMap() {
        return getSkillLevelMapMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; skill_level_map = 13;</code>
       */
      @Override
      public java.util.Map<Integer, Integer> getSkillLevelMapMap() {
        return internalGetSkillLevelMap().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; skill_level_map = 13;</code>
       */
      @Override
      public int getSkillLevelMapOrDefault(
          int key,
          int defaultValue) {

        java.util.Map<Integer, Integer> map =
            internalGetSkillLevelMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; skill_level_map = 13;</code>
       */
      @Override
      public int getSkillLevelMapOrThrow(
          int key) {

        java.util.Map<Integer, Integer> map =
            internalGetSkillLevelMap().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearSkillLevelMap() {
        bitField0_ = (bitField0_ & ~0x00000800);
        internalGetMutableSkillLevelMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; skill_level_map = 13;</code>
       */
      public Builder removeSkillLevelMap(
          int key) {

        internalGetMutableSkillLevelMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<Integer, Integer>
          getMutableSkillLevelMap() {
        bitField0_ |= 0x00000800;
        return internalGetMutableSkillLevelMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; skill_level_map = 13;</code>
       */
      public Builder putSkillLevelMap(
          int key,
          int value) {


        internalGetMutableSkillLevelMap().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; skill_level_map = 13;</code>
       */
      public Builder putAllSkillLevelMap(
          java.util.Map<Integer, Integer> values) {
        internalGetMutableSkillLevelMap().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000800;
        return this;
      }

      private com.google.protobuf.MapField<
          Integer, Integer> proudSkillExtraLevelMap_;
      private com.google.protobuf.MapField<Integer, Integer>
          internalGetProudSkillExtraLevelMap() {
        if (proudSkillExtraLevelMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ProudSkillExtraLevelMapDefaultEntryHolder.defaultEntry);
        }
        return proudSkillExtraLevelMap_;
      }
      private com.google.protobuf.MapField<Integer, Integer>
          internalGetMutableProudSkillExtraLevelMap() {
        if (proudSkillExtraLevelMap_ == null) {
          proudSkillExtraLevelMap_ = com.google.protobuf.MapField.newMapField(
              ProudSkillExtraLevelMapDefaultEntryHolder.defaultEntry);
        }
        if (!proudSkillExtraLevelMap_.isMutable()) {
          proudSkillExtraLevelMap_ = proudSkillExtraLevelMap_.copy();
        }
        bitField0_ |= 0x00001000;
        onChanged();
        return proudSkillExtraLevelMap_;
      }
      public int getProudSkillExtraLevelMapCount() {
        return internalGetProudSkillExtraLevelMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 14;</code>
       */
      @Override
      public boolean containsProudSkillExtraLevelMap(
          int key) {

        return internalGetProudSkillExtraLevelMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getProudSkillExtraLevelMapMap()} instead.
       */
      @Override
      @Deprecated
      public java.util.Map<Integer, Integer> getProudSkillExtraLevelMap() {
        return getProudSkillExtraLevelMapMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 14;</code>
       */
      @Override
      public java.util.Map<Integer, Integer> getProudSkillExtraLevelMapMap() {
        return internalGetProudSkillExtraLevelMap().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 14;</code>
       */
      @Override
      public int getProudSkillExtraLevelMapOrDefault(
          int key,
          int defaultValue) {

        java.util.Map<Integer, Integer> map =
            internalGetProudSkillExtraLevelMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 14;</code>
       */
      @Override
      public int getProudSkillExtraLevelMapOrThrow(
          int key) {

        java.util.Map<Integer, Integer> map =
            internalGetProudSkillExtraLevelMap().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearProudSkillExtraLevelMap() {
        bitField0_ = (bitField0_ & ~0x00001000);
        internalGetMutableProudSkillExtraLevelMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 14;</code>
       */
      public Builder removeProudSkillExtraLevelMap(
          int key) {

        internalGetMutableProudSkillExtraLevelMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<Integer, Integer>
          getMutableProudSkillExtraLevelMap() {
        bitField0_ |= 0x00001000;
        return internalGetMutableProudSkillExtraLevelMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 14;</code>
       */
      public Builder putProudSkillExtraLevelMap(
          int key,
          int value) {


        internalGetMutableProudSkillExtraLevelMap().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 14;</code>
       */
      public Builder putAllProudSkillExtraLevelMap(
          java.util.Map<Integer, Integer> values) {
        internalGetMutableProudSkillExtraLevelMap().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00001000;
        return this;
      }

      private java.util.List<ServerBuffOuterClass.ServerBuff> serverBuffList_ =
        java.util.Collections.emptyList();
      private void ensureServerBuffListIsMutable() {
        if (!((bitField0_ & 0x00002000) != 0)) {
          serverBuffList_ = new java.util.ArrayList<ServerBuffOuterClass.ServerBuff>(serverBuffList_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          ServerBuffOuterClass.ServerBuff, ServerBuffOuterClass.ServerBuff.Builder, ServerBuffOuterClass.ServerBuffOrBuilder> serverBuffListBuilder_;

      /**
       * <code>repeated .ServerBuff server_buff_list = 15;</code>
       */
      public java.util.List<ServerBuffOuterClass.ServerBuff> getServerBuffListList() {
        if (serverBuffListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(serverBuffList_);
        } else {
          return serverBuffListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ServerBuff server_buff_list = 15;</code>
       */
      public int getServerBuffListCount() {
        if (serverBuffListBuilder_ == null) {
          return serverBuffList_.size();
        } else {
          return serverBuffListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ServerBuff server_buff_list = 15;</code>
       */
      public ServerBuffOuterClass.ServerBuff getServerBuffList(int index) {
        if (serverBuffListBuilder_ == null) {
          return serverBuffList_.get(index);
        } else {
          return serverBuffListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ServerBuff server_buff_list = 15;</code>
       */
      public Builder setServerBuffList(
          int index, ServerBuffOuterClass.ServerBuff value) {
        if (serverBuffListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServerBuffListIsMutable();
          serverBuffList_.set(index, value);
          onChanged();
        } else {
          serverBuffListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ServerBuff server_buff_list = 15;</code>
       */
      public Builder setServerBuffList(
          int index, ServerBuffOuterClass.ServerBuff.Builder builderForValue) {
        if (serverBuffListBuilder_ == null) {
          ensureServerBuffListIsMutable();
          serverBuffList_.set(index, builderForValue.build());
          onChanged();
        } else {
          serverBuffListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ServerBuff server_buff_list = 15;</code>
       */
      public Builder addServerBuffList(ServerBuffOuterClass.ServerBuff value) {
        if (serverBuffListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServerBuffListIsMutable();
          serverBuffList_.add(value);
          onChanged();
        } else {
          serverBuffListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ServerBuff server_buff_list = 15;</code>
       */
      public Builder addServerBuffList(
          int index, ServerBuffOuterClass.ServerBuff value) {
        if (serverBuffListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureServerBuffListIsMutable();
          serverBuffList_.add(index, value);
          onChanged();
        } else {
          serverBuffListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ServerBuff server_buff_list = 15;</code>
       */
      public Builder addServerBuffList(
          ServerBuffOuterClass.ServerBuff.Builder builderForValue) {
        if (serverBuffListBuilder_ == null) {
          ensureServerBuffListIsMutable();
          serverBuffList_.add(builderForValue.build());
          onChanged();
        } else {
          serverBuffListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ServerBuff server_buff_list = 15;</code>
       */
      public Builder addServerBuffList(
          int index, ServerBuffOuterClass.ServerBuff.Builder builderForValue) {
        if (serverBuffListBuilder_ == null) {
          ensureServerBuffListIsMutable();
          serverBuffList_.add(index, builderForValue.build());
          onChanged();
        } else {
          serverBuffListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ServerBuff server_buff_list = 15;</code>
       */
      public Builder addAllServerBuffList(
          Iterable<? extends ServerBuffOuterClass.ServerBuff> values) {
        if (serverBuffListBuilder_ == null) {
          ensureServerBuffListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, serverBuffList_);
          onChanged();
        } else {
          serverBuffListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ServerBuff server_buff_list = 15;</code>
       */
      public Builder clearServerBuffList() {
        if (serverBuffListBuilder_ == null) {
          serverBuffList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          serverBuffListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ServerBuff server_buff_list = 15;</code>
       */
      public Builder removeServerBuffList(int index) {
        if (serverBuffListBuilder_ == null) {
          ensureServerBuffListIsMutable();
          serverBuffList_.remove(index);
          onChanged();
        } else {
          serverBuffListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ServerBuff server_buff_list = 15;</code>
       */
      public ServerBuffOuterClass.ServerBuff.Builder getServerBuffListBuilder(
          int index) {
        return getServerBuffListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ServerBuff server_buff_list = 15;</code>
       */
      public ServerBuffOuterClass.ServerBuffOrBuilder getServerBuffListOrBuilder(
          int index) {
        if (serverBuffListBuilder_ == null) {
          return serverBuffList_.get(index);  } else {
          return serverBuffListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ServerBuff server_buff_list = 15;</code>
       */
      public java.util.List<? extends ServerBuffOuterClass.ServerBuffOrBuilder>
           getServerBuffListOrBuilderList() {
        if (serverBuffListBuilder_ != null) {
          return serverBuffListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(serverBuffList_);
        }
      }
      /**
       * <code>repeated .ServerBuff server_buff_list = 15;</code>
       */
      public ServerBuffOuterClass.ServerBuff.Builder addServerBuffListBuilder() {
        return getServerBuffListFieldBuilder().addBuilder(
            ServerBuffOuterClass.ServerBuff.getDefaultInstance());
      }
      /**
       * <code>repeated .ServerBuff server_buff_list = 15;</code>
       */
      public ServerBuffOuterClass.ServerBuff.Builder addServerBuffListBuilder(
          int index) {
        return getServerBuffListFieldBuilder().addBuilder(
            index, ServerBuffOuterClass.ServerBuff.getDefaultInstance());
      }
      /**
       * <code>repeated .ServerBuff server_buff_list = 15;</code>
       */
      public java.util.List<ServerBuffOuterClass.ServerBuff.Builder>
           getServerBuffListBuilderList() {
        return getServerBuffListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          ServerBuffOuterClass.ServerBuff, ServerBuffOuterClass.ServerBuff.Builder, ServerBuffOuterClass.ServerBuffOrBuilder>
          getServerBuffListFieldBuilder() {
        if (serverBuffListBuilder_ == null) {
          serverBuffListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              ServerBuffOuterClass.ServerBuff, ServerBuffOuterClass.ServerBuff.Builder, ServerBuffOuterClass.ServerBuffOrBuilder>(
                  serverBuffList_,
                  ((bitField0_ & 0x00002000) != 0),
                  getParentForChildren(),
                  isClean());
          serverBuffList_ = null;
        }
        return serverBuffListBuilder_;
      }

      private com.google.protobuf.Internal.IntList teamResonanceList_ = emptyIntList();
      private void ensureTeamResonanceListIsMutable() {
        if (!teamResonanceList_.isModifiable()) {
          teamResonanceList_ = makeMutableCopy(teamResonanceList_);
        }
        bitField0_ |= 0x00004000;
      }
      /**
       * <code>repeated uint32 team_resonance_list = 16;</code>
       * @return A list containing the teamResonanceList.
       */
      public java.util.List<Integer>
          getTeamResonanceListList() {
        teamResonanceList_.makeImmutable();
        return teamResonanceList_;
      }
      /**
       * <code>repeated uint32 team_resonance_list = 16;</code>
       * @return The count of teamResonanceList.
       */
      public int getTeamResonanceListCount() {
        return teamResonanceList_.size();
      }
      /**
       * <code>repeated uint32 team_resonance_list = 16;</code>
       * @param index The index of the element to return.
       * @return The teamResonanceList at the given index.
       */
      public int getTeamResonanceList(int index) {
        return teamResonanceList_.getInt(index);
      }
      /**
       * <code>repeated uint32 team_resonance_list = 16;</code>
       * @param index The index to set the value at.
       * @param value The teamResonanceList to set.
       * @return This builder for chaining.
       */
      public Builder setTeamResonanceList(
          int index, int value) {

        ensureTeamResonanceListIsMutable();
        teamResonanceList_.setInt(index, value);
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 team_resonance_list = 16;</code>
       * @param value The teamResonanceList to add.
       * @return This builder for chaining.
       */
      public Builder addTeamResonanceList(int value) {

        ensureTeamResonanceListIsMutable();
        teamResonanceList_.addInt(value);
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 team_resonance_list = 16;</code>
       * @param values The teamResonanceList to add.
       * @return This builder for chaining.
       */
      public Builder addAllTeamResonanceList(
          Iterable<? extends Integer> values) {
        ensureTeamResonanceListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, teamResonanceList_);
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 team_resonance_list = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearTeamResonanceList() {
        teamResonanceList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      private int wearingFlycloakId_ ;
      /**
       * <code>uint32 wearing_flycloak_id = 17;</code>
       * @return The wearingFlycloakId.
       */
      @Override
      public int getWearingFlycloakId() {
        return wearingFlycloakId_;
      }
      /**
       * <code>uint32 wearing_flycloak_id = 17;</code>
       * @param value The wearingFlycloakId to set.
       * @return This builder for chaining.
       */
      public Builder setWearingFlycloakId(int value) {

        wearingFlycloakId_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 wearing_flycloak_id = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearWearingFlycloakId() {
        bitField0_ = (bitField0_ & ~0x00008000);
        wearingFlycloakId_ = 0;
        onChanged();
        return this;
      }

      private int bornTime_ ;
      /**
       * <code>uint32 born_time = 18;</code>
       * @return The bornTime.
       */
      @Override
      public int getBornTime() {
        return bornTime_;
      }
      /**
       * <code>uint32 born_time = 18;</code>
       * @param value The bornTime to set.
       * @return This builder for chaining.
       */
      public Builder setBornTime(int value) {

        bornTime_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 born_time = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearBornTime() {
        bitField0_ = (bitField0_ & ~0x00010000);
        bornTime_ = 0;
        onChanged();
        return this;
      }

      private int costumeId_ ;
      /**
       * <code>uint32 costume_id = 19;</code>
       * @return The costumeId.
       */
      @Override
      public int getCostumeId() {
        return costumeId_;
      }
      /**
       * <code>uint32 costume_id = 19;</code>
       * @param value The costumeId to set.
       * @return This builder for chaining.
       */
      public Builder setCostumeId(int value) {

        costumeId_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 costume_id = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearCostumeId() {
        bitField0_ = (bitField0_ & ~0x00020000);
        costumeId_ = 0;
        onChanged();
        return this;
      }

      private CurVehicleInfoOuterClass.CurVehicleInfo curVehicleInfo_;
      private com.google.protobuf.SingleFieldBuilder<
          CurVehicleInfoOuterClass.CurVehicleInfo, CurVehicleInfoOuterClass.CurVehicleInfo.Builder, CurVehicleInfoOuterClass.CurVehicleInfoOrBuilder> curVehicleInfoBuilder_;
      /**
       * <code>.CurVehicleInfo cur_vehicle_info = 20;</code>
       * @return Whether the curVehicleInfo field is set.
       */
      public boolean hasCurVehicleInfo() {
        return ((bitField0_ & 0x00040000) != 0);
      }
      /**
       * <code>.CurVehicleInfo cur_vehicle_info = 20;</code>
       * @return The curVehicleInfo.
       */
      public CurVehicleInfoOuterClass.CurVehicleInfo getCurVehicleInfo() {
        if (curVehicleInfoBuilder_ == null) {
          return curVehicleInfo_ == null ? CurVehicleInfoOuterClass.CurVehicleInfo.getDefaultInstance() : curVehicleInfo_;
        } else {
          return curVehicleInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.CurVehicleInfo cur_vehicle_info = 20;</code>
       */
      public Builder setCurVehicleInfo(CurVehicleInfoOuterClass.CurVehicleInfo value) {
        if (curVehicleInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          curVehicleInfo_ = value;
        } else {
          curVehicleInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>.CurVehicleInfo cur_vehicle_info = 20;</code>
       */
      public Builder setCurVehicleInfo(
          CurVehicleInfoOuterClass.CurVehicleInfo.Builder builderForValue) {
        if (curVehicleInfoBuilder_ == null) {
          curVehicleInfo_ = builderForValue.build();
        } else {
          curVehicleInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>.CurVehicleInfo cur_vehicle_info = 20;</code>
       */
      public Builder mergeCurVehicleInfo(CurVehicleInfoOuterClass.CurVehicleInfo value) {
        if (curVehicleInfoBuilder_ == null) {
          if (((bitField0_ & 0x00040000) != 0) &&
            curVehicleInfo_ != null &&
            curVehicleInfo_ != CurVehicleInfoOuterClass.CurVehicleInfo.getDefaultInstance()) {
            getCurVehicleInfoBuilder().mergeFrom(value);
          } else {
            curVehicleInfo_ = value;
          }
        } else {
          curVehicleInfoBuilder_.mergeFrom(value);
        }
        if (curVehicleInfo_ != null) {
          bitField0_ |= 0x00040000;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.CurVehicleInfo cur_vehicle_info = 20;</code>
       */
      public Builder clearCurVehicleInfo() {
        bitField0_ = (bitField0_ & ~0x00040000);
        curVehicleInfo_ = null;
        if (curVehicleInfoBuilder_ != null) {
          curVehicleInfoBuilder_.dispose();
          curVehicleInfoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.CurVehicleInfo cur_vehicle_info = 20;</code>
       */
      public CurVehicleInfoOuterClass.CurVehicleInfo.Builder getCurVehicleInfoBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getCurVehicleInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.CurVehicleInfo cur_vehicle_info = 20;</code>
       */
      public CurVehicleInfoOuterClass.CurVehicleInfoOrBuilder getCurVehicleInfoOrBuilder() {
        if (curVehicleInfoBuilder_ != null) {
          return curVehicleInfoBuilder_.getMessageOrBuilder();
        } else {
          return curVehicleInfo_ == null ?
              CurVehicleInfoOuterClass.CurVehicleInfo.getDefaultInstance() : curVehicleInfo_;
        }
      }
      /**
       * <code>.CurVehicleInfo cur_vehicle_info = 20;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          CurVehicleInfoOuterClass.CurVehicleInfo, CurVehicleInfoOuterClass.CurVehicleInfo.Builder, CurVehicleInfoOuterClass.CurVehicleInfoOrBuilder>
          getCurVehicleInfoFieldBuilder() {
        if (curVehicleInfoBuilder_ == null) {
          curVehicleInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              CurVehicleInfoOuterClass.CurVehicleInfo, CurVehicleInfoOuterClass.CurVehicleInfo.Builder, CurVehicleInfoOuterClass.CurVehicleInfoOrBuilder>(
                  getCurVehicleInfo(),
                  getParentForChildren(),
                  isClean());
          curVehicleInfo_ = null;
        }
        return curVehicleInfoBuilder_;
      }

      private AvatarExcelInfoOuterClass.AvatarExcelInfo excelInfo_;
      private com.google.protobuf.SingleFieldBuilder<
          AvatarExcelInfoOuterClass.AvatarExcelInfo, AvatarExcelInfoOuterClass.AvatarExcelInfo.Builder, AvatarExcelInfoOuterClass.AvatarExcelInfoOrBuilder> excelInfoBuilder_;
      /**
       * <code>.AvatarExcelInfo excel_info = 21;</code>
       * @return Whether the excelInfo field is set.
       */
      public boolean hasExcelInfo() {
        return ((bitField0_ & 0x00080000) != 0);
      }
      /**
       * <code>.AvatarExcelInfo excel_info = 21;</code>
       * @return The excelInfo.
       */
      public AvatarExcelInfoOuterClass.AvatarExcelInfo getExcelInfo() {
        if (excelInfoBuilder_ == null) {
          return excelInfo_ == null ? AvatarExcelInfoOuterClass.AvatarExcelInfo.getDefaultInstance() : excelInfo_;
        } else {
          return excelInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.AvatarExcelInfo excel_info = 21;</code>
       */
      public Builder setExcelInfo(AvatarExcelInfoOuterClass.AvatarExcelInfo value) {
        if (excelInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          excelInfo_ = value;
        } else {
          excelInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>.AvatarExcelInfo excel_info = 21;</code>
       */
      public Builder setExcelInfo(
          AvatarExcelInfoOuterClass.AvatarExcelInfo.Builder builderForValue) {
        if (excelInfoBuilder_ == null) {
          excelInfo_ = builderForValue.build();
        } else {
          excelInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>.AvatarExcelInfo excel_info = 21;</code>
       */
      public Builder mergeExcelInfo(AvatarExcelInfoOuterClass.AvatarExcelInfo value) {
        if (excelInfoBuilder_ == null) {
          if (((bitField0_ & 0x00080000) != 0) &&
            excelInfo_ != null &&
            excelInfo_ != AvatarExcelInfoOuterClass.AvatarExcelInfo.getDefaultInstance()) {
            getExcelInfoBuilder().mergeFrom(value);
          } else {
            excelInfo_ = value;
          }
        } else {
          excelInfoBuilder_.mergeFrom(value);
        }
        if (excelInfo_ != null) {
          bitField0_ |= 0x00080000;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.AvatarExcelInfo excel_info = 21;</code>
       */
      public Builder clearExcelInfo() {
        bitField0_ = (bitField0_ & ~0x00080000);
        excelInfo_ = null;
        if (excelInfoBuilder_ != null) {
          excelInfoBuilder_.dispose();
          excelInfoBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.AvatarExcelInfo excel_info = 21;</code>
       */
      public AvatarExcelInfoOuterClass.AvatarExcelInfo.Builder getExcelInfoBuilder() {
        bitField0_ |= 0x00080000;
        onChanged();
        return getExcelInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.AvatarExcelInfo excel_info = 21;</code>
       */
      public AvatarExcelInfoOuterClass.AvatarExcelInfoOrBuilder getExcelInfoOrBuilder() {
        if (excelInfoBuilder_ != null) {
          return excelInfoBuilder_.getMessageOrBuilder();
        } else {
          return excelInfo_ == null ?
              AvatarExcelInfoOuterClass.AvatarExcelInfo.getDefaultInstance() : excelInfo_;
        }
      }
      /**
       * <code>.AvatarExcelInfo excel_info = 21;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          AvatarExcelInfoOuterClass.AvatarExcelInfo, AvatarExcelInfoOuterClass.AvatarExcelInfo.Builder, AvatarExcelInfoOuterClass.AvatarExcelInfoOrBuilder>
          getExcelInfoFieldBuilder() {
        if (excelInfoBuilder_ == null) {
          excelInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              AvatarExcelInfoOuterClass.AvatarExcelInfo, AvatarExcelInfoOuterClass.AvatarExcelInfo.Builder, AvatarExcelInfoOuterClass.AvatarExcelInfoOrBuilder>(
                  getExcelInfo(),
                  getParentForChildren(),
                  isClean());
          excelInfo_ = null;
        }
        return excelInfoBuilder_;
      }

      private int animHash_ ;
      /**
       * <code>uint32 anim_hash = 22;</code>
       * @return The animHash.
       */
      @Override
      public int getAnimHash() {
        return animHash_;
      }
      /**
       * <code>uint32 anim_hash = 22;</code>
       * @param value The animHash to set.
       * @return This builder for chaining.
       */
      public Builder setAnimHash(int value) {

        animHash_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 anim_hash = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearAnimHash() {
        bitField0_ = (bitField0_ & ~0x00100000);
        animHash_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SceneAvatarInfo)
    }

    // @@protoc_insertion_point(class_scope:SceneAvatarInfo)
    private static final SceneAvatarInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SceneAvatarInfo();
    }

    public static SceneAvatarInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SceneAvatarInfo>
        PARSER = new com.google.protobuf.AbstractParser<SceneAvatarInfo>() {
      @Override
      public SceneAvatarInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SceneAvatarInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SceneAvatarInfo> getParserForType() {
      return PARSER;
    }

    @Override
    public SceneAvatarInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SceneAvatarInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SceneAvatarInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SceneAvatarInfo_SkillLevelMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SceneAvatarInfo_SkillLevelMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SceneAvatarInfo_ProudSkillExtraLevelMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SceneAvatarInfo_ProudSkillExtraLevelMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\025SceneAvatarInfo.proto\032\025SceneWeaponInfo" +
      ".proto\032\030SceneReliquaryInfo.proto\032\020Server" +
      "Buff.proto\032\024CurVehicleInfo.proto\032\025Avatar" +
      "ExcelInfo.proto\"\235\006\n\017SceneAvatarInfo\022\013\n\003u" +
      "id\030\001 \001(\r\022\021\n\tavatar_id\030\002 \001(\r\022\014\n\004guid\030\003 \001(" +
      "\004\022\017\n\007peer_id\030\004 \001(\r\022\025\n\requip_id_list\030\005 \003(" +
      "\r\022\026\n\016skill_depot_id\030\006 \001(\r\022\026\n\016talent_id_l" +
      "ist\030\007 \003(\r\022 \n\006weapon\030\010 \001(\0132\020.SceneWeaponI" +
      "nfo\022+\n\016reliquary_list\030\t \003(\0132\023.SceneReliq" +
      "uaryInfo\022\036\n\026core_proud_skill_level\030\013 \001(\r" +
      "\022!\n\031inherent_proud_skill_list\030\014 \003(\r\022<\n\017s" +
      "kill_level_map\030\r \003(\0132#.SceneAvatarInfo.S" +
      "killLevelMapEntry\022R\n\033proud_skill_extra_l" +
      "evel_map\030\016 \003(\0132-.SceneAvatarInfo.ProudSk" +
      "illExtraLevelMapEntry\022%\n\020server_buff_lis" +
      "t\030\017 \003(\0132\013.ServerBuff\022\033\n\023team_resonance_l" +
      "ist\030\020 \003(\r\022\033\n\023wearing_flycloak_id\030\021 \001(\r\022\021" +
      "\n\tborn_time\030\022 \001(\r\022\022\n\ncostume_id\030\023 \001(\r\022)\n" +
      "\020cur_vehicle_info\030\024 \001(\0132\017.CurVehicleInfo" +
      "\022$\n\nexcel_info\030\025 \001(\0132\020.AvatarExcelInfo\022\021" +
      "\n\tanim_hash\030\026 \001(\r\0324\n\022SkillLevelMapEntry\022" +
      "\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\032>\n\034Proud" +
      "SkillExtraLevelMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005" +
      "value\030\002 \001(\r:\0028\001B\032\n\030io.irminsul.common.pr" +
      "otob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          SceneWeaponInfoOuterClass.getDescriptor(),
          SceneReliquaryInfoOuterClass.getDescriptor(),
          ServerBuffOuterClass.getDescriptor(),
          CurVehicleInfoOuterClass.getDescriptor(),
          AvatarExcelInfoOuterClass.getDescriptor(),
        });
    internal_static_SceneAvatarInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SceneAvatarInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SceneAvatarInfo_descriptor,
        new String[] { "Uid", "AvatarId", "Guid", "PeerId", "EquipIdList", "SkillDepotId", "TalentIdList", "Weapon", "ReliquaryList", "CoreProudSkillLevel", "InherentProudSkillList", "SkillLevelMap", "ProudSkillExtraLevelMap", "ServerBuffList", "TeamResonanceList", "WearingFlycloakId", "BornTime", "CostumeId", "CurVehicleInfo", "ExcelInfo", "AnimHash", });
    internal_static_SceneAvatarInfo_SkillLevelMapEntry_descriptor =
      internal_static_SceneAvatarInfo_descriptor.getNestedTypes().get(0);
    internal_static_SceneAvatarInfo_SkillLevelMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SceneAvatarInfo_SkillLevelMapEntry_descriptor,
        new String[] { "Key", "Value", });
    internal_static_SceneAvatarInfo_ProudSkillExtraLevelMapEntry_descriptor =
      internal_static_SceneAvatarInfo_descriptor.getNestedTypes().get(1);
    internal_static_SceneAvatarInfo_ProudSkillExtraLevelMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SceneAvatarInfo_ProudSkillExtraLevelMapEntry_descriptor,
        new String[] { "Key", "Value", });
    descriptor.resolveAllFeaturesImmutable();
    SceneWeaponInfoOuterClass.getDescriptor();
    SceneReliquaryInfoOuterClass.getDescriptor();
    ServerBuffOuterClass.getDescriptor();
    CurVehicleInfoOuterClass.getDescriptor();
    AvatarExcelInfoOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
