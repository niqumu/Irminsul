// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: SceneMonsterInfo.proto
// Protobuf Java Version: 4.27.2

package io.irminsul.common.proto;

public final class SceneMonsterInfoOuterClass {
  private SceneMonsterInfoOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      SceneMonsterInfoOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SceneMonsterInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SceneMonsterInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 monster_id = 1;</code>
     * @return The monsterId.
     */
    int getMonsterId();

    /**
     * <code>uint32 group_id = 2;</code>
     * @return The groupId.
     */
    int getGroupId();

    /**
     * <code>uint32 config_id = 3;</code>
     * @return The configId.
     */
    int getConfigId();

    /**
     * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
     */
    java.util.List<SceneWeaponInfoOuterClass.SceneWeaponInfo>
        getWeaponListList();
    /**
     * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
     */
    SceneWeaponInfoOuterClass.SceneWeaponInfo getWeaponList(int index);
    /**
     * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
     */
    int getWeaponListCount();
    /**
     * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
     */
    java.util.List<? extends SceneWeaponInfoOuterClass.SceneWeaponInfoOrBuilder>
        getWeaponListOrBuilderList();
    /**
     * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
     */
    SceneWeaponInfoOuterClass.SceneWeaponInfoOrBuilder getWeaponListOrBuilder(
        int index);

    /**
     * <code>uint32 authority_peer_id = 5;</code>
     * @return The authorityPeerId.
     */
    int getAuthorityPeerId();

    /**
     * <code>repeated uint32 affix_list = 6;</code>
     * @return A list containing the affixList.
     */
    java.util.List<Integer> getAffixListList();
    /**
     * <code>repeated uint32 affix_list = 6;</code>
     * @return The count of affixList.
     */
    int getAffixListCount();
    /**
     * <code>repeated uint32 affix_list = 6;</code>
     * @param index The index of the element to return.
     * @return The affixList at the given index.
     */
    int getAffixList(int index);

    /**
     * <code>bool is_elite = 7;</code>
     * @return The isElite.
     */
    boolean getIsElite();

    /**
     * <code>uint32 owner_entity_id = 8;</code>
     * @return The ownerEntityId.
     */
    int getOwnerEntityId();

    /**
     * <code>uint32 summoned_tag = 9;</code>
     * @return The summonedTag.
     */
    int getSummonedTag();

    /**
     * <code>map&lt;uint32, uint32&gt; summon_tag_map = 10;</code>
     */
    int getSummonTagMapCount();
    /**
     * <code>map&lt;uint32, uint32&gt; summon_tag_map = 10;</code>
     */
    boolean containsSummonTagMap(
        int key);
    /**
     * Use {@link #getSummonTagMapMap()} instead.
     */
    @Deprecated
    java.util.Map<Integer, Integer>
    getSummonTagMap();
    /**
     * <code>map&lt;uint32, uint32&gt; summon_tag_map = 10;</code>
     */
    java.util.Map<Integer, Integer>
    getSummonTagMapMap();
    /**
     * <code>map&lt;uint32, uint32&gt; summon_tag_map = 10;</code>
     */
    int getSummonTagMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; summon_tag_map = 10;</code>
     */
    int getSummonTagMapOrThrow(
        int key);

    /**
     * <code>uint32 pose_id = 11;</code>
     * @return The poseId.
     */
    int getPoseId();

    /**
     * <code>.MonsterBornType born_type = 12;</code>
     * @return The enum numeric value on the wire for bornType.
     */
    int getBornTypeValue();
    /**
     * <code>.MonsterBornType born_type = 12;</code>
     * @return The bornType.
     */
    MonsterBornTypeOuterClass.MonsterBornType getBornType();

    /**
     * <code>uint32 block_id = 13;</code>
     * @return The blockId.
     */
    int getBlockId();

    /**
     * <code>uint32 mark_flag = 14;</code>
     * @return The markFlag.
     */
    int getMarkFlag();

    /**
     * <code>uint32 title_id = 15;</code>
     * @return The titleId.
     */
    int getTitleId();

    /**
     * <code>uint32 special_name_id = 16;</code>
     * @return The specialNameId.
     */
    int getSpecialNameId();

    /**
     * <code>uint32 attack_target_id = 17;</code>
     * @return The attackTargetId.
     */
    int getAttackTargetId();

    /**
     * <code>.MonsterRoute monster_route = 18;</code>
     * @return Whether the monsterRoute field is set.
     */
    boolean hasMonsterRoute();
    /**
     * <code>.MonsterRoute monster_route = 18;</code>
     * @return The monsterRoute.
     */
    MonsterRouteOuterClass.MonsterRoute getMonsterRoute();
    /**
     * <code>.MonsterRoute monster_route = 18;</code>
     */
    MonsterRouteOuterClass.MonsterRouteOrBuilder getMonsterRouteOrBuilder();

    /**
     * <code>uint32 ai_config_id = 19;</code>
     * @return The aiConfigId.
     */
    int getAiConfigId();

    /**
     * <code>uint32 level_route_id = 20;</code>
     * @return The levelRouteId.
     */
    int getLevelRouteId();

    /**
     * <code>uint32 init_pose_id = 21;</code>
     * @return The initPoseId.
     */
    int getInitPoseId();

    /**
     * <code>bool is_light = 22;</code>
     * @return The isLight.
     */
    boolean getIsLight();

    /**
     * <code>uint32 kill_num = 23;</code>
     * @return The killNum.
     */
    int getKillNum();

    /**
     * <code>.SceneFishInfo fish_info = 50;</code>
     * @return Whether the fishInfo field is set.
     */
    boolean hasFishInfo();
    /**
     * <code>.SceneFishInfo fish_info = 50;</code>
     * @return The fishInfo.
     */
    SceneFishInfoOuterClass.SceneFishInfo getFishInfo();
    /**
     * <code>.SceneFishInfo fish_info = 50;</code>
     */
    SceneFishInfoOuterClass.SceneFishInfoOrBuilder getFishInfoOrBuilder();

    /**
     * <code>.FishtankFishInfo fishtank_fish_info = 51;</code>
     * @return Whether the fishtankFishInfo field is set.
     */
    boolean hasFishtankFishInfo();
    /**
     * <code>.FishtankFishInfo fishtank_fish_info = 51;</code>
     * @return The fishtankFishInfo.
     */
    FishtankFishInfoOuterClass.FishtankFishInfo getFishtankFishInfo();
    /**
     * <code>.FishtankFishInfo fishtank_fish_info = 51;</code>
     */
    FishtankFishInfoOuterClass.FishtankFishInfoOrBuilder getFishtankFishInfoOrBuilder();

    SceneMonsterInfo.ContentCase getContentCase();
  }
  /**
   * <pre>
   * Obf: JIEPEMAABDK
   * </pre>
   *
   * Protobuf type {@code SceneMonsterInfo}
   */
  public static final class SceneMonsterInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:SceneMonsterInfo)
      SceneMonsterInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 2,
        /* suffix= */ "",
        SceneMonsterInfo.class.getName());
    }
    // Use SceneMonsterInfo.newBuilder() to construct.
    private SceneMonsterInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SceneMonsterInfo() {
      weaponList_ = java.util.Collections.emptyList();
      affixList_ = emptyIntList();
      bornType_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return SceneMonsterInfoOuterClass.internal_static_SceneMonsterInfo_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @Override
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 10:
          return internalGetSummonTagMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return SceneMonsterInfoOuterClass.internal_static_SceneMonsterInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              SceneMonsterInfo.class, Builder.class);
    }

    private int bitField0_;
    private int contentCase_ = 0;
    @SuppressWarnings("serial")
    private Object content_;
    public enum ContentCase
        implements com.google.protobuf.Internal.EnumLite,
            InternalOneOfEnum {
      FISH_INFO(50),
      FISHTANK_FISH_INFO(51),
      CONTENT_NOT_SET(0);
      private final int value;
      private ContentCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static ContentCase valueOf(int value) {
        return forNumber(value);
      }

      public static ContentCase forNumber(int value) {
        switch (value) {
          case 50: return FISH_INFO;
          case 51: return FISHTANK_FISH_INFO;
          case 0: return CONTENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ContentCase
    getContentCase() {
      return ContentCase.forNumber(
          contentCase_);
    }

    public static final int MONSTER_ID_FIELD_NUMBER = 1;
    private int monsterId_ = 0;
    /**
     * <code>uint32 monster_id = 1;</code>
     * @return The monsterId.
     */
    @Override
    public int getMonsterId() {
      return monsterId_;
    }

    public static final int GROUP_ID_FIELD_NUMBER = 2;
    private int groupId_ = 0;
    /**
     * <code>uint32 group_id = 2;</code>
     * @return The groupId.
     */
    @Override
    public int getGroupId() {
      return groupId_;
    }

    public static final int CONFIG_ID_FIELD_NUMBER = 3;
    private int configId_ = 0;
    /**
     * <code>uint32 config_id = 3;</code>
     * @return The configId.
     */
    @Override
    public int getConfigId() {
      return configId_;
    }

    public static final int WEAPON_LIST_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<SceneWeaponInfoOuterClass.SceneWeaponInfo> weaponList_;
    /**
     * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
     */
    @Override
    public java.util.List<SceneWeaponInfoOuterClass.SceneWeaponInfo> getWeaponListList() {
      return weaponList_;
    }
    /**
     * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
     */
    @Override
    public java.util.List<? extends SceneWeaponInfoOuterClass.SceneWeaponInfoOrBuilder>
        getWeaponListOrBuilderList() {
      return weaponList_;
    }
    /**
     * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
     */
    @Override
    public int getWeaponListCount() {
      return weaponList_.size();
    }
    /**
     * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
     */
    @Override
    public SceneWeaponInfoOuterClass.SceneWeaponInfo getWeaponList(int index) {
      return weaponList_.get(index);
    }
    /**
     * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
     */
    @Override
    public SceneWeaponInfoOuterClass.SceneWeaponInfoOrBuilder getWeaponListOrBuilder(
        int index) {
      return weaponList_.get(index);
    }

    public static final int AUTHORITY_PEER_ID_FIELD_NUMBER = 5;
    private int authorityPeerId_ = 0;
    /**
     * <code>uint32 authority_peer_id = 5;</code>
     * @return The authorityPeerId.
     */
    @Override
    public int getAuthorityPeerId() {
      return authorityPeerId_;
    }

    public static final int AFFIX_LIST_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList affixList_ =
        emptyIntList();
    /**
     * <code>repeated uint32 affix_list = 6;</code>
     * @return A list containing the affixList.
     */
    @Override
    public java.util.List<Integer>
        getAffixListList() {
      return affixList_;
    }
    /**
     * <code>repeated uint32 affix_list = 6;</code>
     * @return The count of affixList.
     */
    public int getAffixListCount() {
      return affixList_.size();
    }
    /**
     * <code>repeated uint32 affix_list = 6;</code>
     * @param index The index of the element to return.
     * @return The affixList at the given index.
     */
    public int getAffixList(int index) {
      return affixList_.getInt(index);
    }
    private int affixListMemoizedSerializedSize = -1;

    public static final int IS_ELITE_FIELD_NUMBER = 7;
    private boolean isElite_ = false;
    /**
     * <code>bool is_elite = 7;</code>
     * @return The isElite.
     */
    @Override
    public boolean getIsElite() {
      return isElite_;
    }

    public static final int OWNER_ENTITY_ID_FIELD_NUMBER = 8;
    private int ownerEntityId_ = 0;
    /**
     * <code>uint32 owner_entity_id = 8;</code>
     * @return The ownerEntityId.
     */
    @Override
    public int getOwnerEntityId() {
      return ownerEntityId_;
    }

    public static final int SUMMONED_TAG_FIELD_NUMBER = 9;
    private int summonedTag_ = 0;
    /**
     * <code>uint32 summoned_tag = 9;</code>
     * @return The summonedTag.
     */
    @Override
    public int getSummonedTag() {
      return summonedTag_;
    }

    public static final int SUMMON_TAG_MAP_FIELD_NUMBER = 10;
    private static final class SummonTagMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          Integer, Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<Integer, Integer>newDefaultInstance(
                  SceneMonsterInfoOuterClass.internal_static_SceneMonsterInfo_SummonTagMapEntry_descriptor,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        Integer, Integer> summonTagMap_;
    private com.google.protobuf.MapField<Integer, Integer>
    internalGetSummonTagMap() {
      if (summonTagMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SummonTagMapDefaultEntryHolder.defaultEntry);
      }
      return summonTagMap_;
    }
    public int getSummonTagMapCount() {
      return internalGetSummonTagMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; summon_tag_map = 10;</code>
     */
    @Override
    public boolean containsSummonTagMap(
        int key) {

      return internalGetSummonTagMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSummonTagMapMap()} instead.
     */
    @Override
    @Deprecated
    public java.util.Map<Integer, Integer> getSummonTagMap() {
      return getSummonTagMapMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; summon_tag_map = 10;</code>
     */
    @Override
    public java.util.Map<Integer, Integer> getSummonTagMapMap() {
      return internalGetSummonTagMap().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; summon_tag_map = 10;</code>
     */
    @Override
    public int getSummonTagMapOrDefault(
        int key,
        int defaultValue) {

      java.util.Map<Integer, Integer> map =
          internalGetSummonTagMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; summon_tag_map = 10;</code>
     */
    @Override
    public int getSummonTagMapOrThrow(
        int key) {

      java.util.Map<Integer, Integer> map =
          internalGetSummonTagMap().getMap();
      if (!map.containsKey(key)) {
        throw new IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int POSE_ID_FIELD_NUMBER = 11;
    private int poseId_ = 0;
    /**
     * <code>uint32 pose_id = 11;</code>
     * @return The poseId.
     */
    @Override
    public int getPoseId() {
      return poseId_;
    }

    public static final int BORN_TYPE_FIELD_NUMBER = 12;
    private int bornType_ = 0;
    /**
     * <code>.MonsterBornType born_type = 12;</code>
     * @return The enum numeric value on the wire for bornType.
     */
    @Override public int getBornTypeValue() {
      return bornType_;
    }
    /**
     * <code>.MonsterBornType born_type = 12;</code>
     * @return The bornType.
     */
    @Override public MonsterBornTypeOuterClass.MonsterBornType getBornType() {
      MonsterBornTypeOuterClass.MonsterBornType result = MonsterBornTypeOuterClass.MonsterBornType.forNumber(bornType_);
      return result == null ? MonsterBornTypeOuterClass.MonsterBornType.UNRECOGNIZED : result;
    }

    public static final int BLOCK_ID_FIELD_NUMBER = 13;
    private int blockId_ = 0;
    /**
     * <code>uint32 block_id = 13;</code>
     * @return The blockId.
     */
    @Override
    public int getBlockId() {
      return blockId_;
    }

    public static final int MARK_FLAG_FIELD_NUMBER = 14;
    private int markFlag_ = 0;
    /**
     * <code>uint32 mark_flag = 14;</code>
     * @return The markFlag.
     */
    @Override
    public int getMarkFlag() {
      return markFlag_;
    }

    public static final int TITLE_ID_FIELD_NUMBER = 15;
    private int titleId_ = 0;
    /**
     * <code>uint32 title_id = 15;</code>
     * @return The titleId.
     */
    @Override
    public int getTitleId() {
      return titleId_;
    }

    public static final int SPECIAL_NAME_ID_FIELD_NUMBER = 16;
    private int specialNameId_ = 0;
    /**
     * <code>uint32 special_name_id = 16;</code>
     * @return The specialNameId.
     */
    @Override
    public int getSpecialNameId() {
      return specialNameId_;
    }

    public static final int ATTACK_TARGET_ID_FIELD_NUMBER = 17;
    private int attackTargetId_ = 0;
    /**
     * <code>uint32 attack_target_id = 17;</code>
     * @return The attackTargetId.
     */
    @Override
    public int getAttackTargetId() {
      return attackTargetId_;
    }

    public static final int MONSTER_ROUTE_FIELD_NUMBER = 18;
    private MonsterRouteOuterClass.MonsterRoute monsterRoute_;
    /**
     * <code>.MonsterRoute monster_route = 18;</code>
     * @return Whether the monsterRoute field is set.
     */
    @Override
    public boolean hasMonsterRoute() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.MonsterRoute monster_route = 18;</code>
     * @return The monsterRoute.
     */
    @Override
    public MonsterRouteOuterClass.MonsterRoute getMonsterRoute() {
      return monsterRoute_ == null ? MonsterRouteOuterClass.MonsterRoute.getDefaultInstance() : monsterRoute_;
    }
    /**
     * <code>.MonsterRoute monster_route = 18;</code>
     */
    @Override
    public MonsterRouteOuterClass.MonsterRouteOrBuilder getMonsterRouteOrBuilder() {
      return monsterRoute_ == null ? MonsterRouteOuterClass.MonsterRoute.getDefaultInstance() : monsterRoute_;
    }

    public static final int AI_CONFIG_ID_FIELD_NUMBER = 19;
    private int aiConfigId_ = 0;
    /**
     * <code>uint32 ai_config_id = 19;</code>
     * @return The aiConfigId.
     */
    @Override
    public int getAiConfigId() {
      return aiConfigId_;
    }

    public static final int LEVEL_ROUTE_ID_FIELD_NUMBER = 20;
    private int levelRouteId_ = 0;
    /**
     * <code>uint32 level_route_id = 20;</code>
     * @return The levelRouteId.
     */
    @Override
    public int getLevelRouteId() {
      return levelRouteId_;
    }

    public static final int INIT_POSE_ID_FIELD_NUMBER = 21;
    private int initPoseId_ = 0;
    /**
     * <code>uint32 init_pose_id = 21;</code>
     * @return The initPoseId.
     */
    @Override
    public int getInitPoseId() {
      return initPoseId_;
    }

    public static final int IS_LIGHT_FIELD_NUMBER = 22;
    private boolean isLight_ = false;
    /**
     * <code>bool is_light = 22;</code>
     * @return The isLight.
     */
    @Override
    public boolean getIsLight() {
      return isLight_;
    }

    public static final int KILL_NUM_FIELD_NUMBER = 23;
    private int killNum_ = 0;
    /**
     * <code>uint32 kill_num = 23;</code>
     * @return The killNum.
     */
    @Override
    public int getKillNum() {
      return killNum_;
    }

    public static final int FISH_INFO_FIELD_NUMBER = 50;
    /**
     * <code>.SceneFishInfo fish_info = 50;</code>
     * @return Whether the fishInfo field is set.
     */
    @Override
    public boolean hasFishInfo() {
      return contentCase_ == 50;
    }
    /**
     * <code>.SceneFishInfo fish_info = 50;</code>
     * @return The fishInfo.
     */
    @Override
    public SceneFishInfoOuterClass.SceneFishInfo getFishInfo() {
      if (contentCase_ == 50) {
         return (SceneFishInfoOuterClass.SceneFishInfo) content_;
      }
      return SceneFishInfoOuterClass.SceneFishInfo.getDefaultInstance();
    }
    /**
     * <code>.SceneFishInfo fish_info = 50;</code>
     */
    @Override
    public SceneFishInfoOuterClass.SceneFishInfoOrBuilder getFishInfoOrBuilder() {
      if (contentCase_ == 50) {
         return (SceneFishInfoOuterClass.SceneFishInfo) content_;
      }
      return SceneFishInfoOuterClass.SceneFishInfo.getDefaultInstance();
    }

    public static final int FISHTANK_FISH_INFO_FIELD_NUMBER = 51;
    /**
     * <code>.FishtankFishInfo fishtank_fish_info = 51;</code>
     * @return Whether the fishtankFishInfo field is set.
     */
    @Override
    public boolean hasFishtankFishInfo() {
      return contentCase_ == 51;
    }
    /**
     * <code>.FishtankFishInfo fishtank_fish_info = 51;</code>
     * @return The fishtankFishInfo.
     */
    @Override
    public FishtankFishInfoOuterClass.FishtankFishInfo getFishtankFishInfo() {
      if (contentCase_ == 51) {
         return (FishtankFishInfoOuterClass.FishtankFishInfo) content_;
      }
      return FishtankFishInfoOuterClass.FishtankFishInfo.getDefaultInstance();
    }
    /**
     * <code>.FishtankFishInfo fishtank_fish_info = 51;</code>
     */
    @Override
    public FishtankFishInfoOuterClass.FishtankFishInfoOrBuilder getFishtankFishInfoOrBuilder() {
      if (contentCase_ == 51) {
         return (FishtankFishInfoOuterClass.FishtankFishInfo) content_;
      }
      return FishtankFishInfoOuterClass.FishtankFishInfo.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (monsterId_ != 0) {
        output.writeUInt32(1, monsterId_);
      }
      if (groupId_ != 0) {
        output.writeUInt32(2, groupId_);
      }
      if (configId_ != 0) {
        output.writeUInt32(3, configId_);
      }
      for (int i = 0; i < weaponList_.size(); i++) {
        output.writeMessage(4, weaponList_.get(i));
      }
      if (authorityPeerId_ != 0) {
        output.writeUInt32(5, authorityPeerId_);
      }
      if (getAffixListList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(affixListMemoizedSerializedSize);
      }
      for (int i = 0; i < affixList_.size(); i++) {
        output.writeUInt32NoTag(affixList_.getInt(i));
      }
      if (isElite_ != false) {
        output.writeBool(7, isElite_);
      }
      if (ownerEntityId_ != 0) {
        output.writeUInt32(8, ownerEntityId_);
      }
      if (summonedTag_ != 0) {
        output.writeUInt32(9, summonedTag_);
      }
      com.google.protobuf.GeneratedMessage
        .serializeIntegerMapTo(
          output,
          internalGetSummonTagMap(),
          SummonTagMapDefaultEntryHolder.defaultEntry,
          10);
      if (poseId_ != 0) {
        output.writeUInt32(11, poseId_);
      }
      if (bornType_ != MonsterBornTypeOuterClass.MonsterBornType.MONSTER_BORN_TYPE_NONE.getNumber()) {
        output.writeEnum(12, bornType_);
      }
      if (blockId_ != 0) {
        output.writeUInt32(13, blockId_);
      }
      if (markFlag_ != 0) {
        output.writeUInt32(14, markFlag_);
      }
      if (titleId_ != 0) {
        output.writeUInt32(15, titleId_);
      }
      if (specialNameId_ != 0) {
        output.writeUInt32(16, specialNameId_);
      }
      if (attackTargetId_ != 0) {
        output.writeUInt32(17, attackTargetId_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(18, getMonsterRoute());
      }
      if (aiConfigId_ != 0) {
        output.writeUInt32(19, aiConfigId_);
      }
      if (levelRouteId_ != 0) {
        output.writeUInt32(20, levelRouteId_);
      }
      if (initPoseId_ != 0) {
        output.writeUInt32(21, initPoseId_);
      }
      if (isLight_ != false) {
        output.writeBool(22, isLight_);
      }
      if (killNum_ != 0) {
        output.writeUInt32(23, killNum_);
      }
      if (contentCase_ == 50) {
        output.writeMessage(50, (SceneFishInfoOuterClass.SceneFishInfo) content_);
      }
      if (contentCase_ == 51) {
        output.writeMessage(51, (FishtankFishInfoOuterClass.FishtankFishInfo) content_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (monsterId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, monsterId_);
      }
      if (groupId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, groupId_);
      }
      if (configId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, configId_);
      }
      for (int i = 0; i < weaponList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, weaponList_.get(i));
      }
      if (authorityPeerId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, authorityPeerId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < affixList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(affixList_.getInt(i));
        }
        size += dataSize;
        if (!getAffixListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        affixListMemoizedSerializedSize = dataSize;
      }
      if (isElite_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isElite_);
      }
      if (ownerEntityId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, ownerEntityId_);
      }
      if (summonedTag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, summonedTag_);
      }
      for (java.util.Map.Entry<Integer, Integer> entry
           : internalGetSummonTagMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<Integer, Integer>
        summonTagMap__ = SummonTagMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, summonTagMap__);
      }
      if (poseId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, poseId_);
      }
      if (bornType_ != MonsterBornTypeOuterClass.MonsterBornType.MONSTER_BORN_TYPE_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(12, bornType_);
      }
      if (blockId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, blockId_);
      }
      if (markFlag_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, markFlag_);
      }
      if (titleId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, titleId_);
      }
      if (specialNameId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, specialNameId_);
      }
      if (attackTargetId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, attackTargetId_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getMonsterRoute());
      }
      if (aiConfigId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, aiConfigId_);
      }
      if (levelRouteId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(20, levelRouteId_);
      }
      if (initPoseId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(21, initPoseId_);
      }
      if (isLight_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(22, isLight_);
      }
      if (killNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, killNum_);
      }
      if (contentCase_ == 50) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(50, (SceneFishInfoOuterClass.SceneFishInfo) content_);
      }
      if (contentCase_ == 51) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(51, (FishtankFishInfoOuterClass.FishtankFishInfo) content_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof SceneMonsterInfo)) {
        return super.equals(obj);
      }
      SceneMonsterInfo other = (SceneMonsterInfo) obj;

      if (getMonsterId()
          != other.getMonsterId()) return false;
      if (getGroupId()
          != other.getGroupId()) return false;
      if (getConfigId()
          != other.getConfigId()) return false;
      if (!getWeaponListList()
          .equals(other.getWeaponListList())) return false;
      if (getAuthorityPeerId()
          != other.getAuthorityPeerId()) return false;
      if (!getAffixListList()
          .equals(other.getAffixListList())) return false;
      if (getIsElite()
          != other.getIsElite()) return false;
      if (getOwnerEntityId()
          != other.getOwnerEntityId()) return false;
      if (getSummonedTag()
          != other.getSummonedTag()) return false;
      if (!internalGetSummonTagMap().equals(
          other.internalGetSummonTagMap())) return false;
      if (getPoseId()
          != other.getPoseId()) return false;
      if (bornType_ != other.bornType_) return false;
      if (getBlockId()
          != other.getBlockId()) return false;
      if (getMarkFlag()
          != other.getMarkFlag()) return false;
      if (getTitleId()
          != other.getTitleId()) return false;
      if (getSpecialNameId()
          != other.getSpecialNameId()) return false;
      if (getAttackTargetId()
          != other.getAttackTargetId()) return false;
      if (hasMonsterRoute() != other.hasMonsterRoute()) return false;
      if (hasMonsterRoute()) {
        if (!getMonsterRoute()
            .equals(other.getMonsterRoute())) return false;
      }
      if (getAiConfigId()
          != other.getAiConfigId()) return false;
      if (getLevelRouteId()
          != other.getLevelRouteId()) return false;
      if (getInitPoseId()
          != other.getInitPoseId()) return false;
      if (getIsLight()
          != other.getIsLight()) return false;
      if (getKillNum()
          != other.getKillNum()) return false;
      if (!getContentCase().equals(other.getContentCase())) return false;
      switch (contentCase_) {
        case 50:
          if (!getFishInfo()
              .equals(other.getFishInfo())) return false;
          break;
        case 51:
          if (!getFishtankFishInfo()
              .equals(other.getFishtankFishInfo())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MONSTER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getMonsterId();
      hash = (37 * hash) + GROUP_ID_FIELD_NUMBER;
      hash = (53 * hash) + getGroupId();
      hash = (37 * hash) + CONFIG_ID_FIELD_NUMBER;
      hash = (53 * hash) + getConfigId();
      if (getWeaponListCount() > 0) {
        hash = (37 * hash) + WEAPON_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getWeaponListList().hashCode();
      }
      hash = (37 * hash) + AUTHORITY_PEER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getAuthorityPeerId();
      if (getAffixListCount() > 0) {
        hash = (37 * hash) + AFFIX_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getAffixListList().hashCode();
      }
      hash = (37 * hash) + IS_ELITE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsElite());
      hash = (37 * hash) + OWNER_ENTITY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getOwnerEntityId();
      hash = (37 * hash) + SUMMONED_TAG_FIELD_NUMBER;
      hash = (53 * hash) + getSummonedTag();
      if (!internalGetSummonTagMap().getMap().isEmpty()) {
        hash = (37 * hash) + SUMMON_TAG_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSummonTagMap().hashCode();
      }
      hash = (37 * hash) + POSE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getPoseId();
      hash = (37 * hash) + BORN_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + bornType_;
      hash = (37 * hash) + BLOCK_ID_FIELD_NUMBER;
      hash = (53 * hash) + getBlockId();
      hash = (37 * hash) + MARK_FLAG_FIELD_NUMBER;
      hash = (53 * hash) + getMarkFlag();
      hash = (37 * hash) + TITLE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getTitleId();
      hash = (37 * hash) + SPECIAL_NAME_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSpecialNameId();
      hash = (37 * hash) + ATTACK_TARGET_ID_FIELD_NUMBER;
      hash = (53 * hash) + getAttackTargetId();
      if (hasMonsterRoute()) {
        hash = (37 * hash) + MONSTER_ROUTE_FIELD_NUMBER;
        hash = (53 * hash) + getMonsterRoute().hashCode();
      }
      hash = (37 * hash) + AI_CONFIG_ID_FIELD_NUMBER;
      hash = (53 * hash) + getAiConfigId();
      hash = (37 * hash) + LEVEL_ROUTE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getLevelRouteId();
      hash = (37 * hash) + INIT_POSE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getInitPoseId();
      hash = (37 * hash) + IS_LIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsLight());
      hash = (37 * hash) + KILL_NUM_FIELD_NUMBER;
      hash = (53 * hash) + getKillNum();
      switch (contentCase_) {
        case 50:
          hash = (37 * hash) + FISH_INFO_FIELD_NUMBER;
          hash = (53 * hash) + getFishInfo().hashCode();
          break;
        case 51:
          hash = (37 * hash) + FISHTANK_FISH_INFO_FIELD_NUMBER;
          hash = (53 * hash) + getFishtankFishInfo().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static SceneMonsterInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SceneMonsterInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SceneMonsterInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SceneMonsterInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SceneMonsterInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static SceneMonsterInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static SceneMonsterInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static SceneMonsterInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static SceneMonsterInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static SceneMonsterInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static SceneMonsterInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static SceneMonsterInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(SceneMonsterInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Obf: JIEPEMAABDK
     * </pre>
     *
     * Protobuf type {@code SceneMonsterInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:SceneMonsterInfo)
        SceneMonsterInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return SceneMonsterInfoOuterClass.internal_static_SceneMonsterInfo_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
          int number) {
        switch (number) {
          case 10:
            return internalGetSummonTagMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
          int number) {
        switch (number) {
          case 10:
            return internalGetMutableSummonTagMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return SceneMonsterInfoOuterClass.internal_static_SceneMonsterInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                SceneMonsterInfo.class, Builder.class);
      }

      // Construct using io.irminsul.common.proto.SceneMonsterInfoOuterClass.SceneMonsterInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getWeaponListFieldBuilder();
          getMonsterRouteFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        monsterId_ = 0;
        groupId_ = 0;
        configId_ = 0;
        if (weaponListBuilder_ == null) {
          weaponList_ = java.util.Collections.emptyList();
        } else {
          weaponList_ = null;
          weaponListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        authorityPeerId_ = 0;
        affixList_ = emptyIntList();
        isElite_ = false;
        ownerEntityId_ = 0;
        summonedTag_ = 0;
        internalGetMutableSummonTagMap().clear();
        poseId_ = 0;
        bornType_ = 0;
        blockId_ = 0;
        markFlag_ = 0;
        titleId_ = 0;
        specialNameId_ = 0;
        attackTargetId_ = 0;
        monsterRoute_ = null;
        if (monsterRouteBuilder_ != null) {
          monsterRouteBuilder_.dispose();
          monsterRouteBuilder_ = null;
        }
        aiConfigId_ = 0;
        levelRouteId_ = 0;
        initPoseId_ = 0;
        isLight_ = false;
        killNum_ = 0;
        if (fishInfoBuilder_ != null) {
          fishInfoBuilder_.clear();
        }
        if (fishtankFishInfoBuilder_ != null) {
          fishtankFishInfoBuilder_.clear();
        }
        contentCase_ = 0;
        content_ = null;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return SceneMonsterInfoOuterClass.internal_static_SceneMonsterInfo_descriptor;
      }

      @Override
      public SceneMonsterInfo getDefaultInstanceForType() {
        return SceneMonsterInfo.getDefaultInstance();
      }

      @Override
      public SceneMonsterInfo build() {
        SceneMonsterInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public SceneMonsterInfo buildPartial() {
        SceneMonsterInfo result = new SceneMonsterInfo(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(SceneMonsterInfo result) {
        if (weaponListBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            weaponList_ = java.util.Collections.unmodifiableList(weaponList_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.weaponList_ = weaponList_;
        } else {
          result.weaponList_ = weaponListBuilder_.build();
        }
      }

      private void buildPartial0(SceneMonsterInfo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.monsterId_ = monsterId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.groupId_ = groupId_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.configId_ = configId_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.authorityPeerId_ = authorityPeerId_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          affixList_.makeImmutable();
          result.affixList_ = affixList_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.isElite_ = isElite_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.ownerEntityId_ = ownerEntityId_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.summonedTag_ = summonedTag_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.summonTagMap_ = internalGetSummonTagMap();
          result.summonTagMap_.makeImmutable();
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.poseId_ = poseId_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.bornType_ = bornType_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.blockId_ = blockId_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.markFlag_ = markFlag_;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.titleId_ = titleId_;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.specialNameId_ = specialNameId_;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.attackTargetId_ = attackTargetId_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.monsterRoute_ = monsterRouteBuilder_ == null
              ? monsterRoute_
              : monsterRouteBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.aiConfigId_ = aiConfigId_;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.levelRouteId_ = levelRouteId_;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.initPoseId_ = initPoseId_;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.isLight_ = isLight_;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          result.killNum_ = killNum_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartialOneofs(SceneMonsterInfo result) {
        result.contentCase_ = contentCase_;
        result.content_ = this.content_;
        if (contentCase_ == 50 &&
            fishInfoBuilder_ != null) {
          result.content_ = fishInfoBuilder_.build();
        }
        if (contentCase_ == 51 &&
            fishtankFishInfoBuilder_ != null) {
          result.content_ = fishtankFishInfoBuilder_.build();
        }
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof SceneMonsterInfo) {
          return mergeFrom((SceneMonsterInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(SceneMonsterInfo other) {
        if (other == SceneMonsterInfo.getDefaultInstance()) return this;
        if (other.getMonsterId() != 0) {
          setMonsterId(other.getMonsterId());
        }
        if (other.getGroupId() != 0) {
          setGroupId(other.getGroupId());
        }
        if (other.getConfigId() != 0) {
          setConfigId(other.getConfigId());
        }
        if (weaponListBuilder_ == null) {
          if (!other.weaponList_.isEmpty()) {
            if (weaponList_.isEmpty()) {
              weaponList_ = other.weaponList_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureWeaponListIsMutable();
              weaponList_.addAll(other.weaponList_);
            }
            onChanged();
          }
        } else {
          if (!other.weaponList_.isEmpty()) {
            if (weaponListBuilder_.isEmpty()) {
              weaponListBuilder_.dispose();
              weaponListBuilder_ = null;
              weaponList_ = other.weaponList_;
              bitField0_ = (bitField0_ & ~0x00000008);
              weaponListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getWeaponListFieldBuilder() : null;
            } else {
              weaponListBuilder_.addAllMessages(other.weaponList_);
            }
          }
        }
        if (other.getAuthorityPeerId() != 0) {
          setAuthorityPeerId(other.getAuthorityPeerId());
        }
        if (!other.affixList_.isEmpty()) {
          if (affixList_.isEmpty()) {
            affixList_ = other.affixList_;
            affixList_.makeImmutable();
            bitField0_ |= 0x00000020;
          } else {
            ensureAffixListIsMutable();
            affixList_.addAll(other.affixList_);
          }
          onChanged();
        }
        if (other.getIsElite() != false) {
          setIsElite(other.getIsElite());
        }
        if (other.getOwnerEntityId() != 0) {
          setOwnerEntityId(other.getOwnerEntityId());
        }
        if (other.getSummonedTag() != 0) {
          setSummonedTag(other.getSummonedTag());
        }
        internalGetMutableSummonTagMap().mergeFrom(
            other.internalGetSummonTagMap());
        bitField0_ |= 0x00000200;
        if (other.getPoseId() != 0) {
          setPoseId(other.getPoseId());
        }
        if (other.bornType_ != 0) {
          setBornTypeValue(other.getBornTypeValue());
        }
        if (other.getBlockId() != 0) {
          setBlockId(other.getBlockId());
        }
        if (other.getMarkFlag() != 0) {
          setMarkFlag(other.getMarkFlag());
        }
        if (other.getTitleId() != 0) {
          setTitleId(other.getTitleId());
        }
        if (other.getSpecialNameId() != 0) {
          setSpecialNameId(other.getSpecialNameId());
        }
        if (other.getAttackTargetId() != 0) {
          setAttackTargetId(other.getAttackTargetId());
        }
        if (other.hasMonsterRoute()) {
          mergeMonsterRoute(other.getMonsterRoute());
        }
        if (other.getAiConfigId() != 0) {
          setAiConfigId(other.getAiConfigId());
        }
        if (other.getLevelRouteId() != 0) {
          setLevelRouteId(other.getLevelRouteId());
        }
        if (other.getInitPoseId() != 0) {
          setInitPoseId(other.getInitPoseId());
        }
        if (other.getIsLight() != false) {
          setIsLight(other.getIsLight());
        }
        if (other.getKillNum() != 0) {
          setKillNum(other.getKillNum());
        }
        switch (other.getContentCase()) {
          case FISH_INFO: {
            mergeFishInfo(other.getFishInfo());
            break;
          }
          case FISHTANK_FISH_INFO: {
            mergeFishtankFishInfo(other.getFishtankFishInfo());
            break;
          }
          case CONTENT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                monsterId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                groupId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                configId_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                SceneWeaponInfoOuterClass.SceneWeaponInfo m =
                    input.readMessage(
                        SceneWeaponInfoOuterClass.SceneWeaponInfo.parser(),
                        extensionRegistry);
                if (weaponListBuilder_ == null) {
                  ensureWeaponListIsMutable();
                  weaponList_.add(m);
                } else {
                  weaponListBuilder_.addMessage(m);
                }
                break;
              } // case 34
              case 40: {
                authorityPeerId_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                int v = input.readUInt32();
                ensureAffixListIsMutable();
                affixList_.addInt(v);
                break;
              } // case 48
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureAffixListIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  affixList_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 50
              case 56: {
                isElite_ = input.readBool();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                ownerEntityId_ = input.readUInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                summonedTag_ = input.readUInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 82: {
                com.google.protobuf.MapEntry<Integer, Integer>
                summonTagMap__ = input.readMessage(
                    SummonTagMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableSummonTagMap().getMutableMap().put(
                    summonTagMap__.getKey(), summonTagMap__.getValue());
                bitField0_ |= 0x00000200;
                break;
              } // case 82
              case 88: {
                poseId_ = input.readUInt32();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 96: {
                bornType_ = input.readEnum();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 104: {
                blockId_ = input.readUInt32();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              case 112: {
                markFlag_ = input.readUInt32();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              case 120: {
                titleId_ = input.readUInt32();
                bitField0_ |= 0x00004000;
                break;
              } // case 120
              case 128: {
                specialNameId_ = input.readUInt32();
                bitField0_ |= 0x00008000;
                break;
              } // case 128
              case 136: {
                attackTargetId_ = input.readUInt32();
                bitField0_ |= 0x00010000;
                break;
              } // case 136
              case 146: {
                input.readMessage(
                    getMonsterRouteFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00020000;
                break;
              } // case 146
              case 152: {
                aiConfigId_ = input.readUInt32();
                bitField0_ |= 0x00040000;
                break;
              } // case 152
              case 160: {
                levelRouteId_ = input.readUInt32();
                bitField0_ |= 0x00080000;
                break;
              } // case 160
              case 168: {
                initPoseId_ = input.readUInt32();
                bitField0_ |= 0x00100000;
                break;
              } // case 168
              case 176: {
                isLight_ = input.readBool();
                bitField0_ |= 0x00200000;
                break;
              } // case 176
              case 184: {
                killNum_ = input.readUInt32();
                bitField0_ |= 0x00400000;
                break;
              } // case 184
              case 402: {
                input.readMessage(
                    getFishInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                contentCase_ = 50;
                break;
              } // case 402
              case 410: {
                input.readMessage(
                    getFishtankFishInfoFieldBuilder().getBuilder(),
                    extensionRegistry);
                contentCase_ = 51;
                break;
              } // case 410
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int contentCase_ = 0;
      private Object content_;
      public ContentCase
          getContentCase() {
        return ContentCase.forNumber(
            contentCase_);
      }

      public Builder clearContent() {
        contentCase_ = 0;
        content_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private int monsterId_ ;
      /**
       * <code>uint32 monster_id = 1;</code>
       * @return The monsterId.
       */
      @Override
      public int getMonsterId() {
        return monsterId_;
      }
      /**
       * <code>uint32 monster_id = 1;</code>
       * @param value The monsterId to set.
       * @return This builder for chaining.
       */
      public Builder setMonsterId(int value) {

        monsterId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 monster_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMonsterId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        monsterId_ = 0;
        onChanged();
        return this;
      }

      private int groupId_ ;
      /**
       * <code>uint32 group_id = 2;</code>
       * @return The groupId.
       */
      @Override
      public int getGroupId() {
        return groupId_;
      }
      /**
       * <code>uint32 group_id = 2;</code>
       * @param value The groupId to set.
       * @return This builder for chaining.
       */
      public Builder setGroupId(int value) {

        groupId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 group_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearGroupId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        groupId_ = 0;
        onChanged();
        return this;
      }

      private int configId_ ;
      /**
       * <code>uint32 config_id = 3;</code>
       * @return The configId.
       */
      @Override
      public int getConfigId() {
        return configId_;
      }
      /**
       * <code>uint32 config_id = 3;</code>
       * @param value The configId to set.
       * @return This builder for chaining.
       */
      public Builder setConfigId(int value) {

        configId_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 config_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearConfigId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        configId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<SceneWeaponInfoOuterClass.SceneWeaponInfo> weaponList_ =
        java.util.Collections.emptyList();
      private void ensureWeaponListIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          weaponList_ = new java.util.ArrayList<SceneWeaponInfoOuterClass.SceneWeaponInfo>(weaponList_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          SceneWeaponInfoOuterClass.SceneWeaponInfo, SceneWeaponInfoOuterClass.SceneWeaponInfo.Builder, SceneWeaponInfoOuterClass.SceneWeaponInfoOrBuilder> weaponListBuilder_;

      /**
       * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
       */
      public java.util.List<SceneWeaponInfoOuterClass.SceneWeaponInfo> getWeaponListList() {
        if (weaponListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(weaponList_);
        } else {
          return weaponListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
       */
      public int getWeaponListCount() {
        if (weaponListBuilder_ == null) {
          return weaponList_.size();
        } else {
          return weaponListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
       */
      public SceneWeaponInfoOuterClass.SceneWeaponInfo getWeaponList(int index) {
        if (weaponListBuilder_ == null) {
          return weaponList_.get(index);
        } else {
          return weaponListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
       */
      public Builder setWeaponList(
          int index, SceneWeaponInfoOuterClass.SceneWeaponInfo value) {
        if (weaponListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWeaponListIsMutable();
          weaponList_.set(index, value);
          onChanged();
        } else {
          weaponListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
       */
      public Builder setWeaponList(
          int index, SceneWeaponInfoOuterClass.SceneWeaponInfo.Builder builderForValue) {
        if (weaponListBuilder_ == null) {
          ensureWeaponListIsMutable();
          weaponList_.set(index, builderForValue.build());
          onChanged();
        } else {
          weaponListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
       */
      public Builder addWeaponList(SceneWeaponInfoOuterClass.SceneWeaponInfo value) {
        if (weaponListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWeaponListIsMutable();
          weaponList_.add(value);
          onChanged();
        } else {
          weaponListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
       */
      public Builder addWeaponList(
          int index, SceneWeaponInfoOuterClass.SceneWeaponInfo value) {
        if (weaponListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureWeaponListIsMutable();
          weaponList_.add(index, value);
          onChanged();
        } else {
          weaponListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
       */
      public Builder addWeaponList(
          SceneWeaponInfoOuterClass.SceneWeaponInfo.Builder builderForValue) {
        if (weaponListBuilder_ == null) {
          ensureWeaponListIsMutable();
          weaponList_.add(builderForValue.build());
          onChanged();
        } else {
          weaponListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
       */
      public Builder addWeaponList(
          int index, SceneWeaponInfoOuterClass.SceneWeaponInfo.Builder builderForValue) {
        if (weaponListBuilder_ == null) {
          ensureWeaponListIsMutable();
          weaponList_.add(index, builderForValue.build());
          onChanged();
        } else {
          weaponListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
       */
      public Builder addAllWeaponList(
          Iterable<? extends SceneWeaponInfoOuterClass.SceneWeaponInfo> values) {
        if (weaponListBuilder_ == null) {
          ensureWeaponListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, weaponList_);
          onChanged();
        } else {
          weaponListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
       */
      public Builder clearWeaponList() {
        if (weaponListBuilder_ == null) {
          weaponList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          weaponListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
       */
      public Builder removeWeaponList(int index) {
        if (weaponListBuilder_ == null) {
          ensureWeaponListIsMutable();
          weaponList_.remove(index);
          onChanged();
        } else {
          weaponListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
       */
      public SceneWeaponInfoOuterClass.SceneWeaponInfo.Builder getWeaponListBuilder(
          int index) {
        return getWeaponListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
       */
      public SceneWeaponInfoOuterClass.SceneWeaponInfoOrBuilder getWeaponListOrBuilder(
          int index) {
        if (weaponListBuilder_ == null) {
          return weaponList_.get(index);  } else {
          return weaponListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
       */
      public java.util.List<? extends SceneWeaponInfoOuterClass.SceneWeaponInfoOrBuilder>
           getWeaponListOrBuilderList() {
        if (weaponListBuilder_ != null) {
          return weaponListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(weaponList_);
        }
      }
      /**
       * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
       */
      public SceneWeaponInfoOuterClass.SceneWeaponInfo.Builder addWeaponListBuilder() {
        return getWeaponListFieldBuilder().addBuilder(
            SceneWeaponInfoOuterClass.SceneWeaponInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
       */
      public SceneWeaponInfoOuterClass.SceneWeaponInfo.Builder addWeaponListBuilder(
          int index) {
        return getWeaponListFieldBuilder().addBuilder(
            index, SceneWeaponInfoOuterClass.SceneWeaponInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .SceneWeaponInfo weapon_list = 4;</code>
       */
      public java.util.List<SceneWeaponInfoOuterClass.SceneWeaponInfo.Builder>
           getWeaponListBuilderList() {
        return getWeaponListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          SceneWeaponInfoOuterClass.SceneWeaponInfo, SceneWeaponInfoOuterClass.SceneWeaponInfo.Builder, SceneWeaponInfoOuterClass.SceneWeaponInfoOrBuilder>
          getWeaponListFieldBuilder() {
        if (weaponListBuilder_ == null) {
          weaponListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              SceneWeaponInfoOuterClass.SceneWeaponInfo, SceneWeaponInfoOuterClass.SceneWeaponInfo.Builder, SceneWeaponInfoOuterClass.SceneWeaponInfoOrBuilder>(
                  weaponList_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          weaponList_ = null;
        }
        return weaponListBuilder_;
      }

      private int authorityPeerId_ ;
      /**
       * <code>uint32 authority_peer_id = 5;</code>
       * @return The authorityPeerId.
       */
      @Override
      public int getAuthorityPeerId() {
        return authorityPeerId_;
      }
      /**
       * <code>uint32 authority_peer_id = 5;</code>
       * @param value The authorityPeerId to set.
       * @return This builder for chaining.
       */
      public Builder setAuthorityPeerId(int value) {

        authorityPeerId_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 authority_peer_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearAuthorityPeerId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        authorityPeerId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList affixList_ = emptyIntList();
      private void ensureAffixListIsMutable() {
        if (!affixList_.isModifiable()) {
          affixList_ = makeMutableCopy(affixList_);
        }
        bitField0_ |= 0x00000020;
      }
      /**
       * <code>repeated uint32 affix_list = 6;</code>
       * @return A list containing the affixList.
       */
      public java.util.List<Integer>
          getAffixListList() {
        affixList_.makeImmutable();
        return affixList_;
      }
      /**
       * <code>repeated uint32 affix_list = 6;</code>
       * @return The count of affixList.
       */
      public int getAffixListCount() {
        return affixList_.size();
      }
      /**
       * <code>repeated uint32 affix_list = 6;</code>
       * @param index The index of the element to return.
       * @return The affixList at the given index.
       */
      public int getAffixList(int index) {
        return affixList_.getInt(index);
      }
      /**
       * <code>repeated uint32 affix_list = 6;</code>
       * @param index The index to set the value at.
       * @param value The affixList to set.
       * @return This builder for chaining.
       */
      public Builder setAffixList(
          int index, int value) {

        ensureAffixListIsMutable();
        affixList_.setInt(index, value);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 affix_list = 6;</code>
       * @param value The affixList to add.
       * @return This builder for chaining.
       */
      public Builder addAffixList(int value) {

        ensureAffixListIsMutable();
        affixList_.addInt(value);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 affix_list = 6;</code>
       * @param values The affixList to add.
       * @return This builder for chaining.
       */
      public Builder addAllAffixList(
          Iterable<? extends Integer> values) {
        ensureAffixListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, affixList_);
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 affix_list = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearAffixList() {
        affixList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private boolean isElite_ ;
      /**
       * <code>bool is_elite = 7;</code>
       * @return The isElite.
       */
      @Override
      public boolean getIsElite() {
        return isElite_;
      }
      /**
       * <code>bool is_elite = 7;</code>
       * @param value The isElite to set.
       * @return This builder for chaining.
       */
      public Builder setIsElite(boolean value) {

        isElite_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_elite = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsElite() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isElite_ = false;
        onChanged();
        return this;
      }

      private int ownerEntityId_ ;
      /**
       * <code>uint32 owner_entity_id = 8;</code>
       * @return The ownerEntityId.
       */
      @Override
      public int getOwnerEntityId() {
        return ownerEntityId_;
      }
      /**
       * <code>uint32 owner_entity_id = 8;</code>
       * @param value The ownerEntityId to set.
       * @return This builder for chaining.
       */
      public Builder setOwnerEntityId(int value) {

        ownerEntityId_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 owner_entity_id = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearOwnerEntityId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        ownerEntityId_ = 0;
        onChanged();
        return this;
      }

      private int summonedTag_ ;
      /**
       * <code>uint32 summoned_tag = 9;</code>
       * @return The summonedTag.
       */
      @Override
      public int getSummonedTag() {
        return summonedTag_;
      }
      /**
       * <code>uint32 summoned_tag = 9;</code>
       * @param value The summonedTag to set.
       * @return This builder for chaining.
       */
      public Builder setSummonedTag(int value) {

        summonedTag_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 summoned_tag = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearSummonedTag() {
        bitField0_ = (bitField0_ & ~0x00000100);
        summonedTag_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          Integer, Integer> summonTagMap_;
      private com.google.protobuf.MapField<Integer, Integer>
          internalGetSummonTagMap() {
        if (summonTagMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              SummonTagMapDefaultEntryHolder.defaultEntry);
        }
        return summonTagMap_;
      }
      private com.google.protobuf.MapField<Integer, Integer>
          internalGetMutableSummonTagMap() {
        if (summonTagMap_ == null) {
          summonTagMap_ = com.google.protobuf.MapField.newMapField(
              SummonTagMapDefaultEntryHolder.defaultEntry);
        }
        if (!summonTagMap_.isMutable()) {
          summonTagMap_ = summonTagMap_.copy();
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return summonTagMap_;
      }
      public int getSummonTagMapCount() {
        return internalGetSummonTagMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; summon_tag_map = 10;</code>
       */
      @Override
      public boolean containsSummonTagMap(
          int key) {

        return internalGetSummonTagMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSummonTagMapMap()} instead.
       */
      @Override
      @Deprecated
      public java.util.Map<Integer, Integer> getSummonTagMap() {
        return getSummonTagMapMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; summon_tag_map = 10;</code>
       */
      @Override
      public java.util.Map<Integer, Integer> getSummonTagMapMap() {
        return internalGetSummonTagMap().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; summon_tag_map = 10;</code>
       */
      @Override
      public int getSummonTagMapOrDefault(
          int key,
          int defaultValue) {

        java.util.Map<Integer, Integer> map =
            internalGetSummonTagMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; summon_tag_map = 10;</code>
       */
      @Override
      public int getSummonTagMapOrThrow(
          int key) {

        java.util.Map<Integer, Integer> map =
            internalGetSummonTagMap().getMap();
        if (!map.containsKey(key)) {
          throw new IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearSummonTagMap() {
        bitField0_ = (bitField0_ & ~0x00000200);
        internalGetMutableSummonTagMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; summon_tag_map = 10;</code>
       */
      public Builder removeSummonTagMap(
          int key) {

        internalGetMutableSummonTagMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @Deprecated
      public java.util.Map<Integer, Integer>
          getMutableSummonTagMap() {
        bitField0_ |= 0x00000200;
        return internalGetMutableSummonTagMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; summon_tag_map = 10;</code>
       */
      public Builder putSummonTagMap(
          int key,
          int value) {


        internalGetMutableSummonTagMap().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000200;
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; summon_tag_map = 10;</code>
       */
      public Builder putAllSummonTagMap(
          java.util.Map<Integer, Integer> values) {
        internalGetMutableSummonTagMap().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000200;
        return this;
      }

      private int poseId_ ;
      /**
       * <code>uint32 pose_id = 11;</code>
       * @return The poseId.
       */
      @Override
      public int getPoseId() {
        return poseId_;
      }
      /**
       * <code>uint32 pose_id = 11;</code>
       * @param value The poseId to set.
       * @return This builder for chaining.
       */
      public Builder setPoseId(int value) {

        poseId_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 pose_id = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearPoseId() {
        bitField0_ = (bitField0_ & ~0x00000400);
        poseId_ = 0;
        onChanged();
        return this;
      }

      private int bornType_ = 0;
      /**
       * <code>.MonsterBornType born_type = 12;</code>
       * @return The enum numeric value on the wire for bornType.
       */
      @Override public int getBornTypeValue() {
        return bornType_;
      }
      /**
       * <code>.MonsterBornType born_type = 12;</code>
       * @param value The enum numeric value on the wire for bornType to set.
       * @return This builder for chaining.
       */
      public Builder setBornTypeValue(int value) {
        bornType_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>.MonsterBornType born_type = 12;</code>
       * @return The bornType.
       */
      @Override
      public MonsterBornTypeOuterClass.MonsterBornType getBornType() {
        MonsterBornTypeOuterClass.MonsterBornType result = MonsterBornTypeOuterClass.MonsterBornType.forNumber(bornType_);
        return result == null ? MonsterBornTypeOuterClass.MonsterBornType.UNRECOGNIZED : result;
      }
      /**
       * <code>.MonsterBornType born_type = 12;</code>
       * @param value The bornType to set.
       * @return This builder for chaining.
       */
      public Builder setBornType(MonsterBornTypeOuterClass.MonsterBornType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000800;
        bornType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.MonsterBornType born_type = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearBornType() {
        bitField0_ = (bitField0_ & ~0x00000800);
        bornType_ = 0;
        onChanged();
        return this;
      }

      private int blockId_ ;
      /**
       * <code>uint32 block_id = 13;</code>
       * @return The blockId.
       */
      @Override
      public int getBlockId() {
        return blockId_;
      }
      /**
       * <code>uint32 block_id = 13;</code>
       * @param value The blockId to set.
       * @return This builder for chaining.
       */
      public Builder setBlockId(int value) {

        blockId_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 block_id = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearBlockId() {
        bitField0_ = (bitField0_ & ~0x00001000);
        blockId_ = 0;
        onChanged();
        return this;
      }

      private int markFlag_ ;
      /**
       * <code>uint32 mark_flag = 14;</code>
       * @return The markFlag.
       */
      @Override
      public int getMarkFlag() {
        return markFlag_;
      }
      /**
       * <code>uint32 mark_flag = 14;</code>
       * @param value The markFlag to set.
       * @return This builder for chaining.
       */
      public Builder setMarkFlag(int value) {

        markFlag_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 mark_flag = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearMarkFlag() {
        bitField0_ = (bitField0_ & ~0x00002000);
        markFlag_ = 0;
        onChanged();
        return this;
      }

      private int titleId_ ;
      /**
       * <code>uint32 title_id = 15;</code>
       * @return The titleId.
       */
      @Override
      public int getTitleId() {
        return titleId_;
      }
      /**
       * <code>uint32 title_id = 15;</code>
       * @param value The titleId to set.
       * @return This builder for chaining.
       */
      public Builder setTitleId(int value) {

        titleId_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 title_id = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearTitleId() {
        bitField0_ = (bitField0_ & ~0x00004000);
        titleId_ = 0;
        onChanged();
        return this;
      }

      private int specialNameId_ ;
      /**
       * <code>uint32 special_name_id = 16;</code>
       * @return The specialNameId.
       */
      @Override
      public int getSpecialNameId() {
        return specialNameId_;
      }
      /**
       * <code>uint32 special_name_id = 16;</code>
       * @param value The specialNameId to set.
       * @return This builder for chaining.
       */
      public Builder setSpecialNameId(int value) {

        specialNameId_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 special_name_id = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpecialNameId() {
        bitField0_ = (bitField0_ & ~0x00008000);
        specialNameId_ = 0;
        onChanged();
        return this;
      }

      private int attackTargetId_ ;
      /**
       * <code>uint32 attack_target_id = 17;</code>
       * @return The attackTargetId.
       */
      @Override
      public int getAttackTargetId() {
        return attackTargetId_;
      }
      /**
       * <code>uint32 attack_target_id = 17;</code>
       * @param value The attackTargetId to set.
       * @return This builder for chaining.
       */
      public Builder setAttackTargetId(int value) {

        attackTargetId_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 attack_target_id = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearAttackTargetId() {
        bitField0_ = (bitField0_ & ~0x00010000);
        attackTargetId_ = 0;
        onChanged();
        return this;
      }

      private MonsterRouteOuterClass.MonsterRoute monsterRoute_;
      private com.google.protobuf.SingleFieldBuilder<
          MonsterRouteOuterClass.MonsterRoute, MonsterRouteOuterClass.MonsterRoute.Builder, MonsterRouteOuterClass.MonsterRouteOrBuilder> monsterRouteBuilder_;
      /**
       * <code>.MonsterRoute monster_route = 18;</code>
       * @return Whether the monsterRoute field is set.
       */
      public boolean hasMonsterRoute() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <code>.MonsterRoute monster_route = 18;</code>
       * @return The monsterRoute.
       */
      public MonsterRouteOuterClass.MonsterRoute getMonsterRoute() {
        if (monsterRouteBuilder_ == null) {
          return monsterRoute_ == null ? MonsterRouteOuterClass.MonsterRoute.getDefaultInstance() : monsterRoute_;
        } else {
          return monsterRouteBuilder_.getMessage();
        }
      }
      /**
       * <code>.MonsterRoute monster_route = 18;</code>
       */
      public Builder setMonsterRoute(MonsterRouteOuterClass.MonsterRoute value) {
        if (monsterRouteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          monsterRoute_ = value;
        } else {
          monsterRouteBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>.MonsterRoute monster_route = 18;</code>
       */
      public Builder setMonsterRoute(
          MonsterRouteOuterClass.MonsterRoute.Builder builderForValue) {
        if (monsterRouteBuilder_ == null) {
          monsterRoute_ = builderForValue.build();
        } else {
          monsterRouteBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>.MonsterRoute monster_route = 18;</code>
       */
      public Builder mergeMonsterRoute(MonsterRouteOuterClass.MonsterRoute value) {
        if (monsterRouteBuilder_ == null) {
          if (((bitField0_ & 0x00020000) != 0) &&
            monsterRoute_ != null &&
            monsterRoute_ != MonsterRouteOuterClass.MonsterRoute.getDefaultInstance()) {
            getMonsterRouteBuilder().mergeFrom(value);
          } else {
            monsterRoute_ = value;
          }
        } else {
          monsterRouteBuilder_.mergeFrom(value);
        }
        if (monsterRoute_ != null) {
          bitField0_ |= 0x00020000;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.MonsterRoute monster_route = 18;</code>
       */
      public Builder clearMonsterRoute() {
        bitField0_ = (bitField0_ & ~0x00020000);
        monsterRoute_ = null;
        if (monsterRouteBuilder_ != null) {
          monsterRouteBuilder_.dispose();
          monsterRouteBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.MonsterRoute monster_route = 18;</code>
       */
      public MonsterRouteOuterClass.MonsterRoute.Builder getMonsterRouteBuilder() {
        bitField0_ |= 0x00020000;
        onChanged();
        return getMonsterRouteFieldBuilder().getBuilder();
      }
      /**
       * <code>.MonsterRoute monster_route = 18;</code>
       */
      public MonsterRouteOuterClass.MonsterRouteOrBuilder getMonsterRouteOrBuilder() {
        if (monsterRouteBuilder_ != null) {
          return monsterRouteBuilder_.getMessageOrBuilder();
        } else {
          return monsterRoute_ == null ?
              MonsterRouteOuterClass.MonsterRoute.getDefaultInstance() : monsterRoute_;
        }
      }
      /**
       * <code>.MonsterRoute monster_route = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          MonsterRouteOuterClass.MonsterRoute, MonsterRouteOuterClass.MonsterRoute.Builder, MonsterRouteOuterClass.MonsterRouteOrBuilder>
          getMonsterRouteFieldBuilder() {
        if (monsterRouteBuilder_ == null) {
          monsterRouteBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              MonsterRouteOuterClass.MonsterRoute, MonsterRouteOuterClass.MonsterRoute.Builder, MonsterRouteOuterClass.MonsterRouteOrBuilder>(
                  getMonsterRoute(),
                  getParentForChildren(),
                  isClean());
          monsterRoute_ = null;
        }
        return monsterRouteBuilder_;
      }

      private int aiConfigId_ ;
      /**
       * <code>uint32 ai_config_id = 19;</code>
       * @return The aiConfigId.
       */
      @Override
      public int getAiConfigId() {
        return aiConfigId_;
      }
      /**
       * <code>uint32 ai_config_id = 19;</code>
       * @param value The aiConfigId to set.
       * @return This builder for chaining.
       */
      public Builder setAiConfigId(int value) {

        aiConfigId_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 ai_config_id = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearAiConfigId() {
        bitField0_ = (bitField0_ & ~0x00040000);
        aiConfigId_ = 0;
        onChanged();
        return this;
      }

      private int levelRouteId_ ;
      /**
       * <code>uint32 level_route_id = 20;</code>
       * @return The levelRouteId.
       */
      @Override
      public int getLevelRouteId() {
        return levelRouteId_;
      }
      /**
       * <code>uint32 level_route_id = 20;</code>
       * @param value The levelRouteId to set.
       * @return This builder for chaining.
       */
      public Builder setLevelRouteId(int value) {

        levelRouteId_ = value;
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 level_route_id = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearLevelRouteId() {
        bitField0_ = (bitField0_ & ~0x00080000);
        levelRouteId_ = 0;
        onChanged();
        return this;
      }

      private int initPoseId_ ;
      /**
       * <code>uint32 init_pose_id = 21;</code>
       * @return The initPoseId.
       */
      @Override
      public int getInitPoseId() {
        return initPoseId_;
      }
      /**
       * <code>uint32 init_pose_id = 21;</code>
       * @param value The initPoseId to set.
       * @return This builder for chaining.
       */
      public Builder setInitPoseId(int value) {

        initPoseId_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 init_pose_id = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearInitPoseId() {
        bitField0_ = (bitField0_ & ~0x00100000);
        initPoseId_ = 0;
        onChanged();
        return this;
      }

      private boolean isLight_ ;
      /**
       * <code>bool is_light = 22;</code>
       * @return The isLight.
       */
      @Override
      public boolean getIsLight() {
        return isLight_;
      }
      /**
       * <code>bool is_light = 22;</code>
       * @param value The isLight to set.
       * @return This builder for chaining.
       */
      public Builder setIsLight(boolean value) {

        isLight_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_light = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsLight() {
        bitField0_ = (bitField0_ & ~0x00200000);
        isLight_ = false;
        onChanged();
        return this;
      }

      private int killNum_ ;
      /**
       * <code>uint32 kill_num = 23;</code>
       * @return The killNum.
       */
      @Override
      public int getKillNum() {
        return killNum_;
      }
      /**
       * <code>uint32 kill_num = 23;</code>
       * @param value The killNum to set.
       * @return This builder for chaining.
       */
      public Builder setKillNum(int value) {

        killNum_ = value;
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 kill_num = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearKillNum() {
        bitField0_ = (bitField0_ & ~0x00400000);
        killNum_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilder<
          SceneFishInfoOuterClass.SceneFishInfo, SceneFishInfoOuterClass.SceneFishInfo.Builder, SceneFishInfoOuterClass.SceneFishInfoOrBuilder> fishInfoBuilder_;
      /**
       * <code>.SceneFishInfo fish_info = 50;</code>
       * @return Whether the fishInfo field is set.
       */
      @Override
      public boolean hasFishInfo() {
        return contentCase_ == 50;
      }
      /**
       * <code>.SceneFishInfo fish_info = 50;</code>
       * @return The fishInfo.
       */
      @Override
      public SceneFishInfoOuterClass.SceneFishInfo getFishInfo() {
        if (fishInfoBuilder_ == null) {
          if (contentCase_ == 50) {
            return (SceneFishInfoOuterClass.SceneFishInfo) content_;
          }
          return SceneFishInfoOuterClass.SceneFishInfo.getDefaultInstance();
        } else {
          if (contentCase_ == 50) {
            return fishInfoBuilder_.getMessage();
          }
          return SceneFishInfoOuterClass.SceneFishInfo.getDefaultInstance();
        }
      }
      /**
       * <code>.SceneFishInfo fish_info = 50;</code>
       */
      public Builder setFishInfo(SceneFishInfoOuterClass.SceneFishInfo value) {
        if (fishInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          content_ = value;
          onChanged();
        } else {
          fishInfoBuilder_.setMessage(value);
        }
        contentCase_ = 50;
        return this;
      }
      /**
       * <code>.SceneFishInfo fish_info = 50;</code>
       */
      public Builder setFishInfo(
          SceneFishInfoOuterClass.SceneFishInfo.Builder builderForValue) {
        if (fishInfoBuilder_ == null) {
          content_ = builderForValue.build();
          onChanged();
        } else {
          fishInfoBuilder_.setMessage(builderForValue.build());
        }
        contentCase_ = 50;
        return this;
      }
      /**
       * <code>.SceneFishInfo fish_info = 50;</code>
       */
      public Builder mergeFishInfo(SceneFishInfoOuterClass.SceneFishInfo value) {
        if (fishInfoBuilder_ == null) {
          if (contentCase_ == 50 &&
              content_ != SceneFishInfoOuterClass.SceneFishInfo.getDefaultInstance()) {
            content_ = SceneFishInfoOuterClass.SceneFishInfo.newBuilder((SceneFishInfoOuterClass.SceneFishInfo) content_)
                .mergeFrom(value).buildPartial();
          } else {
            content_ = value;
          }
          onChanged();
        } else {
          if (contentCase_ == 50) {
            fishInfoBuilder_.mergeFrom(value);
          } else {
            fishInfoBuilder_.setMessage(value);
          }
        }
        contentCase_ = 50;
        return this;
      }
      /**
       * <code>.SceneFishInfo fish_info = 50;</code>
       */
      public Builder clearFishInfo() {
        if (fishInfoBuilder_ == null) {
          if (contentCase_ == 50) {
            contentCase_ = 0;
            content_ = null;
            onChanged();
          }
        } else {
          if (contentCase_ == 50) {
            contentCase_ = 0;
            content_ = null;
          }
          fishInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.SceneFishInfo fish_info = 50;</code>
       */
      public SceneFishInfoOuterClass.SceneFishInfo.Builder getFishInfoBuilder() {
        return getFishInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.SceneFishInfo fish_info = 50;</code>
       */
      @Override
      public SceneFishInfoOuterClass.SceneFishInfoOrBuilder getFishInfoOrBuilder() {
        if ((contentCase_ == 50) && (fishInfoBuilder_ != null)) {
          return fishInfoBuilder_.getMessageOrBuilder();
        } else {
          if (contentCase_ == 50) {
            return (SceneFishInfoOuterClass.SceneFishInfo) content_;
          }
          return SceneFishInfoOuterClass.SceneFishInfo.getDefaultInstance();
        }
      }
      /**
       * <code>.SceneFishInfo fish_info = 50;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          SceneFishInfoOuterClass.SceneFishInfo, SceneFishInfoOuterClass.SceneFishInfo.Builder, SceneFishInfoOuterClass.SceneFishInfoOrBuilder>
          getFishInfoFieldBuilder() {
        if (fishInfoBuilder_ == null) {
          if (!(contentCase_ == 50)) {
            content_ = SceneFishInfoOuterClass.SceneFishInfo.getDefaultInstance();
          }
          fishInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              SceneFishInfoOuterClass.SceneFishInfo, SceneFishInfoOuterClass.SceneFishInfo.Builder, SceneFishInfoOuterClass.SceneFishInfoOrBuilder>(
                  (SceneFishInfoOuterClass.SceneFishInfo) content_,
                  getParentForChildren(),
                  isClean());
          content_ = null;
        }
        contentCase_ = 50;
        onChanged();
        return fishInfoBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilder<
          FishtankFishInfoOuterClass.FishtankFishInfo, FishtankFishInfoOuterClass.FishtankFishInfo.Builder, FishtankFishInfoOuterClass.FishtankFishInfoOrBuilder> fishtankFishInfoBuilder_;
      /**
       * <code>.FishtankFishInfo fishtank_fish_info = 51;</code>
       * @return Whether the fishtankFishInfo field is set.
       */
      @Override
      public boolean hasFishtankFishInfo() {
        return contentCase_ == 51;
      }
      /**
       * <code>.FishtankFishInfo fishtank_fish_info = 51;</code>
       * @return The fishtankFishInfo.
       */
      @Override
      public FishtankFishInfoOuterClass.FishtankFishInfo getFishtankFishInfo() {
        if (fishtankFishInfoBuilder_ == null) {
          if (contentCase_ == 51) {
            return (FishtankFishInfoOuterClass.FishtankFishInfo) content_;
          }
          return FishtankFishInfoOuterClass.FishtankFishInfo.getDefaultInstance();
        } else {
          if (contentCase_ == 51) {
            return fishtankFishInfoBuilder_.getMessage();
          }
          return FishtankFishInfoOuterClass.FishtankFishInfo.getDefaultInstance();
        }
      }
      /**
       * <code>.FishtankFishInfo fishtank_fish_info = 51;</code>
       */
      public Builder setFishtankFishInfo(FishtankFishInfoOuterClass.FishtankFishInfo value) {
        if (fishtankFishInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          content_ = value;
          onChanged();
        } else {
          fishtankFishInfoBuilder_.setMessage(value);
        }
        contentCase_ = 51;
        return this;
      }
      /**
       * <code>.FishtankFishInfo fishtank_fish_info = 51;</code>
       */
      public Builder setFishtankFishInfo(
          FishtankFishInfoOuterClass.FishtankFishInfo.Builder builderForValue) {
        if (fishtankFishInfoBuilder_ == null) {
          content_ = builderForValue.build();
          onChanged();
        } else {
          fishtankFishInfoBuilder_.setMessage(builderForValue.build());
        }
        contentCase_ = 51;
        return this;
      }
      /**
       * <code>.FishtankFishInfo fishtank_fish_info = 51;</code>
       */
      public Builder mergeFishtankFishInfo(FishtankFishInfoOuterClass.FishtankFishInfo value) {
        if (fishtankFishInfoBuilder_ == null) {
          if (contentCase_ == 51 &&
              content_ != FishtankFishInfoOuterClass.FishtankFishInfo.getDefaultInstance()) {
            content_ = FishtankFishInfoOuterClass.FishtankFishInfo.newBuilder((FishtankFishInfoOuterClass.FishtankFishInfo) content_)
                .mergeFrom(value).buildPartial();
          } else {
            content_ = value;
          }
          onChanged();
        } else {
          if (contentCase_ == 51) {
            fishtankFishInfoBuilder_.mergeFrom(value);
          } else {
            fishtankFishInfoBuilder_.setMessage(value);
          }
        }
        contentCase_ = 51;
        return this;
      }
      /**
       * <code>.FishtankFishInfo fishtank_fish_info = 51;</code>
       */
      public Builder clearFishtankFishInfo() {
        if (fishtankFishInfoBuilder_ == null) {
          if (contentCase_ == 51) {
            contentCase_ = 0;
            content_ = null;
            onChanged();
          }
        } else {
          if (contentCase_ == 51) {
            contentCase_ = 0;
            content_ = null;
          }
          fishtankFishInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.FishtankFishInfo fishtank_fish_info = 51;</code>
       */
      public FishtankFishInfoOuterClass.FishtankFishInfo.Builder getFishtankFishInfoBuilder() {
        return getFishtankFishInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.FishtankFishInfo fishtank_fish_info = 51;</code>
       */
      @Override
      public FishtankFishInfoOuterClass.FishtankFishInfoOrBuilder getFishtankFishInfoOrBuilder() {
        if ((contentCase_ == 51) && (fishtankFishInfoBuilder_ != null)) {
          return fishtankFishInfoBuilder_.getMessageOrBuilder();
        } else {
          if (contentCase_ == 51) {
            return (FishtankFishInfoOuterClass.FishtankFishInfo) content_;
          }
          return FishtankFishInfoOuterClass.FishtankFishInfo.getDefaultInstance();
        }
      }
      /**
       * <code>.FishtankFishInfo fishtank_fish_info = 51;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          FishtankFishInfoOuterClass.FishtankFishInfo, FishtankFishInfoOuterClass.FishtankFishInfo.Builder, FishtankFishInfoOuterClass.FishtankFishInfoOrBuilder>
          getFishtankFishInfoFieldBuilder() {
        if (fishtankFishInfoBuilder_ == null) {
          if (!(contentCase_ == 51)) {
            content_ = FishtankFishInfoOuterClass.FishtankFishInfo.getDefaultInstance();
          }
          fishtankFishInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              FishtankFishInfoOuterClass.FishtankFishInfo, FishtankFishInfoOuterClass.FishtankFishInfo.Builder, FishtankFishInfoOuterClass.FishtankFishInfoOrBuilder>(
                  (FishtankFishInfoOuterClass.FishtankFishInfo) content_,
                  getParentForChildren(),
                  isClean());
          content_ = null;
        }
        contentCase_ = 51;
        onChanged();
        return fishtankFishInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:SceneMonsterInfo)
    }

    // @@protoc_insertion_point(class_scope:SceneMonsterInfo)
    private static final SceneMonsterInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SceneMonsterInfo();
    }

    public static SceneMonsterInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SceneMonsterInfo>
        PARSER = new com.google.protobuf.AbstractParser<SceneMonsterInfo>() {
      @Override
      public SceneMonsterInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SceneMonsterInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<SceneMonsterInfo> getParserForType() {
      return PARSER;
    }

    @Override
    public SceneMonsterInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SceneMonsterInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SceneMonsterInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_SceneMonsterInfo_SummonTagMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SceneMonsterInfo_SummonTagMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\026SceneMonsterInfo.proto\032\025SceneWeaponInf" +
      "o.proto\032\025MonsterBornType.proto\032\022MonsterR" +
      "oute.proto\032\023SceneFishInfo.proto\032\026Fishtan" +
      "kFishInfo.proto\"\343\005\n\020SceneMonsterInfo\022\022\n\n" +
      "monster_id\030\001 \001(\r\022\020\n\010group_id\030\002 \001(\r\022\021\n\tco" +
      "nfig_id\030\003 \001(\r\022%\n\013weapon_list\030\004 \003(\0132\020.Sce" +
      "neWeaponInfo\022\031\n\021authority_peer_id\030\005 \001(\r\022" +
      "\022\n\naffix_list\030\006 \003(\r\022\020\n\010is_elite\030\007 \001(\010\022\027\n" +
      "\017owner_entity_id\030\010 \001(\r\022\024\n\014summoned_tag\030\t" +
      " \001(\r\022;\n\016summon_tag_map\030\n \003(\0132#.SceneMons" +
      "terInfo.SummonTagMapEntry\022\017\n\007pose_id\030\013 \001" +
      "(\r\022#\n\tborn_type\030\014 \001(\0162\020.MonsterBornType\022" +
      "\020\n\010block_id\030\r \001(\r\022\021\n\tmark_flag\030\016 \001(\r\022\020\n\010" +
      "title_id\030\017 \001(\r\022\027\n\017special_name_id\030\020 \001(\r\022" +
      "\030\n\020attack_target_id\030\021 \001(\r\022$\n\rmonster_rou" +
      "te\030\022 \001(\0132\r.MonsterRoute\022\024\n\014ai_config_id\030" +
      "\023 \001(\r\022\026\n\016level_route_id\030\024 \001(\r\022\024\n\014init_po" +
      "se_id\030\025 \001(\r\022\020\n\010is_light\030\026 \001(\010\022\020\n\010kill_nu" +
      "m\030\027 \001(\r\022#\n\tfish_info\0302 \001(\0132\016.SceneFishIn" +
      "foH\000\022/\n\022fishtank_fish_info\0303 \001(\0132\021.Fisht" +
      "ankFishInfoH\000\0323\n\021SummonTagMapEntry\022\013\n\003ke" +
      "y\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001B\t\n\007contentB\032\n" +
      "\030io.irminsul.common.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          SceneWeaponInfoOuterClass.getDescriptor(),
          MonsterBornTypeOuterClass.getDescriptor(),
          MonsterRouteOuterClass.getDescriptor(),
          SceneFishInfoOuterClass.getDescriptor(),
          FishtankFishInfoOuterClass.getDescriptor(),
        });
    internal_static_SceneMonsterInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_SceneMonsterInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SceneMonsterInfo_descriptor,
        new String[] { "MonsterId", "GroupId", "ConfigId", "WeaponList", "AuthorityPeerId", "AffixList", "IsElite", "OwnerEntityId", "SummonedTag", "SummonTagMap", "PoseId", "BornType", "BlockId", "MarkFlag", "TitleId", "SpecialNameId", "AttackTargetId", "MonsterRoute", "AiConfigId", "LevelRouteId", "InitPoseId", "IsLight", "KillNum", "FishInfo", "FishtankFishInfo", "Content", });
    internal_static_SceneMonsterInfo_SummonTagMapEntry_descriptor =
      internal_static_SceneMonsterInfo_descriptor.getNestedTypes().get(0);
    internal_static_SceneMonsterInfo_SummonTagMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_SceneMonsterInfo_SummonTagMapEntry_descriptor,
        new String[] { "Key", "Value", });
    descriptor.resolveAllFeaturesImmutable();
    SceneWeaponInfoOuterClass.getDescriptor();
    MonsterBornTypeOuterClass.getDescriptor();
    MonsterRouteOuterClass.getDescriptor();
    SceneFishInfoOuterClass.getDescriptor();
    FishtankFishInfoOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
