// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: MotionInfo.proto
// Protobuf Java Version: 4.27.2

package io.irminsul.common.proto;

public final class MotionInfoOuterClass {
  private MotionInfoOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      MotionInfoOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MotionInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MotionInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.Vector pos = 1;</code>
     * @return Whether the pos field is set.
     */
    boolean hasPos();
    /**
     * <code>.Vector pos = 1;</code>
     * @return The pos.
     */
    VectorOuterClass.Vector getPos();
    /**
     * <code>.Vector pos = 1;</code>
     */
    VectorOuterClass.VectorOrBuilder getPosOrBuilder();

    /**
     * <code>.Vector rot = 2;</code>
     * @return Whether the rot field is set.
     */
    boolean hasRot();
    /**
     * <code>.Vector rot = 2;</code>
     * @return The rot.
     */
    VectorOuterClass.Vector getRot();
    /**
     * <code>.Vector rot = 2;</code>
     */
    VectorOuterClass.VectorOrBuilder getRotOrBuilder();

    /**
     * <code>.Vector speed = 3;</code>
     * @return Whether the speed field is set.
     */
    boolean hasSpeed();
    /**
     * <code>.Vector speed = 3;</code>
     * @return The speed.
     */
    VectorOuterClass.Vector getSpeed();
    /**
     * <code>.Vector speed = 3;</code>
     */
    VectorOuterClass.VectorOrBuilder getSpeedOrBuilder();

    /**
     * <code>.MotionState state = 4;</code>
     * @return The enum numeric value on the wire for state.
     */
    int getStateValue();
    /**
     * <code>.MotionState state = 4;</code>
     * @return The state.
     */
    MotionStateOuterClass.MotionState getState();

    /**
     * <code>repeated .Vector params = 5;</code>
     */
    java.util.List<VectorOuterClass.Vector>
        getParamsList();
    /**
     * <code>repeated .Vector params = 5;</code>
     */
    VectorOuterClass.Vector getParams(int index);
    /**
     * <code>repeated .Vector params = 5;</code>
     */
    int getParamsCount();
    /**
     * <code>repeated .Vector params = 5;</code>
     */
    java.util.List<? extends VectorOuterClass.VectorOrBuilder>
        getParamsOrBuilderList();
    /**
     * <code>repeated .Vector params = 5;</code>
     */
    VectorOuterClass.VectorOrBuilder getParamsOrBuilder(
        int index);

    /**
     * <code>.Vector ref_pos = 6;</code>
     * @return Whether the refPos field is set.
     */
    boolean hasRefPos();
    /**
     * <code>.Vector ref_pos = 6;</code>
     * @return The refPos.
     */
    VectorOuterClass.Vector getRefPos();
    /**
     * <code>.Vector ref_pos = 6;</code>
     */
    VectorOuterClass.VectorOrBuilder getRefPosOrBuilder();

    /**
     * <code>uint32 ref_id = 7;</code>
     * @return The refId.
     */
    int getRefId();

    /**
     * <code>uint32 scene_time = 8;</code>
     * @return The sceneTime.
     */
    int getSceneTime();

    /**
     * <code>uint64 interval_velocity = 9;</code>
     * @return The intervalVelocity.
     */
    long getIntervalVelocity();
  }
  /**
   * <pre>
   * Obf: LJEPKMPIOKJ
   * </pre>
   *
   * Protobuf type {@code MotionInfo}
   */
  public static final class MotionInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MotionInfo)
      MotionInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 2,
        /* suffix= */ "",
        MotionInfo.class.getName());
    }
    // Use MotionInfo.newBuilder() to construct.
    private MotionInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private MotionInfo() {
      state_ = 0;
      params_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MotionInfoOuterClass.internal_static_MotionInfo_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MotionInfoOuterClass.internal_static_MotionInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MotionInfo.class, Builder.class);
    }

    private int bitField0_;
    public static final int POS_FIELD_NUMBER = 1;
    private VectorOuterClass.Vector pos_;
    /**
     * <code>.Vector pos = 1;</code>
     * @return Whether the pos field is set.
     */
    @Override
    public boolean hasPos() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.Vector pos = 1;</code>
     * @return The pos.
     */
    @Override
    public VectorOuterClass.Vector getPos() {
      return pos_ == null ? VectorOuterClass.Vector.getDefaultInstance() : pos_;
    }
    /**
     * <code>.Vector pos = 1;</code>
     */
    @Override
    public VectorOuterClass.VectorOrBuilder getPosOrBuilder() {
      return pos_ == null ? VectorOuterClass.Vector.getDefaultInstance() : pos_;
    }

    public static final int ROT_FIELD_NUMBER = 2;
    private VectorOuterClass.Vector rot_;
    /**
     * <code>.Vector rot = 2;</code>
     * @return Whether the rot field is set.
     */
    @Override
    public boolean hasRot() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>.Vector rot = 2;</code>
     * @return The rot.
     */
    @Override
    public VectorOuterClass.Vector getRot() {
      return rot_ == null ? VectorOuterClass.Vector.getDefaultInstance() : rot_;
    }
    /**
     * <code>.Vector rot = 2;</code>
     */
    @Override
    public VectorOuterClass.VectorOrBuilder getRotOrBuilder() {
      return rot_ == null ? VectorOuterClass.Vector.getDefaultInstance() : rot_;
    }

    public static final int SPEED_FIELD_NUMBER = 3;
    private VectorOuterClass.Vector speed_;
    /**
     * <code>.Vector speed = 3;</code>
     * @return Whether the speed field is set.
     */
    @Override
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>.Vector speed = 3;</code>
     * @return The speed.
     */
    @Override
    public VectorOuterClass.Vector getSpeed() {
      return speed_ == null ? VectorOuterClass.Vector.getDefaultInstance() : speed_;
    }
    /**
     * <code>.Vector speed = 3;</code>
     */
    @Override
    public VectorOuterClass.VectorOrBuilder getSpeedOrBuilder() {
      return speed_ == null ? VectorOuterClass.Vector.getDefaultInstance() : speed_;
    }

    public static final int STATE_FIELD_NUMBER = 4;
    private int state_ = 0;
    /**
     * <code>.MotionState state = 4;</code>
     * @return The enum numeric value on the wire for state.
     */
    @Override public int getStateValue() {
      return state_;
    }
    /**
     * <code>.MotionState state = 4;</code>
     * @return The state.
     */
    @Override public MotionStateOuterClass.MotionState getState() {
      MotionStateOuterClass.MotionState result = MotionStateOuterClass.MotionState.forNumber(state_);
      return result == null ? MotionStateOuterClass.MotionState.UNRECOGNIZED : result;
    }

    public static final int PARAMS_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<VectorOuterClass.Vector> params_;
    /**
     * <code>repeated .Vector params = 5;</code>
     */
    @Override
    public java.util.List<VectorOuterClass.Vector> getParamsList() {
      return params_;
    }
    /**
     * <code>repeated .Vector params = 5;</code>
     */
    @Override
    public java.util.List<? extends VectorOuterClass.VectorOrBuilder>
        getParamsOrBuilderList() {
      return params_;
    }
    /**
     * <code>repeated .Vector params = 5;</code>
     */
    @Override
    public int getParamsCount() {
      return params_.size();
    }
    /**
     * <code>repeated .Vector params = 5;</code>
     */
    @Override
    public VectorOuterClass.Vector getParams(int index) {
      return params_.get(index);
    }
    /**
     * <code>repeated .Vector params = 5;</code>
     */
    @Override
    public VectorOuterClass.VectorOrBuilder getParamsOrBuilder(
        int index) {
      return params_.get(index);
    }

    public static final int REF_POS_FIELD_NUMBER = 6;
    private VectorOuterClass.Vector refPos_;
    /**
     * <code>.Vector ref_pos = 6;</code>
     * @return Whether the refPos field is set.
     */
    @Override
    public boolean hasRefPos() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>.Vector ref_pos = 6;</code>
     * @return The refPos.
     */
    @Override
    public VectorOuterClass.Vector getRefPos() {
      return refPos_ == null ? VectorOuterClass.Vector.getDefaultInstance() : refPos_;
    }
    /**
     * <code>.Vector ref_pos = 6;</code>
     */
    @Override
    public VectorOuterClass.VectorOrBuilder getRefPosOrBuilder() {
      return refPos_ == null ? VectorOuterClass.Vector.getDefaultInstance() : refPos_;
    }

    public static final int REF_ID_FIELD_NUMBER = 7;
    private int refId_ = 0;
    /**
     * <code>uint32 ref_id = 7;</code>
     * @return The refId.
     */
    @Override
    public int getRefId() {
      return refId_;
    }

    public static final int SCENE_TIME_FIELD_NUMBER = 8;
    private int sceneTime_ = 0;
    /**
     * <code>uint32 scene_time = 8;</code>
     * @return The sceneTime.
     */
    @Override
    public int getSceneTime() {
      return sceneTime_;
    }

    public static final int INTERVAL_VELOCITY_FIELD_NUMBER = 9;
    private long intervalVelocity_ = 0L;
    /**
     * <code>uint64 interval_velocity = 9;</code>
     * @return The intervalVelocity.
     */
    @Override
    public long getIntervalVelocity() {
      return intervalVelocity_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getPos());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getRot());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getSpeed());
      }
      if (state_ != MotionStateOuterClass.MotionState.MOTION_STATE_NONE.getNumber()) {
        output.writeEnum(4, state_);
      }
      for (int i = 0; i < params_.size(); i++) {
        output.writeMessage(5, params_.get(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(6, getRefPos());
      }
      if (refId_ != 0) {
        output.writeUInt32(7, refId_);
      }
      if (sceneTime_ != 0) {
        output.writeUInt32(8, sceneTime_);
      }
      if (intervalVelocity_ != 0L) {
        output.writeUInt64(9, intervalVelocity_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPos());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getRot());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSpeed());
      }
      if (state_ != MotionStateOuterClass.MotionState.MOTION_STATE_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, state_);
      }
      for (int i = 0; i < params_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, params_.get(i));
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getRefPos());
      }
      if (refId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, refId_);
      }
      if (sceneTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, sceneTime_);
      }
      if (intervalVelocity_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, intervalVelocity_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MotionInfo)) {
        return super.equals(obj);
      }
      MotionInfo other = (MotionInfo) obj;

      if (hasPos() != other.hasPos()) return false;
      if (hasPos()) {
        if (!getPos()
            .equals(other.getPos())) return false;
      }
      if (hasRot() != other.hasRot()) return false;
      if (hasRot()) {
        if (!getRot()
            .equals(other.getRot())) return false;
      }
      if (hasSpeed() != other.hasSpeed()) return false;
      if (hasSpeed()) {
        if (!getSpeed()
            .equals(other.getSpeed())) return false;
      }
      if (state_ != other.state_) return false;
      if (!getParamsList()
          .equals(other.getParamsList())) return false;
      if (hasRefPos() != other.hasRefPos()) return false;
      if (hasRefPos()) {
        if (!getRefPos()
            .equals(other.getRefPos())) return false;
      }
      if (getRefId()
          != other.getRefId()) return false;
      if (getSceneTime()
          != other.getSceneTime()) return false;
      if (getIntervalVelocity()
          != other.getIntervalVelocity()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPos()) {
        hash = (37 * hash) + POS_FIELD_NUMBER;
        hash = (53 * hash) + getPos().hashCode();
      }
      if (hasRot()) {
        hash = (37 * hash) + ROT_FIELD_NUMBER;
        hash = (53 * hash) + getRot().hashCode();
      }
      if (hasSpeed()) {
        hash = (37 * hash) + SPEED_FIELD_NUMBER;
        hash = (53 * hash) + getSpeed().hashCode();
      }
      hash = (37 * hash) + STATE_FIELD_NUMBER;
      hash = (53 * hash) + state_;
      if (getParamsCount() > 0) {
        hash = (37 * hash) + PARAMS_FIELD_NUMBER;
        hash = (53 * hash) + getParamsList().hashCode();
      }
      if (hasRefPos()) {
        hash = (37 * hash) + REF_POS_FIELD_NUMBER;
        hash = (53 * hash) + getRefPos().hashCode();
      }
      hash = (37 * hash) + REF_ID_FIELD_NUMBER;
      hash = (53 * hash) + getRefId();
      hash = (37 * hash) + SCENE_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getSceneTime();
      hash = (37 * hash) + INTERVAL_VELOCITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getIntervalVelocity());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MotionInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MotionInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MotionInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MotionInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MotionInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MotionInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MotionInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static MotionInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static MotionInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static MotionInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MotionInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static MotionInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MotionInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Obf: LJEPKMPIOKJ
     * </pre>
     *
     * Protobuf type {@code MotionInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MotionInfo)
        MotionInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MotionInfoOuterClass.internal_static_MotionInfo_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MotionInfoOuterClass.internal_static_MotionInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MotionInfo.class, Builder.class);
      }

      // Construct using io.irminsul.common.proto.MotionInfoOuterClass.MotionInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getPosFieldBuilder();
          getRotFieldBuilder();
          getSpeedFieldBuilder();
          getParamsFieldBuilder();
          getRefPosFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        pos_ = null;
        if (posBuilder_ != null) {
          posBuilder_.dispose();
          posBuilder_ = null;
        }
        rot_ = null;
        if (rotBuilder_ != null) {
          rotBuilder_.dispose();
          rotBuilder_ = null;
        }
        speed_ = null;
        if (speedBuilder_ != null) {
          speedBuilder_.dispose();
          speedBuilder_ = null;
        }
        state_ = 0;
        if (paramsBuilder_ == null) {
          params_ = java.util.Collections.emptyList();
        } else {
          params_ = null;
          paramsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        refPos_ = null;
        if (refPosBuilder_ != null) {
          refPosBuilder_.dispose();
          refPosBuilder_ = null;
        }
        refId_ = 0;
        sceneTime_ = 0;
        intervalVelocity_ = 0L;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MotionInfoOuterClass.internal_static_MotionInfo_descriptor;
      }

      @Override
      public MotionInfo getDefaultInstanceForType() {
        return MotionInfo.getDefaultInstance();
      }

      @Override
      public MotionInfo build() {
        MotionInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MotionInfo buildPartial() {
        MotionInfo result = new MotionInfo(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(MotionInfo result) {
        if (paramsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            params_ = java.util.Collections.unmodifiableList(params_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.params_ = params_;
        } else {
          result.params_ = paramsBuilder_.build();
        }
      }

      private void buildPartial0(MotionInfo result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.pos_ = posBuilder_ == null
              ? pos_
              : posBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.rot_ = rotBuilder_ == null
              ? rot_
              : rotBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.speed_ = speedBuilder_ == null
              ? speed_
              : speedBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.state_ = state_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.refPos_ = refPosBuilder_ == null
              ? refPos_
              : refPosBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.refId_ = refId_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.sceneTime_ = sceneTime_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.intervalVelocity_ = intervalVelocity_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MotionInfo) {
          return mergeFrom((MotionInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MotionInfo other) {
        if (other == MotionInfo.getDefaultInstance()) return this;
        if (other.hasPos()) {
          mergePos(other.getPos());
        }
        if (other.hasRot()) {
          mergeRot(other.getRot());
        }
        if (other.hasSpeed()) {
          mergeSpeed(other.getSpeed());
        }
        if (other.state_ != 0) {
          setStateValue(other.getStateValue());
        }
        if (paramsBuilder_ == null) {
          if (!other.params_.isEmpty()) {
            if (params_.isEmpty()) {
              params_ = other.params_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureParamsIsMutable();
              params_.addAll(other.params_);
            }
            onChanged();
          }
        } else {
          if (!other.params_.isEmpty()) {
            if (paramsBuilder_.isEmpty()) {
              paramsBuilder_.dispose();
              paramsBuilder_ = null;
              params_ = other.params_;
              bitField0_ = (bitField0_ & ~0x00000010);
              paramsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getParamsFieldBuilder() : null;
            } else {
              paramsBuilder_.addAllMessages(other.params_);
            }
          }
        }
        if (other.hasRefPos()) {
          mergeRefPos(other.getRefPos());
        }
        if (other.getRefId() != 0) {
          setRefId(other.getRefId());
        }
        if (other.getSceneTime() != 0) {
          setSceneTime(other.getSceneTime());
        }
        if (other.getIntervalVelocity() != 0L) {
          setIntervalVelocity(other.getIntervalVelocity());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getPosFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getRotFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getSpeedFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                state_ = input.readEnum();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 42: {
                VectorOuterClass.Vector m =
                    input.readMessage(
                        VectorOuterClass.Vector.parser(),
                        extensionRegistry);
                if (paramsBuilder_ == null) {
                  ensureParamsIsMutable();
                  params_.add(m);
                } else {
                  paramsBuilder_.addMessage(m);
                }
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getRefPosFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 56: {
                refId_ = input.readUInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                sceneTime_ = input.readUInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                intervalVelocity_ = input.readUInt64();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private VectorOuterClass.Vector pos_;
      private com.google.protobuf.SingleFieldBuilder<
          VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder> posBuilder_;
      /**
       * <code>.Vector pos = 1;</code>
       * @return Whether the pos field is set.
       */
      public boolean hasPos() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>.Vector pos = 1;</code>
       * @return The pos.
       */
      public VectorOuterClass.Vector getPos() {
        if (posBuilder_ == null) {
          return pos_ == null ? VectorOuterClass.Vector.getDefaultInstance() : pos_;
        } else {
          return posBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector pos = 1;</code>
       */
      public Builder setPos(VectorOuterClass.Vector value) {
        if (posBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pos_ = value;
        } else {
          posBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.Vector pos = 1;</code>
       */
      public Builder setPos(
          VectorOuterClass.Vector.Builder builderForValue) {
        if (posBuilder_ == null) {
          pos_ = builderForValue.build();
        } else {
          posBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.Vector pos = 1;</code>
       */
      public Builder mergePos(VectorOuterClass.Vector value) {
        if (posBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            pos_ != null &&
            pos_ != VectorOuterClass.Vector.getDefaultInstance()) {
            getPosBuilder().mergeFrom(value);
          } else {
            pos_ = value;
          }
        } else {
          posBuilder_.mergeFrom(value);
        }
        if (pos_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.Vector pos = 1;</code>
       */
      public Builder clearPos() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pos_ = null;
        if (posBuilder_ != null) {
          posBuilder_.dispose();
          posBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.Vector pos = 1;</code>
       */
      public VectorOuterClass.Vector.Builder getPosBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPosFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector pos = 1;</code>
       */
      public VectorOuterClass.VectorOrBuilder getPosOrBuilder() {
        if (posBuilder_ != null) {
          return posBuilder_.getMessageOrBuilder();
        } else {
          return pos_ == null ?
              VectorOuterClass.Vector.getDefaultInstance() : pos_;
        }
      }
      /**
       * <code>.Vector pos = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder>
          getPosFieldBuilder() {
        if (posBuilder_ == null) {
          posBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder>(
                  getPos(),
                  getParentForChildren(),
                  isClean());
          pos_ = null;
        }
        return posBuilder_;
      }

      private VectorOuterClass.Vector rot_;
      private com.google.protobuf.SingleFieldBuilder<
          VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder> rotBuilder_;
      /**
       * <code>.Vector rot = 2;</code>
       * @return Whether the rot field is set.
       */
      public boolean hasRot() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>.Vector rot = 2;</code>
       * @return The rot.
       */
      public VectorOuterClass.Vector getRot() {
        if (rotBuilder_ == null) {
          return rot_ == null ? VectorOuterClass.Vector.getDefaultInstance() : rot_;
        } else {
          return rotBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector rot = 2;</code>
       */
      public Builder setRot(VectorOuterClass.Vector value) {
        if (rotBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rot_ = value;
        } else {
          rotBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.Vector rot = 2;</code>
       */
      public Builder setRot(
          VectorOuterClass.Vector.Builder builderForValue) {
        if (rotBuilder_ == null) {
          rot_ = builderForValue.build();
        } else {
          rotBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.Vector rot = 2;</code>
       */
      public Builder mergeRot(VectorOuterClass.Vector value) {
        if (rotBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            rot_ != null &&
            rot_ != VectorOuterClass.Vector.getDefaultInstance()) {
            getRotBuilder().mergeFrom(value);
          } else {
            rot_ = value;
          }
        } else {
          rotBuilder_.mergeFrom(value);
        }
        if (rot_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.Vector rot = 2;</code>
       */
      public Builder clearRot() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rot_ = null;
        if (rotBuilder_ != null) {
          rotBuilder_.dispose();
          rotBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.Vector rot = 2;</code>
       */
      public VectorOuterClass.Vector.Builder getRotBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getRotFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector rot = 2;</code>
       */
      public VectorOuterClass.VectorOrBuilder getRotOrBuilder() {
        if (rotBuilder_ != null) {
          return rotBuilder_.getMessageOrBuilder();
        } else {
          return rot_ == null ?
              VectorOuterClass.Vector.getDefaultInstance() : rot_;
        }
      }
      /**
       * <code>.Vector rot = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder>
          getRotFieldBuilder() {
        if (rotBuilder_ == null) {
          rotBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder>(
                  getRot(),
                  getParentForChildren(),
                  isClean());
          rot_ = null;
        }
        return rotBuilder_;
      }

      private VectorOuterClass.Vector speed_;
      private com.google.protobuf.SingleFieldBuilder<
          VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder> speedBuilder_;
      /**
       * <code>.Vector speed = 3;</code>
       * @return Whether the speed field is set.
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>.Vector speed = 3;</code>
       * @return The speed.
       */
      public VectorOuterClass.Vector getSpeed() {
        if (speedBuilder_ == null) {
          return speed_ == null ? VectorOuterClass.Vector.getDefaultInstance() : speed_;
        } else {
          return speedBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector speed = 3;</code>
       */
      public Builder setSpeed(VectorOuterClass.Vector value) {
        if (speedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          speed_ = value;
        } else {
          speedBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.Vector speed = 3;</code>
       */
      public Builder setSpeed(
          VectorOuterClass.Vector.Builder builderForValue) {
        if (speedBuilder_ == null) {
          speed_ = builderForValue.build();
        } else {
          speedBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.Vector speed = 3;</code>
       */
      public Builder mergeSpeed(VectorOuterClass.Vector value) {
        if (speedBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            speed_ != null &&
            speed_ != VectorOuterClass.Vector.getDefaultInstance()) {
            getSpeedBuilder().mergeFrom(value);
          } else {
            speed_ = value;
          }
        } else {
          speedBuilder_.mergeFrom(value);
        }
        if (speed_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.Vector speed = 3;</code>
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        speed_ = null;
        if (speedBuilder_ != null) {
          speedBuilder_.dispose();
          speedBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.Vector speed = 3;</code>
       */
      public VectorOuterClass.Vector.Builder getSpeedBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getSpeedFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector speed = 3;</code>
       */
      public VectorOuterClass.VectorOrBuilder getSpeedOrBuilder() {
        if (speedBuilder_ != null) {
          return speedBuilder_.getMessageOrBuilder();
        } else {
          return speed_ == null ?
              VectorOuterClass.Vector.getDefaultInstance() : speed_;
        }
      }
      /**
       * <code>.Vector speed = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder>
          getSpeedFieldBuilder() {
        if (speedBuilder_ == null) {
          speedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder>(
                  getSpeed(),
                  getParentForChildren(),
                  isClean());
          speed_ = null;
        }
        return speedBuilder_;
      }

      private int state_ = 0;
      /**
       * <code>.MotionState state = 4;</code>
       * @return The enum numeric value on the wire for state.
       */
      @Override public int getStateValue() {
        return state_;
      }
      /**
       * <code>.MotionState state = 4;</code>
       * @param value The enum numeric value on the wire for state to set.
       * @return This builder for chaining.
       */
      public Builder setStateValue(int value) {
        state_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.MotionState state = 4;</code>
       * @return The state.
       */
      @Override
      public MotionStateOuterClass.MotionState getState() {
        MotionStateOuterClass.MotionState result = MotionStateOuterClass.MotionState.forNumber(state_);
        return result == null ? MotionStateOuterClass.MotionState.UNRECOGNIZED : result;
      }
      /**
       * <code>.MotionState state = 4;</code>
       * @param value The state to set.
       * @return This builder for chaining.
       */
      public Builder setState(MotionStateOuterClass.MotionState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        state_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.MotionState state = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000008);
        state_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<VectorOuterClass.Vector> params_ =
        java.util.Collections.emptyList();
      private void ensureParamsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          params_ = new java.util.ArrayList<VectorOuterClass.Vector>(params_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder> paramsBuilder_;

      /**
       * <code>repeated .Vector params = 5;</code>
       */
      public java.util.List<VectorOuterClass.Vector> getParamsList() {
        if (paramsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(params_);
        } else {
          return paramsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Vector params = 5;</code>
       */
      public int getParamsCount() {
        if (paramsBuilder_ == null) {
          return params_.size();
        } else {
          return paramsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Vector params = 5;</code>
       */
      public VectorOuterClass.Vector getParams(int index) {
        if (paramsBuilder_ == null) {
          return params_.get(index);
        } else {
          return paramsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Vector params = 5;</code>
       */
      public Builder setParams(
          int index, VectorOuterClass.Vector value) {
        if (paramsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParamsIsMutable();
          params_.set(index, value);
          onChanged();
        } else {
          paramsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Vector params = 5;</code>
       */
      public Builder setParams(
          int index, VectorOuterClass.Vector.Builder builderForValue) {
        if (paramsBuilder_ == null) {
          ensureParamsIsMutable();
          params_.set(index, builderForValue.build());
          onChanged();
        } else {
          paramsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Vector params = 5;</code>
       */
      public Builder addParams(VectorOuterClass.Vector value) {
        if (paramsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParamsIsMutable();
          params_.add(value);
          onChanged();
        } else {
          paramsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Vector params = 5;</code>
       */
      public Builder addParams(
          int index, VectorOuterClass.Vector value) {
        if (paramsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureParamsIsMutable();
          params_.add(index, value);
          onChanged();
        } else {
          paramsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Vector params = 5;</code>
       */
      public Builder addParams(
          VectorOuterClass.Vector.Builder builderForValue) {
        if (paramsBuilder_ == null) {
          ensureParamsIsMutable();
          params_.add(builderForValue.build());
          onChanged();
        } else {
          paramsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Vector params = 5;</code>
       */
      public Builder addParams(
          int index, VectorOuterClass.Vector.Builder builderForValue) {
        if (paramsBuilder_ == null) {
          ensureParamsIsMutable();
          params_.add(index, builderForValue.build());
          onChanged();
        } else {
          paramsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Vector params = 5;</code>
       */
      public Builder addAllParams(
          Iterable<? extends VectorOuterClass.Vector> values) {
        if (paramsBuilder_ == null) {
          ensureParamsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, params_);
          onChanged();
        } else {
          paramsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Vector params = 5;</code>
       */
      public Builder clearParams() {
        if (paramsBuilder_ == null) {
          params_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          paramsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Vector params = 5;</code>
       */
      public Builder removeParams(int index) {
        if (paramsBuilder_ == null) {
          ensureParamsIsMutable();
          params_.remove(index);
          onChanged();
        } else {
          paramsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Vector params = 5;</code>
       */
      public VectorOuterClass.Vector.Builder getParamsBuilder(
          int index) {
        return getParamsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Vector params = 5;</code>
       */
      public VectorOuterClass.VectorOrBuilder getParamsOrBuilder(
          int index) {
        if (paramsBuilder_ == null) {
          return params_.get(index);  } else {
          return paramsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Vector params = 5;</code>
       */
      public java.util.List<? extends VectorOuterClass.VectorOrBuilder>
           getParamsOrBuilderList() {
        if (paramsBuilder_ != null) {
          return paramsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(params_);
        }
      }
      /**
       * <code>repeated .Vector params = 5;</code>
       */
      public VectorOuterClass.Vector.Builder addParamsBuilder() {
        return getParamsFieldBuilder().addBuilder(
            VectorOuterClass.Vector.getDefaultInstance());
      }
      /**
       * <code>repeated .Vector params = 5;</code>
       */
      public VectorOuterClass.Vector.Builder addParamsBuilder(
          int index) {
        return getParamsFieldBuilder().addBuilder(
            index, VectorOuterClass.Vector.getDefaultInstance());
      }
      /**
       * <code>repeated .Vector params = 5;</code>
       */
      public java.util.List<VectorOuterClass.Vector.Builder>
           getParamsBuilderList() {
        return getParamsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder>
          getParamsFieldBuilder() {
        if (paramsBuilder_ == null) {
          paramsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder>(
                  params_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          params_ = null;
        }
        return paramsBuilder_;
      }

      private VectorOuterClass.Vector refPos_;
      private com.google.protobuf.SingleFieldBuilder<
          VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder> refPosBuilder_;
      /**
       * <code>.Vector ref_pos = 6;</code>
       * @return Whether the refPos field is set.
       */
      public boolean hasRefPos() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>.Vector ref_pos = 6;</code>
       * @return The refPos.
       */
      public VectorOuterClass.Vector getRefPos() {
        if (refPosBuilder_ == null) {
          return refPos_ == null ? VectorOuterClass.Vector.getDefaultInstance() : refPos_;
        } else {
          return refPosBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector ref_pos = 6;</code>
       */
      public Builder setRefPos(VectorOuterClass.Vector value) {
        if (refPosBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          refPos_ = value;
        } else {
          refPosBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>.Vector ref_pos = 6;</code>
       */
      public Builder setRefPos(
          VectorOuterClass.Vector.Builder builderForValue) {
        if (refPosBuilder_ == null) {
          refPos_ = builderForValue.build();
        } else {
          refPosBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>.Vector ref_pos = 6;</code>
       */
      public Builder mergeRefPos(VectorOuterClass.Vector value) {
        if (refPosBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            refPos_ != null &&
            refPos_ != VectorOuterClass.Vector.getDefaultInstance()) {
            getRefPosBuilder().mergeFrom(value);
          } else {
            refPos_ = value;
          }
        } else {
          refPosBuilder_.mergeFrom(value);
        }
        if (refPos_ != null) {
          bitField0_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.Vector ref_pos = 6;</code>
       */
      public Builder clearRefPos() {
        bitField0_ = (bitField0_ & ~0x00000020);
        refPos_ = null;
        if (refPosBuilder_ != null) {
          refPosBuilder_.dispose();
          refPosBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.Vector ref_pos = 6;</code>
       */
      public VectorOuterClass.Vector.Builder getRefPosBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getRefPosFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector ref_pos = 6;</code>
       */
      public VectorOuterClass.VectorOrBuilder getRefPosOrBuilder() {
        if (refPosBuilder_ != null) {
          return refPosBuilder_.getMessageOrBuilder();
        } else {
          return refPos_ == null ?
              VectorOuterClass.Vector.getDefaultInstance() : refPos_;
        }
      }
      /**
       * <code>.Vector ref_pos = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder>
          getRefPosFieldBuilder() {
        if (refPosBuilder_ == null) {
          refPosBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder>(
                  getRefPos(),
                  getParentForChildren(),
                  isClean());
          refPos_ = null;
        }
        return refPosBuilder_;
      }

      private int refId_ ;
      /**
       * <code>uint32 ref_id = 7;</code>
       * @return The refId.
       */
      @Override
      public int getRefId() {
        return refId_;
      }
      /**
       * <code>uint32 ref_id = 7;</code>
       * @param value The refId to set.
       * @return This builder for chaining.
       */
      public Builder setRefId(int value) {

        refId_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 ref_id = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearRefId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        refId_ = 0;
        onChanged();
        return this;
      }

      private int sceneTime_ ;
      /**
       * <code>uint32 scene_time = 8;</code>
       * @return The sceneTime.
       */
      @Override
      public int getSceneTime() {
        return sceneTime_;
      }
      /**
       * <code>uint32 scene_time = 8;</code>
       * @param value The sceneTime to set.
       * @return This builder for chaining.
       */
      public Builder setSceneTime(int value) {

        sceneTime_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 scene_time = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearSceneTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        sceneTime_ = 0;
        onChanged();
        return this;
      }

      private long intervalVelocity_ ;
      /**
       * <code>uint64 interval_velocity = 9;</code>
       * @return The intervalVelocity.
       */
      @Override
      public long getIntervalVelocity() {
        return intervalVelocity_;
      }
      /**
       * <code>uint64 interval_velocity = 9;</code>
       * @param value The intervalVelocity to set.
       * @return This builder for chaining.
       */
      public Builder setIntervalVelocity(long value) {

        intervalVelocity_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 interval_velocity = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearIntervalVelocity() {
        bitField0_ = (bitField0_ & ~0x00000100);
        intervalVelocity_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MotionInfo)
    }

    // @@protoc_insertion_point(class_scope:MotionInfo)
    private static final MotionInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MotionInfo();
    }

    public static MotionInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MotionInfo>
        PARSER = new com.google.protobuf.AbstractParser<MotionInfo>() {
      @Override
      public MotionInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MotionInfo> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MotionInfo> getParserForType() {
      return PARSER;
    }

    @Override
    public MotionInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MotionInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MotionInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\020MotionInfo.proto\032\014Vector.proto\032\021Motion" +
      "State.proto\"\337\001\n\nMotionInfo\022\024\n\003pos\030\001 \001(\0132" +
      "\007.Vector\022\024\n\003rot\030\002 \001(\0132\007.Vector\022\026\n\005speed\030" +
      "\003 \001(\0132\007.Vector\022\033\n\005state\030\004 \001(\0162\014.MotionSt" +
      "ate\022\027\n\006params\030\005 \003(\0132\007.Vector\022\030\n\007ref_pos\030" +
      "\006 \001(\0132\007.Vector\022\016\n\006ref_id\030\007 \001(\r\022\022\n\nscene_" +
      "time\030\010 \001(\r\022\031\n\021interval_velocity\030\t \001(\004B\032\n" +
      "\030io.irminsul.common.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          VectorOuterClass.getDescriptor(),
          MotionStateOuterClass.getDescriptor(),
        });
    internal_static_MotionInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_MotionInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MotionInfo_descriptor,
        new String[] { "Pos", "Rot", "Speed", "State", "Params", "RefPos", "RefId", "SceneTime", "IntervalVelocity", });
    descriptor.resolveAllFeaturesImmutable();
    VectorOuterClass.getDescriptor();
    MotionStateOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
