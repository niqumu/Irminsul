// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: BreakoutSpawnPoint.proto
// Protobuf Java Version: 4.27.2

package io.irminsul.common.proto;

public final class BreakoutSpawnPointOuterClass {
  private BreakoutSpawnPointOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      BreakoutSpawnPointOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BreakoutSpawnPointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BreakoutSpawnPoint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>uint32 brick_suite_id = 2;</code>
     * @return The brickSuiteId.
     */
    int getBrickSuiteId();

    /**
     * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
     */
    java.util.List<BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject>
        getSpawnedBrickListList();
    /**
     * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
     */
    BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject getSpawnedBrickList(int index);
    /**
     * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
     */
    int getSpawnedBrickListCount();
    /**
     * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
     */
    java.util.List<? extends BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObjectOrBuilder>
        getSpawnedBrickListOrBuilderList();
    /**
     * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
     */
    BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObjectOrBuilder getSpawnedBrickListOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Obf: COLAAGNOBFN
   * </pre>
   *
   * Protobuf type {@code BreakoutSpawnPoint}
   */
  public static final class BreakoutSpawnPoint extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:BreakoutSpawnPoint)
      BreakoutSpawnPointOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 2,
        /* suffix= */ "",
        BreakoutSpawnPoint.class.getName());
    }
    // Use BreakoutSpawnPoint.newBuilder() to construct.
    private BreakoutSpawnPoint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BreakoutSpawnPoint() {
      spawnedBrickList_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return BreakoutSpawnPointOuterClass.internal_static_BreakoutSpawnPoint_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return BreakoutSpawnPointOuterClass.internal_static_BreakoutSpawnPoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              BreakoutSpawnPoint.class, Builder.class);
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_ = 0;
    /**
     * <code>uint32 id = 1;</code>
     * @return The id.
     */
    @Override
    public int getId() {
      return id_;
    }

    public static final int BRICK_SUITE_ID_FIELD_NUMBER = 2;
    private int brickSuiteId_ = 0;
    /**
     * <code>uint32 brick_suite_id = 2;</code>
     * @return The brickSuiteId.
     */
    @Override
    public int getBrickSuiteId() {
      return brickSuiteId_;
    }

    public static final int SPAWNED_BRICK_LIST_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject> spawnedBrickList_;
    /**
     * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
     */
    @Override
    public java.util.List<BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject> getSpawnedBrickListList() {
      return spawnedBrickList_;
    }
    /**
     * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
     */
    @Override
    public java.util.List<? extends BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObjectOrBuilder>
        getSpawnedBrickListOrBuilderList() {
      return spawnedBrickList_;
    }
    /**
     * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
     */
    @Override
    public int getSpawnedBrickListCount() {
      return spawnedBrickList_.size();
    }
    /**
     * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
     */
    @Override
    public BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject getSpawnedBrickList(int index) {
      return spawnedBrickList_.get(index);
    }
    /**
     * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
     */
    @Override
    public BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObjectOrBuilder getSpawnedBrickListOrBuilder(
        int index) {
      return spawnedBrickList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (id_ != 0) {
        output.writeUInt32(1, id_);
      }
      if (brickSuiteId_ != 0) {
        output.writeUInt32(2, brickSuiteId_);
      }
      for (int i = 0; i < spawnedBrickList_.size(); i++) {
        output.writeMessage(3, spawnedBrickList_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (id_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (brickSuiteId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, brickSuiteId_);
      }
      for (int i = 0; i < spawnedBrickList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, spawnedBrickList_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof BreakoutSpawnPoint)) {
        return super.equals(obj);
      }
      BreakoutSpawnPoint other = (BreakoutSpawnPoint) obj;

      if (getId()
          != other.getId()) return false;
      if (getBrickSuiteId()
          != other.getBrickSuiteId()) return false;
      if (!getSpawnedBrickListList()
          .equals(other.getSpawnedBrickListList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId();
      hash = (37 * hash) + BRICK_SUITE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getBrickSuiteId();
      if (getSpawnedBrickListCount() > 0) {
        hash = (37 * hash) + SPAWNED_BRICK_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getSpawnedBrickListList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static BreakoutSpawnPoint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BreakoutSpawnPoint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BreakoutSpawnPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BreakoutSpawnPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BreakoutSpawnPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BreakoutSpawnPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BreakoutSpawnPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static BreakoutSpawnPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static BreakoutSpawnPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static BreakoutSpawnPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static BreakoutSpawnPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static BreakoutSpawnPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(BreakoutSpawnPoint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Obf: COLAAGNOBFN
     * </pre>
     *
     * Protobuf type {@code BreakoutSpawnPoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BreakoutSpawnPoint)
        BreakoutSpawnPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return BreakoutSpawnPointOuterClass.internal_static_BreakoutSpawnPoint_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return BreakoutSpawnPointOuterClass.internal_static_BreakoutSpawnPoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                BreakoutSpawnPoint.class, Builder.class);
      }

      // Construct using io.irminsul.common.proto.BreakoutSpawnPointOuterClass.BreakoutSpawnPoint.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0;
        brickSuiteId_ = 0;
        if (spawnedBrickListBuilder_ == null) {
          spawnedBrickList_ = java.util.Collections.emptyList();
        } else {
          spawnedBrickList_ = null;
          spawnedBrickListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return BreakoutSpawnPointOuterClass.internal_static_BreakoutSpawnPoint_descriptor;
      }

      @Override
      public BreakoutSpawnPoint getDefaultInstanceForType() {
        return BreakoutSpawnPoint.getDefaultInstance();
      }

      @Override
      public BreakoutSpawnPoint build() {
        BreakoutSpawnPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public BreakoutSpawnPoint buildPartial() {
        BreakoutSpawnPoint result = new BreakoutSpawnPoint(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(BreakoutSpawnPoint result) {
        if (spawnedBrickListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            spawnedBrickList_ = java.util.Collections.unmodifiableList(spawnedBrickList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.spawnedBrickList_ = spawnedBrickList_;
        } else {
          result.spawnedBrickList_ = spawnedBrickListBuilder_.build();
        }
      }

      private void buildPartial0(BreakoutSpawnPoint result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.brickSuiteId_ = brickSuiteId_;
        }
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BreakoutSpawnPoint) {
          return mergeFrom((BreakoutSpawnPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(BreakoutSpawnPoint other) {
        if (other == BreakoutSpawnPoint.getDefaultInstance()) return this;
        if (other.getId() != 0) {
          setId(other.getId());
        }
        if (other.getBrickSuiteId() != 0) {
          setBrickSuiteId(other.getBrickSuiteId());
        }
        if (spawnedBrickListBuilder_ == null) {
          if (!other.spawnedBrickList_.isEmpty()) {
            if (spawnedBrickList_.isEmpty()) {
              spawnedBrickList_ = other.spawnedBrickList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSpawnedBrickListIsMutable();
              spawnedBrickList_.addAll(other.spawnedBrickList_);
            }
            onChanged();
          }
        } else {
          if (!other.spawnedBrickList_.isEmpty()) {
            if (spawnedBrickListBuilder_.isEmpty()) {
              spawnedBrickListBuilder_.dispose();
              spawnedBrickListBuilder_ = null;
              spawnedBrickList_ = other.spawnedBrickList_;
              bitField0_ = (bitField0_ & ~0x00000004);
              spawnedBrickListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSpawnedBrickListFieldBuilder() : null;
            } else {
              spawnedBrickListBuilder_.addAllMessages(other.spawnedBrickList_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                brickSuiteId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject m =
                    input.readMessage(
                        BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject.parser(),
                        extensionRegistry);
                if (spawnedBrickListBuilder_ == null) {
                  ensureSpawnedBrickListIsMutable();
                  spawnedBrickList_.add(m);
                } else {
                  spawnedBrickListBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>uint32 id = 1;</code>
       * @return The id.
       */
      @Override
      public int getId() {
        return id_;
      }
      /**
       * <code>uint32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {

        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private int brickSuiteId_ ;
      /**
       * <code>uint32 brick_suite_id = 2;</code>
       * @return The brickSuiteId.
       */
      @Override
      public int getBrickSuiteId() {
        return brickSuiteId_;
      }
      /**
       * <code>uint32 brick_suite_id = 2;</code>
       * @param value The brickSuiteId to set.
       * @return This builder for chaining.
       */
      public Builder setBrickSuiteId(int value) {

        brickSuiteId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 brick_suite_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBrickSuiteId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        brickSuiteId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject> spawnedBrickList_ =
        java.util.Collections.emptyList();
      private void ensureSpawnedBrickListIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          spawnedBrickList_ = new java.util.ArrayList<BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject>(spawnedBrickList_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject, BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject.Builder, BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObjectOrBuilder> spawnedBrickListBuilder_;

      /**
       * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
       */
      public java.util.List<BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject> getSpawnedBrickListList() {
        if (spawnedBrickListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(spawnedBrickList_);
        } else {
          return spawnedBrickListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
       */
      public int getSpawnedBrickListCount() {
        if (spawnedBrickListBuilder_ == null) {
          return spawnedBrickList_.size();
        } else {
          return spawnedBrickListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
       */
      public BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject getSpawnedBrickList(int index) {
        if (spawnedBrickListBuilder_ == null) {
          return spawnedBrickList_.get(index);
        } else {
          return spawnedBrickListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
       */
      public Builder setSpawnedBrickList(
          int index, BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject value) {
        if (spawnedBrickListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpawnedBrickListIsMutable();
          spawnedBrickList_.set(index, value);
          onChanged();
        } else {
          spawnedBrickListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
       */
      public Builder setSpawnedBrickList(
          int index, BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject.Builder builderForValue) {
        if (spawnedBrickListBuilder_ == null) {
          ensureSpawnedBrickListIsMutable();
          spawnedBrickList_.set(index, builderForValue.build());
          onChanged();
        } else {
          spawnedBrickListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
       */
      public Builder addSpawnedBrickList(BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject value) {
        if (spawnedBrickListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpawnedBrickListIsMutable();
          spawnedBrickList_.add(value);
          onChanged();
        } else {
          spawnedBrickListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
       */
      public Builder addSpawnedBrickList(
          int index, BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject value) {
        if (spawnedBrickListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSpawnedBrickListIsMutable();
          spawnedBrickList_.add(index, value);
          onChanged();
        } else {
          spawnedBrickListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
       */
      public Builder addSpawnedBrickList(
          BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject.Builder builderForValue) {
        if (spawnedBrickListBuilder_ == null) {
          ensureSpawnedBrickListIsMutable();
          spawnedBrickList_.add(builderForValue.build());
          onChanged();
        } else {
          spawnedBrickListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
       */
      public Builder addSpawnedBrickList(
          int index, BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject.Builder builderForValue) {
        if (spawnedBrickListBuilder_ == null) {
          ensureSpawnedBrickListIsMutable();
          spawnedBrickList_.add(index, builderForValue.build());
          onChanged();
        } else {
          spawnedBrickListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
       */
      public Builder addAllSpawnedBrickList(
          Iterable<? extends BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject> values) {
        if (spawnedBrickListBuilder_ == null) {
          ensureSpawnedBrickListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, spawnedBrickList_);
          onChanged();
        } else {
          spawnedBrickListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
       */
      public Builder clearSpawnedBrickList() {
        if (spawnedBrickListBuilder_ == null) {
          spawnedBrickList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          spawnedBrickListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
       */
      public Builder removeSpawnedBrickList(int index) {
        if (spawnedBrickListBuilder_ == null) {
          ensureSpawnedBrickListIsMutable();
          spawnedBrickList_.remove(index);
          onChanged();
        } else {
          spawnedBrickListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
       */
      public BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject.Builder getSpawnedBrickListBuilder(
          int index) {
        return getSpawnedBrickListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
       */
      public BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObjectOrBuilder getSpawnedBrickListOrBuilder(
          int index) {
        if (spawnedBrickListBuilder_ == null) {
          return spawnedBrickList_.get(index);  } else {
          return spawnedBrickListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
       */
      public java.util.List<? extends BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObjectOrBuilder>
           getSpawnedBrickListOrBuilderList() {
        if (spawnedBrickListBuilder_ != null) {
          return spawnedBrickListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(spawnedBrickList_);
        }
      }
      /**
       * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
       */
      public BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject.Builder addSpawnedBrickListBuilder() {
        return getSpawnedBrickListFieldBuilder().addBuilder(
            BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject.getDefaultInstance());
      }
      /**
       * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
       */
      public BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject.Builder addSpawnedBrickListBuilder(
          int index) {
        return getSpawnedBrickListFieldBuilder().addBuilder(
            index, BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject.getDefaultInstance());
      }
      /**
       * <code>repeated .BreakoutPhysicalObject spawned_brick_list = 3;</code>
       */
      public java.util.List<BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject.Builder>
           getSpawnedBrickListBuilderList() {
        return getSpawnedBrickListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject, BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject.Builder, BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObjectOrBuilder>
          getSpawnedBrickListFieldBuilder() {
        if (spawnedBrickListBuilder_ == null) {
          spawnedBrickListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject, BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObject.Builder, BreakoutPhysicalObjectOuterClass.BreakoutPhysicalObjectOrBuilder>(
                  spawnedBrickList_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          spawnedBrickList_ = null;
        }
        return spawnedBrickListBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:BreakoutSpawnPoint)
    }

    // @@protoc_insertion_point(class_scope:BreakoutSpawnPoint)
    private static final BreakoutSpawnPoint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BreakoutSpawnPoint();
    }

    public static BreakoutSpawnPoint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BreakoutSpawnPoint>
        PARSER = new com.google.protobuf.AbstractParser<BreakoutSpawnPoint>() {
      @Override
      public BreakoutSpawnPoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BreakoutSpawnPoint> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<BreakoutSpawnPoint> getParserForType() {
      return PARSER;
    }

    @Override
    public BreakoutSpawnPoint getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BreakoutSpawnPoint_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_BreakoutSpawnPoint_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\030BreakoutSpawnPoint.proto\032\034BreakoutPhys" +
      "icalObject.proto\"m\n\022BreakoutSpawnPoint\022\n" +
      "\n\002id\030\001 \001(\r\022\026\n\016brick_suite_id\030\002 \001(\r\0223\n\022sp" +
      "awned_brick_list\030\003 \003(\0132\027.BreakoutPhysica" +
      "lObjectB\032\n\030io.irminsul.common.protob\006pro" +
      "to3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          BreakoutPhysicalObjectOuterClass.getDescriptor(),
        });
    internal_static_BreakoutSpawnPoint_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_BreakoutSpawnPoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_BreakoutSpawnPoint_descriptor,
        new String[] { "Id", "BrickSuiteId", "SpawnedBrickList", });
    descriptor.resolveAllFeaturesImmutable();
    BreakoutPhysicalObjectOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
