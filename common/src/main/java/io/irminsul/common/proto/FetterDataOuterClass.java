// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: FetterData.proto
// Protobuf Java Version: 4.27.2

package io.irminsul.common.proto;

public final class FetterDataOuterClass {
  private FetterDataOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      FetterDataOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FetterDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:FetterData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 fetter_id = 1;</code>
     * @return The fetterId.
     */
    int getFetterId();

    /**
     * <code>uint32 fetter_state = 2;</code>
     * @return The fetterState.
     */
    int getFetterState();

    /**
     * <code>repeated uint32 cond_index_list = 3;</code>
     * @return A list containing the condIndexList.
     */
    java.util.List<Integer> getCondIndexListList();
    /**
     * <code>repeated uint32 cond_index_list = 3;</code>
     * @return The count of condIndexList.
     */
    int getCondIndexListCount();
    /**
     * <code>repeated uint32 cond_index_list = 3;</code>
     * @param index The index of the element to return.
     * @return The condIndexList at the given index.
     */
    int getCondIndexList(int index);
  }
  /**
   * <pre>
   * Obf: JFCHMJKBMBL
   * </pre>
   *
   * Protobuf type {@code FetterData}
   */
  public static final class FetterData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:FetterData)
      FetterDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 2,
        /* suffix= */ "",
        FetterData.class.getName());
    }
    // Use FetterData.newBuilder() to construct.
    private FetterData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private FetterData() {
      condIndexList_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FetterDataOuterClass.internal_static_FetterData_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FetterDataOuterClass.internal_static_FetterData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FetterData.class, Builder.class);
    }

    public static final int FETTER_ID_FIELD_NUMBER = 1;
    private int fetterId_ = 0;
    /**
     * <code>uint32 fetter_id = 1;</code>
     * @return The fetterId.
     */
    @Override
    public int getFetterId() {
      return fetterId_;
    }

    public static final int FETTER_STATE_FIELD_NUMBER = 2;
    private int fetterState_ = 0;
    /**
     * <code>uint32 fetter_state = 2;</code>
     * @return The fetterState.
     */
    @Override
    public int getFetterState() {
      return fetterState_;
    }

    public static final int COND_INDEX_LIST_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList condIndexList_ =
        emptyIntList();
    /**
     * <code>repeated uint32 cond_index_list = 3;</code>
     * @return A list containing the condIndexList.
     */
    @Override
    public java.util.List<Integer>
        getCondIndexListList() {
      return condIndexList_;
    }
    /**
     * <code>repeated uint32 cond_index_list = 3;</code>
     * @return The count of condIndexList.
     */
    public int getCondIndexListCount() {
      return condIndexList_.size();
    }
    /**
     * <code>repeated uint32 cond_index_list = 3;</code>
     * @param index The index of the element to return.
     * @return The condIndexList at the given index.
     */
    public int getCondIndexList(int index) {
      return condIndexList_.getInt(index);
    }
    private int condIndexListMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (fetterId_ != 0) {
        output.writeUInt32(1, fetterId_);
      }
      if (fetterState_ != 0) {
        output.writeUInt32(2, fetterState_);
      }
      if (getCondIndexListList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(condIndexListMemoizedSerializedSize);
      }
      for (int i = 0; i < condIndexList_.size(); i++) {
        output.writeUInt32NoTag(condIndexList_.getInt(i));
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (fetterId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, fetterId_);
      }
      if (fetterState_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, fetterState_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < condIndexList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(condIndexList_.getInt(i));
        }
        size += dataSize;
        if (!getCondIndexListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        condIndexListMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof FetterData)) {
        return super.equals(obj);
      }
      FetterData other = (FetterData) obj;

      if (getFetterId()
          != other.getFetterId()) return false;
      if (getFetterState()
          != other.getFetterState()) return false;
      if (!getCondIndexListList()
          .equals(other.getCondIndexListList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FETTER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getFetterId();
      hash = (37 * hash) + FETTER_STATE_FIELD_NUMBER;
      hash = (53 * hash) + getFetterState();
      if (getCondIndexListCount() > 0) {
        hash = (37 * hash) + COND_INDEX_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getCondIndexListList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static FetterData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FetterData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FetterData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FetterData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FetterData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FetterData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FetterData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static FetterData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static FetterData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static FetterData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static FetterData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static FetterData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(FetterData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Obf: JFCHMJKBMBL
     * </pre>
     *
     * Protobuf type {@code FetterData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:FetterData)
        FetterDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FetterDataOuterClass.internal_static_FetterData_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FetterDataOuterClass.internal_static_FetterData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FetterData.class, Builder.class);
      }

      // Construct using io.irminsul.common.proto.FetterDataOuterClass.FetterData.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        fetterId_ = 0;
        fetterState_ = 0;
        condIndexList_ = emptyIntList();
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FetterDataOuterClass.internal_static_FetterData_descriptor;
      }

      @Override
      public FetterData getDefaultInstanceForType() {
        return FetterData.getDefaultInstance();
      }

      @Override
      public FetterData build() {
        FetterData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public FetterData buildPartial() {
        FetterData result = new FetterData(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(FetterData result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.fetterId_ = fetterId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.fetterState_ = fetterState_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          condIndexList_.makeImmutable();
          result.condIndexList_ = condIndexList_;
        }
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FetterData) {
          return mergeFrom((FetterData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FetterData other) {
        if (other == FetterData.getDefaultInstance()) return this;
        if (other.getFetterId() != 0) {
          setFetterId(other.getFetterId());
        }
        if (other.getFetterState() != 0) {
          setFetterState(other.getFetterState());
        }
        if (!other.condIndexList_.isEmpty()) {
          if (condIndexList_.isEmpty()) {
            condIndexList_ = other.condIndexList_;
            condIndexList_.makeImmutable();
            bitField0_ |= 0x00000004;
          } else {
            ensureCondIndexListIsMutable();
            condIndexList_.addAll(other.condIndexList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                fetterId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                fetterState_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                int v = input.readUInt32();
                ensureCondIndexListIsMutable();
                condIndexList_.addInt(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureCondIndexListIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  condIndexList_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int fetterId_ ;
      /**
       * <code>uint32 fetter_id = 1;</code>
       * @return The fetterId.
       */
      @Override
      public int getFetterId() {
        return fetterId_;
      }
      /**
       * <code>uint32 fetter_id = 1;</code>
       * @param value The fetterId to set.
       * @return This builder for chaining.
       */
      public Builder setFetterId(int value) {

        fetterId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 fetter_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFetterId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fetterId_ = 0;
        onChanged();
        return this;
      }

      private int fetterState_ ;
      /**
       * <code>uint32 fetter_state = 2;</code>
       * @return The fetterState.
       */
      @Override
      public int getFetterState() {
        return fetterState_;
      }
      /**
       * <code>uint32 fetter_state = 2;</code>
       * @param value The fetterState to set.
       * @return This builder for chaining.
       */
      public Builder setFetterState(int value) {

        fetterState_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 fetter_state = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFetterState() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fetterState_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList condIndexList_ = emptyIntList();
      private void ensureCondIndexListIsMutable() {
        if (!condIndexList_.isModifiable()) {
          condIndexList_ = makeMutableCopy(condIndexList_);
        }
        bitField0_ |= 0x00000004;
      }
      /**
       * <code>repeated uint32 cond_index_list = 3;</code>
       * @return A list containing the condIndexList.
       */
      public java.util.List<Integer>
          getCondIndexListList() {
        condIndexList_.makeImmutable();
        return condIndexList_;
      }
      /**
       * <code>repeated uint32 cond_index_list = 3;</code>
       * @return The count of condIndexList.
       */
      public int getCondIndexListCount() {
        return condIndexList_.size();
      }
      /**
       * <code>repeated uint32 cond_index_list = 3;</code>
       * @param index The index of the element to return.
       * @return The condIndexList at the given index.
       */
      public int getCondIndexList(int index) {
        return condIndexList_.getInt(index);
      }
      /**
       * <code>repeated uint32 cond_index_list = 3;</code>
       * @param index The index to set the value at.
       * @param value The condIndexList to set.
       * @return This builder for chaining.
       */
      public Builder setCondIndexList(
          int index, int value) {

        ensureCondIndexListIsMutable();
        condIndexList_.setInt(index, value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 cond_index_list = 3;</code>
       * @param value The condIndexList to add.
       * @return This builder for chaining.
       */
      public Builder addCondIndexList(int value) {

        ensureCondIndexListIsMutable();
        condIndexList_.addInt(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 cond_index_list = 3;</code>
       * @param values The condIndexList to add.
       * @return This builder for chaining.
       */
      public Builder addAllCondIndexList(
          Iterable<? extends Integer> values) {
        ensureCondIndexListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, condIndexList_);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 cond_index_list = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCondIndexList() {
        condIndexList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:FetterData)
    }

    // @@protoc_insertion_point(class_scope:FetterData)
    private static final FetterData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FetterData();
    }

    public static FetterData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FetterData>
        PARSER = new com.google.protobuf.AbstractParser<FetterData>() {
      @Override
      public FetterData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<FetterData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<FetterData> getParserForType() {
      return PARSER;
    }

    @Override
    public FetterData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_FetterData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FetterData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\020FetterData.proto\"N\n\nFetterData\022\021\n\tfett" +
      "er_id\030\001 \001(\r\022\024\n\014fetter_state\030\002 \001(\r\022\027\n\017con" +
      "d_index_list\030\003 \003(\rB\032\n\030io.irminsul.common" +
      ".protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_FetterData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_FetterData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_FetterData_descriptor,
        new String[] { "FetterId", "FetterState", "CondIndexList", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
