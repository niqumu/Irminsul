// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: DungeonEntryInfoReq.proto
// Protobuf Java Version: 4.27.2

package io.irminsul.common.proto;

public final class DungeonEntryInfoReqOuterClass {
  private DungeonEntryInfoReqOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      DungeonEntryInfoReqOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DungeonEntryInfoReqOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DungeonEntryInfoReq)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
     */
    java.util.List<Uint32PairOuterClass.Uint32Pair>
        getScenePointIdListList();
    /**
     * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
     */
    Uint32PairOuterClass.Uint32Pair getScenePointIdList(int index);
    /**
     * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
     */
    int getScenePointIdListCount();
    /**
     * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
     */
    java.util.List<? extends Uint32PairOuterClass.Uint32PairOrBuilder>
        getScenePointIdListOrBuilderList();
    /**
     * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
     */
    Uint32PairOuterClass.Uint32PairOrBuilder getScenePointIdListOrBuilder(
        int index);

    /**
     * <code>uint32 point_id = 11;</code>
     * @return The pointId.
     */
    int getPointId();

    /**
     * <code>uint32 scene_id = 3;</code>
     * @return The sceneId.
     */
    int getSceneId();
  }
  /**
   * <pre>
   * CmdId: 782
   * Obf: JJMKBALLDNB
   * </pre>
   *
   * Protobuf type {@code DungeonEntryInfoReq}
   */
  public static final class DungeonEntryInfoReq extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:DungeonEntryInfoReq)
      DungeonEntryInfoReqOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 2,
        /* suffix= */ "",
        DungeonEntryInfoReq.class.getName());
    }
    // Use DungeonEntryInfoReq.newBuilder() to construct.
    private DungeonEntryInfoReq(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private DungeonEntryInfoReq() {
      scenePointIdList_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return DungeonEntryInfoReqOuterClass.internal_static_DungeonEntryInfoReq_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return DungeonEntryInfoReqOuterClass.internal_static_DungeonEntryInfoReq_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DungeonEntryInfoReq.class, Builder.class);
    }

    public static final int SCENE_POINT_ID_LIST_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private java.util.List<Uint32PairOuterClass.Uint32Pair> scenePointIdList_;
    /**
     * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
     */
    @Override
    public java.util.List<Uint32PairOuterClass.Uint32Pair> getScenePointIdListList() {
      return scenePointIdList_;
    }
    /**
     * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
     */
    @Override
    public java.util.List<? extends Uint32PairOuterClass.Uint32PairOrBuilder>
        getScenePointIdListOrBuilderList() {
      return scenePointIdList_;
    }
    /**
     * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
     */
    @Override
    public int getScenePointIdListCount() {
      return scenePointIdList_.size();
    }
    /**
     * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
     */
    @Override
    public Uint32PairOuterClass.Uint32Pair getScenePointIdList(int index) {
      return scenePointIdList_.get(index);
    }
    /**
     * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
     */
    @Override
    public Uint32PairOuterClass.Uint32PairOrBuilder getScenePointIdListOrBuilder(
        int index) {
      return scenePointIdList_.get(index);
    }

    public static final int POINT_ID_FIELD_NUMBER = 11;
    private int pointId_ = 0;
    /**
     * <code>uint32 point_id = 11;</code>
     * @return The pointId.
     */
    @Override
    public int getPointId() {
      return pointId_;
    }

    public static final int SCENE_ID_FIELD_NUMBER = 3;
    private int sceneId_ = 0;
    /**
     * <code>uint32 scene_id = 3;</code>
     * @return The sceneId.
     */
    @Override
    public int getSceneId() {
      return sceneId_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sceneId_ != 0) {
        output.writeUInt32(3, sceneId_);
      }
      for (int i = 0; i < scenePointIdList_.size(); i++) {
        output.writeMessage(8, scenePointIdList_.get(i));
      }
      if (pointId_ != 0) {
        output.writeUInt32(11, pointId_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sceneId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, sceneId_);
      }
      for (int i = 0; i < scenePointIdList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, scenePointIdList_.get(i));
      }
      if (pointId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, pointId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof DungeonEntryInfoReq)) {
        return super.equals(obj);
      }
      DungeonEntryInfoReq other = (DungeonEntryInfoReq) obj;

      if (!getScenePointIdListList()
          .equals(other.getScenePointIdListList())) return false;
      if (getPointId()
          != other.getPointId()) return false;
      if (getSceneId()
          != other.getSceneId()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getScenePointIdListCount() > 0) {
        hash = (37 * hash) + SCENE_POINT_ID_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getScenePointIdListList().hashCode();
      }
      hash = (37 * hash) + POINT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getPointId();
      hash = (37 * hash) + SCENE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSceneId();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static DungeonEntryInfoReq parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DungeonEntryInfoReq parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DungeonEntryInfoReq parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DungeonEntryInfoReq parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DungeonEntryInfoReq parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DungeonEntryInfoReq parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DungeonEntryInfoReq parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static DungeonEntryInfoReq parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static DungeonEntryInfoReq parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static DungeonEntryInfoReq parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static DungeonEntryInfoReq parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static DungeonEntryInfoReq parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(DungeonEntryInfoReq prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * CmdId: 782
     * Obf: JJMKBALLDNB
     * </pre>
     *
     * Protobuf type {@code DungeonEntryInfoReq}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DungeonEntryInfoReq)
        DungeonEntryInfoReqOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return DungeonEntryInfoReqOuterClass.internal_static_DungeonEntryInfoReq_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return DungeonEntryInfoReqOuterClass.internal_static_DungeonEntryInfoReq_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DungeonEntryInfoReq.class, Builder.class);
      }

      // Construct using io.irminsul.common.proto.DungeonEntryInfoReqOuterClass.DungeonEntryInfoReq.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (scenePointIdListBuilder_ == null) {
          scenePointIdList_ = java.util.Collections.emptyList();
        } else {
          scenePointIdList_ = null;
          scenePointIdListBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        pointId_ = 0;
        sceneId_ = 0;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DungeonEntryInfoReqOuterClass.internal_static_DungeonEntryInfoReq_descriptor;
      }

      @Override
      public DungeonEntryInfoReq getDefaultInstanceForType() {
        return DungeonEntryInfoReq.getDefaultInstance();
      }

      @Override
      public DungeonEntryInfoReq build() {
        DungeonEntryInfoReq result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public DungeonEntryInfoReq buildPartial() {
        DungeonEntryInfoReq result = new DungeonEntryInfoReq(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(DungeonEntryInfoReq result) {
        if (scenePointIdListBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            scenePointIdList_ = java.util.Collections.unmodifiableList(scenePointIdList_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.scenePointIdList_ = scenePointIdList_;
        } else {
          result.scenePointIdList_ = scenePointIdListBuilder_.build();
        }
      }

      private void buildPartial0(DungeonEntryInfoReq result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.pointId_ = pointId_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.sceneId_ = sceneId_;
        }
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DungeonEntryInfoReq) {
          return mergeFrom((DungeonEntryInfoReq)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(DungeonEntryInfoReq other) {
        if (other == DungeonEntryInfoReq.getDefaultInstance()) return this;
        if (scenePointIdListBuilder_ == null) {
          if (!other.scenePointIdList_.isEmpty()) {
            if (scenePointIdList_.isEmpty()) {
              scenePointIdList_ = other.scenePointIdList_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureScenePointIdListIsMutable();
              scenePointIdList_.addAll(other.scenePointIdList_);
            }
            onChanged();
          }
        } else {
          if (!other.scenePointIdList_.isEmpty()) {
            if (scenePointIdListBuilder_.isEmpty()) {
              scenePointIdListBuilder_.dispose();
              scenePointIdListBuilder_ = null;
              scenePointIdList_ = other.scenePointIdList_;
              bitField0_ = (bitField0_ & ~0x00000001);
              scenePointIdListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getScenePointIdListFieldBuilder() : null;
            } else {
              scenePointIdListBuilder_.addAllMessages(other.scenePointIdList_);
            }
          }
        }
        if (other.getPointId() != 0) {
          setPointId(other.getPointId());
        }
        if (other.getSceneId() != 0) {
          setSceneId(other.getSceneId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 24: {
                sceneId_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 66: {
                Uint32PairOuterClass.Uint32Pair m =
                    input.readMessage(
                        Uint32PairOuterClass.Uint32Pair.parser(),
                        extensionRegistry);
                if (scenePointIdListBuilder_ == null) {
                  ensureScenePointIdListIsMutable();
                  scenePointIdList_.add(m);
                } else {
                  scenePointIdListBuilder_.addMessage(m);
                }
                break;
              } // case 66
              case 88: {
                pointId_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 88
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<Uint32PairOuterClass.Uint32Pair> scenePointIdList_ =
        java.util.Collections.emptyList();
      private void ensureScenePointIdListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          scenePointIdList_ = new java.util.ArrayList<Uint32PairOuterClass.Uint32Pair>(scenePointIdList_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          Uint32PairOuterClass.Uint32Pair, Uint32PairOuterClass.Uint32Pair.Builder, Uint32PairOuterClass.Uint32PairOrBuilder> scenePointIdListBuilder_;

      /**
       * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
       */
      public java.util.List<Uint32PairOuterClass.Uint32Pair> getScenePointIdListList() {
        if (scenePointIdListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(scenePointIdList_);
        } else {
          return scenePointIdListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
       */
      public int getScenePointIdListCount() {
        if (scenePointIdListBuilder_ == null) {
          return scenePointIdList_.size();
        } else {
          return scenePointIdListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
       */
      public Uint32PairOuterClass.Uint32Pair getScenePointIdList(int index) {
        if (scenePointIdListBuilder_ == null) {
          return scenePointIdList_.get(index);
        } else {
          return scenePointIdListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
       */
      public Builder setScenePointIdList(
          int index, Uint32PairOuterClass.Uint32Pair value) {
        if (scenePointIdListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScenePointIdListIsMutable();
          scenePointIdList_.set(index, value);
          onChanged();
        } else {
          scenePointIdListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
       */
      public Builder setScenePointIdList(
          int index, Uint32PairOuterClass.Uint32Pair.Builder builderForValue) {
        if (scenePointIdListBuilder_ == null) {
          ensureScenePointIdListIsMutable();
          scenePointIdList_.set(index, builderForValue.build());
          onChanged();
        } else {
          scenePointIdListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
       */
      public Builder addScenePointIdList(Uint32PairOuterClass.Uint32Pair value) {
        if (scenePointIdListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScenePointIdListIsMutable();
          scenePointIdList_.add(value);
          onChanged();
        } else {
          scenePointIdListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
       */
      public Builder addScenePointIdList(
          int index, Uint32PairOuterClass.Uint32Pair value) {
        if (scenePointIdListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureScenePointIdListIsMutable();
          scenePointIdList_.add(index, value);
          onChanged();
        } else {
          scenePointIdListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
       */
      public Builder addScenePointIdList(
          Uint32PairOuterClass.Uint32Pair.Builder builderForValue) {
        if (scenePointIdListBuilder_ == null) {
          ensureScenePointIdListIsMutable();
          scenePointIdList_.add(builderForValue.build());
          onChanged();
        } else {
          scenePointIdListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
       */
      public Builder addScenePointIdList(
          int index, Uint32PairOuterClass.Uint32Pair.Builder builderForValue) {
        if (scenePointIdListBuilder_ == null) {
          ensureScenePointIdListIsMutable();
          scenePointIdList_.add(index, builderForValue.build());
          onChanged();
        } else {
          scenePointIdListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
       */
      public Builder addAllScenePointIdList(
          Iterable<? extends Uint32PairOuterClass.Uint32Pair> values) {
        if (scenePointIdListBuilder_ == null) {
          ensureScenePointIdListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, scenePointIdList_);
          onChanged();
        } else {
          scenePointIdListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
       */
      public Builder clearScenePointIdList() {
        if (scenePointIdListBuilder_ == null) {
          scenePointIdList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          scenePointIdListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
       */
      public Builder removeScenePointIdList(int index) {
        if (scenePointIdListBuilder_ == null) {
          ensureScenePointIdListIsMutable();
          scenePointIdList_.remove(index);
          onChanged();
        } else {
          scenePointIdListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
       */
      public Uint32PairOuterClass.Uint32Pair.Builder getScenePointIdListBuilder(
          int index) {
        return getScenePointIdListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
       */
      public Uint32PairOuterClass.Uint32PairOrBuilder getScenePointIdListOrBuilder(
          int index) {
        if (scenePointIdListBuilder_ == null) {
          return scenePointIdList_.get(index);  } else {
          return scenePointIdListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
       */
      public java.util.List<? extends Uint32PairOuterClass.Uint32PairOrBuilder>
           getScenePointIdListOrBuilderList() {
        if (scenePointIdListBuilder_ != null) {
          return scenePointIdListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(scenePointIdList_);
        }
      }
      /**
       * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
       */
      public Uint32PairOuterClass.Uint32Pair.Builder addScenePointIdListBuilder() {
        return getScenePointIdListFieldBuilder().addBuilder(
            Uint32PairOuterClass.Uint32Pair.getDefaultInstance());
      }
      /**
       * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
       */
      public Uint32PairOuterClass.Uint32Pair.Builder addScenePointIdListBuilder(
          int index) {
        return getScenePointIdListFieldBuilder().addBuilder(
            index, Uint32PairOuterClass.Uint32Pair.getDefaultInstance());
      }
      /**
       * <code>repeated .Uint32Pair scene_point_id_list = 8;</code>
       */
      public java.util.List<Uint32PairOuterClass.Uint32Pair.Builder>
           getScenePointIdListBuilderList() {
        return getScenePointIdListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Uint32PairOuterClass.Uint32Pair, Uint32PairOuterClass.Uint32Pair.Builder, Uint32PairOuterClass.Uint32PairOrBuilder>
          getScenePointIdListFieldBuilder() {
        if (scenePointIdListBuilder_ == null) {
          scenePointIdListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Uint32PairOuterClass.Uint32Pair, Uint32PairOuterClass.Uint32Pair.Builder, Uint32PairOuterClass.Uint32PairOrBuilder>(
                  scenePointIdList_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          scenePointIdList_ = null;
        }
        return scenePointIdListBuilder_;
      }

      private int pointId_ ;
      /**
       * <code>uint32 point_id = 11;</code>
       * @return The pointId.
       */
      @Override
      public int getPointId() {
        return pointId_;
      }
      /**
       * <code>uint32 point_id = 11;</code>
       * @param value The pointId to set.
       * @return This builder for chaining.
       */
      public Builder setPointId(int value) {

        pointId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 point_id = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearPointId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pointId_ = 0;
        onChanged();
        return this;
      }

      private int sceneId_ ;
      /**
       * <code>uint32 scene_id = 3;</code>
       * @return The sceneId.
       */
      @Override
      public int getSceneId() {
        return sceneId_;
      }
      /**
       * <code>uint32 scene_id = 3;</code>
       * @param value The sceneId to set.
       * @return This builder for chaining.
       */
      public Builder setSceneId(int value) {

        sceneId_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 scene_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSceneId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sceneId_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DungeonEntryInfoReq)
    }

    // @@protoc_insertion_point(class_scope:DungeonEntryInfoReq)
    private static final DungeonEntryInfoReq DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DungeonEntryInfoReq();
    }

    public static DungeonEntryInfoReq getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DungeonEntryInfoReq>
        PARSER = new com.google.protobuf.AbstractParser<DungeonEntryInfoReq>() {
      @Override
      public DungeonEntryInfoReq parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DungeonEntryInfoReq> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<DungeonEntryInfoReq> getParserForType() {
      return PARSER;
    }

    @Override
    public DungeonEntryInfoReq getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DungeonEntryInfoReq_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DungeonEntryInfoReq_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\031DungeonEntryInfoReq.proto\032\020Uint32Pair." +
      "proto\"c\n\023DungeonEntryInfoReq\022(\n\023scene_po" +
      "int_id_list\030\010 \003(\0132\013.Uint32Pair\022\020\n\010point_" +
      "id\030\013 \001(\r\022\020\n\010scene_id\030\003 \001(\rB\032\n\030io.irminsu" +
      "l.common.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          Uint32PairOuterClass.getDescriptor(),
        });
    internal_static_DungeonEntryInfoReq_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_DungeonEntryInfoReq_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_DungeonEntryInfoReq_descriptor,
        new String[] { "ScenePointIdList", "PointId", "SceneId", });
    descriptor.resolveAllFeaturesImmutable();
    Uint32PairOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
