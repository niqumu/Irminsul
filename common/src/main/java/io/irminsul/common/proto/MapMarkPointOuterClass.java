// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: MapMarkPoint.proto
// Protobuf Java Version: 4.27.2

package io.irminsul.common.proto;

public final class MapMarkPointOuterClass {
  private MapMarkPointOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 2,
      /* suffix= */ "",
      MapMarkPointOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MapMarkPointOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MapMarkPoint)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 scene_id = 1;</code>
     * @return The sceneId.
     */
    int getSceneId();

    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    String getName();
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>.Vector pos = 3;</code>
     * @return Whether the pos field is set.
     */
    boolean hasPos();
    /**
     * <code>.Vector pos = 3;</code>
     * @return The pos.
     */
    VectorOuterClass.Vector getPos();
    /**
     * <code>.Vector pos = 3;</code>
     */
    VectorOuterClass.VectorOrBuilder getPosOrBuilder();

    /**
     * <code>.MapMarkPointType point_type = 4;</code>
     * @return The enum numeric value on the wire for pointType.
     */
    int getPointTypeValue();
    /**
     * <code>.MapMarkPointType point_type = 4;</code>
     * @return The pointType.
     */
    MapMarkPointTypeOuterClass.MapMarkPointType getPointType();

    /**
     * <code>uint32 monster_id = 5;</code>
     * @return The monsterId.
     */
    int getMonsterId();

    /**
     * <code>.MapMarkFromType from_type = 6;</code>
     * @return The enum numeric value on the wire for fromType.
     */
    int getFromTypeValue();
    /**
     * <code>.MapMarkFromType from_type = 6;</code>
     * @return The fromType.
     */
    MapMarkFromTypeOuterClass.MapMarkFromType getFromType();

    /**
     * <code>uint32 quest_id = 7;</code>
     * @return The questId.
     */
    int getQuestId();

    /**
     * <code>uint32 HJMMAOMEHOL = 8;</code>
     * @return The hJMMAOMEHOL.
     */
    int getHJMMAOMEHOL();
  }
  /**
   * <pre>
   * Obf: HJDOENNHBIL
   * </pre>
   *
   * Protobuf type {@code MapMarkPoint}
   */
  public static final class MapMarkPoint extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:MapMarkPoint)
      MapMarkPointOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 2,
        /* suffix= */ "",
        MapMarkPoint.class.getName());
    }
    // Use MapMarkPoint.newBuilder() to construct.
    private MapMarkPoint(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private MapMarkPoint() {
      name_ = "";
      pointType_ = 0;
      fromType_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return MapMarkPointOuterClass.internal_static_MapMarkPoint_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return MapMarkPointOuterClass.internal_static_MapMarkPoint_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              MapMarkPoint.class, Builder.class);
    }

    private int bitField0_;
    public static final int SCENE_ID_FIELD_NUMBER = 1;
    private int sceneId_ = 0;
    /**
     * <code>uint32 scene_id = 1;</code>
     * @return The sceneId.
     */
    @Override
    public int getSceneId() {
      return sceneId_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile Object name_ = "";
    /**
     * <code>string name = 2;</code>
     * @return The name.
     */
    @Override
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 2;</code>
     * @return The bytes for name.
     */
    @Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POS_FIELD_NUMBER = 3;
    private VectorOuterClass.Vector pos_;
    /**
     * <code>.Vector pos = 3;</code>
     * @return Whether the pos field is set.
     */
    @Override
    public boolean hasPos() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>.Vector pos = 3;</code>
     * @return The pos.
     */
    @Override
    public VectorOuterClass.Vector getPos() {
      return pos_ == null ? VectorOuterClass.Vector.getDefaultInstance() : pos_;
    }
    /**
     * <code>.Vector pos = 3;</code>
     */
    @Override
    public VectorOuterClass.VectorOrBuilder getPosOrBuilder() {
      return pos_ == null ? VectorOuterClass.Vector.getDefaultInstance() : pos_;
    }

    public static final int POINT_TYPE_FIELD_NUMBER = 4;
    private int pointType_ = 0;
    /**
     * <code>.MapMarkPointType point_type = 4;</code>
     * @return The enum numeric value on the wire for pointType.
     */
    @Override public int getPointTypeValue() {
      return pointType_;
    }
    /**
     * <code>.MapMarkPointType point_type = 4;</code>
     * @return The pointType.
     */
    @Override public MapMarkPointTypeOuterClass.MapMarkPointType getPointType() {
      MapMarkPointTypeOuterClass.MapMarkPointType result = MapMarkPointTypeOuterClass.MapMarkPointType.forNumber(pointType_);
      return result == null ? MapMarkPointTypeOuterClass.MapMarkPointType.UNRECOGNIZED : result;
    }

    public static final int MONSTER_ID_FIELD_NUMBER = 5;
    private int monsterId_ = 0;
    /**
     * <code>uint32 monster_id = 5;</code>
     * @return The monsterId.
     */
    @Override
    public int getMonsterId() {
      return monsterId_;
    }

    public static final int FROM_TYPE_FIELD_NUMBER = 6;
    private int fromType_ = 0;
    /**
     * <code>.MapMarkFromType from_type = 6;</code>
     * @return The enum numeric value on the wire for fromType.
     */
    @Override public int getFromTypeValue() {
      return fromType_;
    }
    /**
     * <code>.MapMarkFromType from_type = 6;</code>
     * @return The fromType.
     */
    @Override public MapMarkFromTypeOuterClass.MapMarkFromType getFromType() {
      MapMarkFromTypeOuterClass.MapMarkFromType result = MapMarkFromTypeOuterClass.MapMarkFromType.forNumber(fromType_);
      return result == null ? MapMarkFromTypeOuterClass.MapMarkFromType.UNRECOGNIZED : result;
    }

    public static final int QUEST_ID_FIELD_NUMBER = 7;
    private int questId_ = 0;
    /**
     * <code>uint32 quest_id = 7;</code>
     * @return The questId.
     */
    @Override
    public int getQuestId() {
      return questId_;
    }

    public static final int HJMMAOMEHOL_FIELD_NUMBER = 8;
    private int hJMMAOMEHOL_ = 0;
    /**
     * <code>uint32 HJMMAOMEHOL = 8;</code>
     * @return The hJMMAOMEHOL.
     */
    @Override
    public int getHJMMAOMEHOL() {
      return hJMMAOMEHOL_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (sceneId_ != 0) {
        output.writeUInt32(1, sceneId_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, name_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(3, getPos());
      }
      if (pointType_ != MapMarkPointTypeOuterClass.MapMarkPointType.MAP_MARK_POINT_TYPE_NPC.getNumber()) {
        output.writeEnum(4, pointType_);
      }
      if (monsterId_ != 0) {
        output.writeUInt32(5, monsterId_);
      }
      if (fromType_ != MapMarkFromTypeOuterClass.MapMarkFromType.MAP_MARK_FROM_TYPE_NONE.getNumber()) {
        output.writeEnum(6, fromType_);
      }
      if (questId_ != 0) {
        output.writeUInt32(7, questId_);
      }
      if (hJMMAOMEHOL_ != 0) {
        output.writeUInt32(8, hJMMAOMEHOL_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (sceneId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, sceneId_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, name_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getPos());
      }
      if (pointType_ != MapMarkPointTypeOuterClass.MapMarkPointType.MAP_MARK_POINT_TYPE_NPC.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, pointType_);
      }
      if (monsterId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, monsterId_);
      }
      if (fromType_ != MapMarkFromTypeOuterClass.MapMarkFromType.MAP_MARK_FROM_TYPE_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, fromType_);
      }
      if (questId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, questId_);
      }
      if (hJMMAOMEHOL_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, hJMMAOMEHOL_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof MapMarkPoint)) {
        return super.equals(obj);
      }
      MapMarkPoint other = (MapMarkPoint) obj;

      if (getSceneId()
          != other.getSceneId()) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (hasPos() != other.hasPos()) return false;
      if (hasPos()) {
        if (!getPos()
            .equals(other.getPos())) return false;
      }
      if (pointType_ != other.pointType_) return false;
      if (getMonsterId()
          != other.getMonsterId()) return false;
      if (fromType_ != other.fromType_) return false;
      if (getQuestId()
          != other.getQuestId()) return false;
      if (getHJMMAOMEHOL()
          != other.getHJMMAOMEHOL()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SCENE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSceneId();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasPos()) {
        hash = (37 * hash) + POS_FIELD_NUMBER;
        hash = (53 * hash) + getPos().hashCode();
      }
      hash = (37 * hash) + POINT_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + pointType_;
      hash = (37 * hash) + MONSTER_ID_FIELD_NUMBER;
      hash = (53 * hash) + getMonsterId();
      hash = (37 * hash) + FROM_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + fromType_;
      hash = (37 * hash) + QUEST_ID_FIELD_NUMBER;
      hash = (53 * hash) + getQuestId();
      hash = (37 * hash) + HJMMAOMEHOL_FIELD_NUMBER;
      hash = (53 * hash) + getHJMMAOMEHOL();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static MapMarkPoint parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MapMarkPoint parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MapMarkPoint parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MapMarkPoint parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MapMarkPoint parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static MapMarkPoint parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static MapMarkPoint parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static MapMarkPoint parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static MapMarkPoint parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static MapMarkPoint parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static MapMarkPoint parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static MapMarkPoint parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(MapMarkPoint prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Obf: HJDOENNHBIL
     * </pre>
     *
     * Protobuf type {@code MapMarkPoint}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MapMarkPoint)
        MapMarkPointOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return MapMarkPointOuterClass.internal_static_MapMarkPoint_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return MapMarkPointOuterClass.internal_static_MapMarkPoint_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                MapMarkPoint.class, Builder.class);
      }

      // Construct using io.irminsul.common.proto.MapMarkPointOuterClass.MapMarkPoint.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getPosFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        sceneId_ = 0;
        name_ = "";
        pos_ = null;
        if (posBuilder_ != null) {
          posBuilder_.dispose();
          posBuilder_ = null;
        }
        pointType_ = 0;
        monsterId_ = 0;
        fromType_ = 0;
        questId_ = 0;
        hJMMAOMEHOL_ = 0;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return MapMarkPointOuterClass.internal_static_MapMarkPoint_descriptor;
      }

      @Override
      public MapMarkPoint getDefaultInstanceForType() {
        return MapMarkPoint.getDefaultInstance();
      }

      @Override
      public MapMarkPoint build() {
        MapMarkPoint result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public MapMarkPoint buildPartial() {
        MapMarkPoint result = new MapMarkPoint(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(MapMarkPoint result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.sceneId_ = sceneId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.name_ = name_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.pos_ = posBuilder_ == null
              ? pos_
              : posBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.pointType_ = pointType_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.monsterId_ = monsterId_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.fromType_ = fromType_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.questId_ = questId_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.hJMMAOMEHOL_ = hJMMAOMEHOL_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof MapMarkPoint) {
          return mergeFrom((MapMarkPoint)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(MapMarkPoint other) {
        if (other == MapMarkPoint.getDefaultInstance()) return this;
        if (other.getSceneId() != 0) {
          setSceneId(other.getSceneId());
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasPos()) {
          mergePos(other.getPos());
        }
        if (other.pointType_ != 0) {
          setPointTypeValue(other.getPointTypeValue());
        }
        if (other.getMonsterId() != 0) {
          setMonsterId(other.getMonsterId());
        }
        if (other.fromType_ != 0) {
          setFromTypeValue(other.getFromTypeValue());
        }
        if (other.getQuestId() != 0) {
          setQuestId(other.getQuestId());
        }
        if (other.getHJMMAOMEHOL() != 0) {
          setHJMMAOMEHOL(other.getHJMMAOMEHOL());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                sceneId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getPosFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                pointType_ = input.readEnum();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                monsterId_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                fromType_ = input.readEnum();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                questId_ = input.readUInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                hJMMAOMEHOL_ = input.readUInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int sceneId_ ;
      /**
       * <code>uint32 scene_id = 1;</code>
       * @return The sceneId.
       */
      @Override
      public int getSceneId() {
        return sceneId_;
      }
      /**
       * <code>uint32 scene_id = 1;</code>
       * @param value The sceneId to set.
       * @return This builder for chaining.
       */
      public Builder setSceneId(int value) {

        sceneId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 scene_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSceneId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sceneId_ = 0;
        onChanged();
        return this;
      }

      private Object name_ = "";
      /**
       * <code>string name = 2;</code>
       * @return The name.
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private VectorOuterClass.Vector pos_;
      private com.google.protobuf.SingleFieldBuilder<
          VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder> posBuilder_;
      /**
       * <code>.Vector pos = 3;</code>
       * @return Whether the pos field is set.
       */
      public boolean hasPos() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>.Vector pos = 3;</code>
       * @return The pos.
       */
      public VectorOuterClass.Vector getPos() {
        if (posBuilder_ == null) {
          return pos_ == null ? VectorOuterClass.Vector.getDefaultInstance() : pos_;
        } else {
          return posBuilder_.getMessage();
        }
      }
      /**
       * <code>.Vector pos = 3;</code>
       */
      public Builder setPos(VectorOuterClass.Vector value) {
        if (posBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pos_ = value;
        } else {
          posBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.Vector pos = 3;</code>
       */
      public Builder setPos(
          VectorOuterClass.Vector.Builder builderForValue) {
        if (posBuilder_ == null) {
          pos_ = builderForValue.build();
        } else {
          posBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>.Vector pos = 3;</code>
       */
      public Builder mergePos(VectorOuterClass.Vector value) {
        if (posBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            pos_ != null &&
            pos_ != VectorOuterClass.Vector.getDefaultInstance()) {
            getPosBuilder().mergeFrom(value);
          } else {
            pos_ = value;
          }
        } else {
          posBuilder_.mergeFrom(value);
        }
        if (pos_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <code>.Vector pos = 3;</code>
       */
      public Builder clearPos() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pos_ = null;
        if (posBuilder_ != null) {
          posBuilder_.dispose();
          posBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>.Vector pos = 3;</code>
       */
      public VectorOuterClass.Vector.Builder getPosBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getPosFieldBuilder().getBuilder();
      }
      /**
       * <code>.Vector pos = 3;</code>
       */
      public VectorOuterClass.VectorOrBuilder getPosOrBuilder() {
        if (posBuilder_ != null) {
          return posBuilder_.getMessageOrBuilder();
        } else {
          return pos_ == null ?
              VectorOuterClass.Vector.getDefaultInstance() : pos_;
        }
      }
      /**
       * <code>.Vector pos = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder>
          getPosFieldBuilder() {
        if (posBuilder_ == null) {
          posBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              VectorOuterClass.Vector, VectorOuterClass.Vector.Builder, VectorOuterClass.VectorOrBuilder>(
                  getPos(),
                  getParentForChildren(),
                  isClean());
          pos_ = null;
        }
        return posBuilder_;
      }

      private int pointType_ = 0;
      /**
       * <code>.MapMarkPointType point_type = 4;</code>
       * @return The enum numeric value on the wire for pointType.
       */
      @Override public int getPointTypeValue() {
        return pointType_;
      }
      /**
       * <code>.MapMarkPointType point_type = 4;</code>
       * @param value The enum numeric value on the wire for pointType to set.
       * @return This builder for chaining.
       */
      public Builder setPointTypeValue(int value) {
        pointType_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>.MapMarkPointType point_type = 4;</code>
       * @return The pointType.
       */
      @Override
      public MapMarkPointTypeOuterClass.MapMarkPointType getPointType() {
        MapMarkPointTypeOuterClass.MapMarkPointType result = MapMarkPointTypeOuterClass.MapMarkPointType.forNumber(pointType_);
        return result == null ? MapMarkPointTypeOuterClass.MapMarkPointType.UNRECOGNIZED : result;
      }
      /**
       * <code>.MapMarkPointType point_type = 4;</code>
       * @param value The pointType to set.
       * @return This builder for chaining.
       */
      public Builder setPointType(MapMarkPointTypeOuterClass.MapMarkPointType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        pointType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.MapMarkPointType point_type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPointType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        pointType_ = 0;
        onChanged();
        return this;
      }

      private int monsterId_ ;
      /**
       * <code>uint32 monster_id = 5;</code>
       * @return The monsterId.
       */
      @Override
      public int getMonsterId() {
        return monsterId_;
      }
      /**
       * <code>uint32 monster_id = 5;</code>
       * @param value The monsterId to set.
       * @return This builder for chaining.
       */
      public Builder setMonsterId(int value) {

        monsterId_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 monster_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMonsterId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        monsterId_ = 0;
        onChanged();
        return this;
      }

      private int fromType_ = 0;
      /**
       * <code>.MapMarkFromType from_type = 6;</code>
       * @return The enum numeric value on the wire for fromType.
       */
      @Override public int getFromTypeValue() {
        return fromType_;
      }
      /**
       * <code>.MapMarkFromType from_type = 6;</code>
       * @param value The enum numeric value on the wire for fromType to set.
       * @return This builder for chaining.
       */
      public Builder setFromTypeValue(int value) {
        fromType_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>.MapMarkFromType from_type = 6;</code>
       * @return The fromType.
       */
      @Override
      public MapMarkFromTypeOuterClass.MapMarkFromType getFromType() {
        MapMarkFromTypeOuterClass.MapMarkFromType result = MapMarkFromTypeOuterClass.MapMarkFromType.forNumber(fromType_);
        return result == null ? MapMarkFromTypeOuterClass.MapMarkFromType.UNRECOGNIZED : result;
      }
      /**
       * <code>.MapMarkFromType from_type = 6;</code>
       * @param value The fromType to set.
       * @return This builder for chaining.
       */
      public Builder setFromType(MapMarkFromTypeOuterClass.MapMarkFromType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        fromType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.MapMarkFromType from_type = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearFromType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        fromType_ = 0;
        onChanged();
        return this;
      }

      private int questId_ ;
      /**
       * <code>uint32 quest_id = 7;</code>
       * @return The questId.
       */
      @Override
      public int getQuestId() {
        return questId_;
      }
      /**
       * <code>uint32 quest_id = 7;</code>
       * @param value The questId to set.
       * @return This builder for chaining.
       */
      public Builder setQuestId(int value) {

        questId_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 quest_id = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearQuestId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        questId_ = 0;
        onChanged();
        return this;
      }

      private int hJMMAOMEHOL_ ;
      /**
       * <code>uint32 HJMMAOMEHOL = 8;</code>
       * @return The hJMMAOMEHOL.
       */
      @Override
      public int getHJMMAOMEHOL() {
        return hJMMAOMEHOL_;
      }
      /**
       * <code>uint32 HJMMAOMEHOL = 8;</code>
       * @param value The hJMMAOMEHOL to set.
       * @return This builder for chaining.
       */
      public Builder setHJMMAOMEHOL(int value) {

        hJMMAOMEHOL_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 HJMMAOMEHOL = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearHJMMAOMEHOL() {
        bitField0_ = (bitField0_ & ~0x00000080);
        hJMMAOMEHOL_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:MapMarkPoint)
    }

    // @@protoc_insertion_point(class_scope:MapMarkPoint)
    private static final MapMarkPoint DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new MapMarkPoint();
    }

    public static MapMarkPoint getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MapMarkPoint>
        PARSER = new com.google.protobuf.AbstractParser<MapMarkPoint>() {
      @Override
      public MapMarkPoint parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MapMarkPoint> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<MapMarkPoint> getParserForType() {
      return PARSER;
    }

    @Override
    public MapMarkPoint getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MapMarkPoint_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MapMarkPoint_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\022MapMarkPoint.proto\032\014Vector.proto\032\026MapM" +
      "arkPointType.proto\032\025MapMarkFromType.prot" +
      "o\"\313\001\n\014MapMarkPoint\022\020\n\010scene_id\030\001 \001(\r\022\014\n\004" +
      "name\030\002 \001(\t\022\024\n\003pos\030\003 \001(\0132\007.Vector\022%\n\npoin" +
      "t_type\030\004 \001(\0162\021.MapMarkPointType\022\022\n\nmonst" +
      "er_id\030\005 \001(\r\022#\n\tfrom_type\030\006 \001(\0162\020.MapMark" +
      "FromType\022\020\n\010quest_id\030\007 \001(\r\022\023\n\013HJMMAOMEHO" +
      "L\030\010 \001(\rB\032\n\030io.irminsul.common.protob\006pro" +
      "to3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          VectorOuterClass.getDescriptor(),
          MapMarkPointTypeOuterClass.getDescriptor(),
          MapMarkFromTypeOuterClass.getDescriptor(),
        });
    internal_static_MapMarkPoint_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_MapMarkPoint_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_MapMarkPoint_descriptor,
        new String[] { "SceneId", "Name", "Pos", "PointType", "MonsterId", "FromType", "QuestId", "HJMMAOMEHOL", });
    descriptor.resolveAllFeaturesImmutable();
    VectorOuterClass.getDescriptor();
    MapMarkPointTypeOuterClass.getDescriptor();
    MapMarkFromTypeOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
